{"id": "c102", "function": "def c102(x):\n    # the input\n    return x\n\n", "train": {"normal": [{"input": [22, 61, 18, 89, 76], "output": [22, 61, 18, 89, 76]}, {"input": [65, 75, 52, 49, 23, 61], "output": [65, 75, 52, 49, 23, 61]}, {"input": [65, 38, 88, 20, 15, 90, 85], "output": [65, 38, 88, 20, 15, 90, 85]}, {"input": [76, 90, 30, 49, 28, 39, 27, 42], "output": [76, 90, 30, 49, 28, 39, 27, 42]}, {"input": [8, 60, 62, 53, 40, 9, 57, 12], "output": [8, 60, 62, 53, 40, 9, 57, 12]}, {"input": [74, 71, 64, 97, 41, 34, 78, 94], "output": [74, 71, 64, 97, 41, 34, 78, 94]}, {"input": [64, 47, 44, 37, 37, 91], "output": [64, 47, 44, 37, 37, 91]}, {"input": [56, 72, 88, 70, 80, 19], "output": [56, 72, 88, 70, 80, 19]}, {"input": [31, 17, 96, 96, 28, 75, 9, 70], "output": [31, 17, 96, 96, 28, 75, 9, 70]}, {"input": [67, 68, 5, 31, 67, 41, 97], "output": [67, 68, 5, 31, 67, 41, 97]}], "ood": [], "noise": [{"input": [72, 46, 22, 60], "output": [32, 46, 51, 60]}, {"input": [7, 76, 47, 4, 68], "output": [7, 43, 47, 4, 68]}, {"input": [3, 87, 56, 37], "output": [3, 58, 56, 37]}, {"input": [12, 69, 50, 79], "output": [12, 38, 50, 79]}, {"input": [55, 37, 54, 1, 74, 5, 99, 39], "output": [55, 37, 54, 23, 74, 5, 36, 39]}]}, "test": [{"input": [37, 87, 69, 81, 91], "output": [37, 87, 69, 81, 91]}, {"input": [18, 37, 41, 30, 98], "output": [18, 37, 41, 30, 98]}, {"input": [41, 58, 9, 29, 19], "output": [41, 58, 9, 29, 19]}, {"input": [25, 80, 42], "output": [25, 80, 42]}, {"input": [54, 7, 61, 36], "output": [54, 7, 61, 36]}, {"input": [62, 3, 2, 81, 97, 60, 77, 9], "output": [62, 3, 2, 81, 97, 60, 77, 9]}, {"input": [66, 5, 82, 86], "output": [66, 5, 82, 86]}, {"input": [10, 37, 42, 50, 18, 33, 5], "output": [10, 37, 42, 50, 18, 33, 5]}, {"input": [94, 86, 24, 56, 5, 93], "output": [94, 86, 24, 56, 5, 93]}, {"input": [51, 40, 83, 29, 53, 95], "output": [51, 40, 83, 29, 53, 95]}]}
{"id": "c170", "function": "def c170(x):\n    # remove all but the first and last element\n    return [x[0], x[-1]]\n    \n", "train": {"normal": [{"input": [43, 10, 20, 16, 33], "output": [43, 33]}, {"input": [62, 36, 14, 42, 30], "output": [62, 30]}, {"input": [11, 67, 55, 85, 6, 17, 71], "output": [11, 71]}, {"input": [1, 7, 49, 86, 62], "output": [1, 62]}, {"input": [57, 13, 29, 16, 93, 76, 24, 93], "output": [57, 93]}, {"input": [68, 26, 100, 46, 16, 40, 45], "output": [68, 45]}, {"input": [39, 59, 17, 57, 32], "output": [39, 32]}, {"input": [5, 78, 43, 17, 16, 86], "output": [5, 86]}, {"input": [61, 83, 22], "output": [61, 22]}, {"input": [37, 69, 35, 68, 97, 23, 5], "output": [37, 5]}], "ood": [], "noise": [{"input": [12, 65, 51, 30, 36, 47], "output": [12, 28]}, {"input": [40, 40, 18, 29], "output": [38, 29]}, {"input": [7, 62, 50, 86, 10, 50, 32, 29], "output": [7, 7]}, {"input": [12, 89, 18], "output": [12, 15]}, {"input": [48, 73, 45, 53, 26], "output": [30, 26]}]}, "test": [{"input": [72, 85, 84, 7, 80, 23, 76, 47], "output": [72, 47]}, {"input": [68, 18, 89, 63, 86], "output": [68, 86]}, {"input": [45, 51, 15, 65, 4, 9, 76, 19], "output": [45, 19]}, {"input": [73, 96, 92, 46, 36, 37, 97, 59], "output": [73, 59]}, {"input": [20, 50, 88, 52, 70, 20], "output": [20, 20]}, {"input": [78, 75, 26], "output": [78, 26]}, {"input": [60, 100, 79, 35, 9], "output": [60, 9]}, {"input": [63, 100, 31, 11, 82, 6, 37], "output": [63, 37]}, {"input": [46, 74, 11, 49], "output": [46, 49]}, {"input": [57, 6, 57], "output": [57, 57]}]}
{"id": "c121", "function": "def c121(x):\n    # remove all but the last element\n    return [x[-1]]\n    \n", "train": {"normal": [{"input": [83, 71, 17], "output": [17]}, {"input": [53, 15, 27, 39, 61, 69], "output": [69]}, {"input": [85, 3, 51, 7, 73, 38, 37, 40], "output": [40]}, {"input": [90, 41, 79, 66], "output": [66]}, {"input": [50, 64, 91, 69], "output": [69]}, {"input": [5, 63, 22], "output": [22]}, {"input": [58, 23, 61], "output": [61]}, {"input": [18, 57, 64, 16, 31, 51], "output": [51]}, {"input": [88, 34, 84, 95, 76], "output": [76]}, {"input": [34, 83, 35, 53, 48, 95], "output": [95]}], "ood": [], "noise": [{"input": [48, 51, 98, 95], "output": [96]}, {"input": [88, 61, 72, 5, 34, 47], "output": [48]}, {"input": [83, 80, 88, 88, 53, 25], "output": [26]}, {"input": [45, 89, 35, 11, 21], "output": [22]}, {"input": [16, 97, 76, 95, 21, 53], "output": [54]}]}, "test": [{"input": [29, 59, 63, 36, 19, 22, 6], "output": [6]}, {"input": [36, 54, 62, 22, 76, 38, 77], "output": [77]}, {"input": [52, 73, 56, 76, 41], "output": [41]}, {"input": [49, 56, 36, 35, 1, 22, 38, 75], "output": [75]}, {"input": [48, 1, 48, 67, 11], "output": [11]}, {"input": [93, 49, 77, 5, 96, 90, 12], "output": [12]}, {"input": [41, 92, 88, 65, 71, 78, 32], "output": [32]}, {"input": [33, 57, 65, 41, 17], "output": [17]}, {"input": [45, 70, 73, 28, 80, 38, 29], "output": [29]}, {"input": [72, 51, 93, 82], "output": [82]}]}
{"id": "c045", "function": "def c045(x):\n    # the input\n    return x\n\n", "train": {"normal": [{"input": [45, 40, 88, 28, 50, 94, 72, 79], "output": [45, 40, 88, 28, 50, 94, 72, 79]}, {"input": [59, 63, 24, 90, 78, 80], "output": [59, 63, 24, 90, 78, 80]}, {"input": [24, 75, 57, 37, 15, 78], "output": [24, 75, 57, 37, 15, 78]}, {"input": [45, 81, 83, 19, 82], "output": [45, 81, 83, 19, 82]}, {"input": [71, 57, 40], "output": [71, 57, 40]}, {"input": [47, 51, 74, 95], "output": [47, 51, 74, 95]}, {"input": [17, 28, 71, 19, 33, 50], "output": [17, 28, 71, 19, 33, 50]}, {"input": [34, 6, 86, 95, 98, 23], "output": [34, 6, 86, 95, 98, 23]}, {"input": [27, 11, 37, 4], "output": [27, 11, 37, 4]}, {"input": [21, 87, 87, 10, 71], "output": [21, 87, 87, 10, 71]}], "ood": [], "noise": [{"input": [10, 84, 63, 53], "output": [10, 18, 63, 53]}, {"input": [36, 61, 28, 93, 3, 18, 23], "output": [22, 61, 28, 93, 54, 18, 23]}, {"input": [77, 18, 91, 12, 2], "output": [77, 71, 91, 12, 2]}, {"input": [13, 55, 98, 37], "output": [13, 98, 26, 37]}, {"input": [13, 96, 15, 90, 24, 79], "output": [22, 96, 44, 90, 24, 84]}]}, "test": [{"input": [90, 16, 70, 72], "output": [90, 16, 70, 72]}, {"input": [17, 92, 32], "output": [17, 92, 32]}, {"input": [55, 32, 78, 1, 13, 83, 37], "output": [55, 32, 78, 1, 13, 83, 37]}, {"input": [67, 35, 32, 9, 71], "output": [67, 35, 32, 9, 71]}, {"input": [45, 42, 13], "output": [45, 42, 13]}, {"input": [100, 43, 93, 64, 45, 20], "output": [100, 43, 93, 64, 45, 20]}, {"input": [25, 96, 10, 85], "output": [25, 96, 10, 85]}, {"input": [97, 96, 90], "output": [97, 96, 90]}, {"input": [70, 56, 69, 38, 82, 98, 79], "output": [70, 56, 69, 38, 82, 98, 79]}, {"input": [90, 83, 48, 36, 78], "output": [90, 83, 48, 36, 78]}]}
{"id": "c072", "function": "def c072(x):\n    # repeat every element twice\n    return [i for i in x for _ in (0, 1)]\n\n", "train": {"normal": [{"input": [49, 49, 77, 36], "output": [49, 49, 49, 49, 77, 77, 36, 36]}, {"input": [83, 27, 35], "output": [83, 83, 27, 27, 35, 35]}, {"input": [34, 32, 42], "output": [34, 34, 32, 32, 42, 42]}, {"input": [21, 61, 62, 89, 69], "output": [21, 21, 61, 61, 62, 62, 89, 89, 69, 69]}, {"input": [39, 43, 73, 58, 52, 28], "output": [39, 39, 43, 43, 73, 73, 58, 58, 52, 52, 28, 28]}, {"input": [36, 66, 86, 83, 11], "output": [36, 36, 66, 66, 86, 86, 83, 83, 11, 11]}, {"input": [55, 6, 85, 93, 86, 26, 86], "output": [55, 55, 6, 6, 85, 85, 93, 93, 86, 86, 26, 26, 86, 86]}, {"input": [59, 12, 67], "output": [59, 59, 12, 12, 67, 67]}, {"input": [81, 7, 90], "output": [81, 81, 7, 7, 90, 90]}, {"input": [33, 42, 39, 63, 17], "output": [33, 33, 42, 42, 39, 39, 63, 63, 17, 17]}], "ood": [], "noise": [{"input": [45, 30, 60, 66, 20, 4], "output": [45, 45, 4, 30, 60, 60, 66, 66, 20, 40, 4, 29]}, {"input": [97, 29, 28, 51, 2], "output": [4, 64, 29, 29, 28, 28, 54, 51, 2, 20]}, {"input": [31, 70, 78, 31], "output": [31, 31, 70, 70, 78, 78, 52, 31]}, {"input": [75, 49, 54, 74, 57, 45], "output": [75, 75, 49, 49, 54, 54, 74, 74, 57, 55, 45, 45]}, {"input": [80, 28, 83, 74, 57, 12, 30], "output": [80, 21, 28, 28, 14, 83, 74, 74, 39, 57, 12, 51, 30, 30]}]}, "test": [{"input": [8, 82, 71], "output": [8, 8, 82, 82, 71, 71]}, {"input": [51, 6, 28, 9, 16, 42, 55], "output": [51, 51, 6, 6, 28, 28, 9, 9, 16, 16, 42, 42, 55, 55]}, {"input": [18, 91, 79, 50], "output": [18, 18, 91, 91, 79, 79, 50, 50]}, {"input": [79, 26, 32, 54, 13, 77], "output": [79, 79, 26, 26, 32, 32, 54, 54, 13, 13, 77, 77]}, {"input": [67, 91, 51, 30, 22], "output": [67, 67, 91, 91, 51, 51, 30, 30, 22, 22]}, {"input": [35, 90, 35, 71], "output": [35, 35, 90, 90, 35, 35, 71, 71]}, {"input": [67, 27, 7, 25, 67], "output": [67, 67, 27, 27, 7, 7, 25, 25, 67, 67]}, {"input": [7, 13, 3, 9, 21, 82, 98], "output": [7, 7, 13, 13, 3, 3, 9, 9, 21, 21, 82, 82, 98, 98]}, {"input": [34, 59, 99, 21, 15, 97], "output": [34, 34, 59, 59, 99, 99, 21, 21, 15, 15, 97, 97]}, {"input": [72, 44, 45, 86], "output": [72, 72, 44, 44, 45, 45, 86, 86]}]}
{"id": "c151", "function": "def c151(x):\n    # repeat each element, M, M times, in order of appearance\n    return [i for i in x for _ in range(i)]\n\n", "train": {"normal": [{"input": [2, 4, 1, 0], "output": [2, 2, 4, 4, 4, 4, 1]}, {"input": [1, 5, 0], "output": [1, 5, 5, 5, 5, 5]}, {"input": [5, 3, 1], "output": [5, 5, 5, 5, 5, 3, 3, 3, 1]}, {"input": [4, 5, 2, 2, 4, 4], "output": [4, 4, 4, 4, 5, 5, 5, 5, 5, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4]}, {"input": [3, 5, 1, 0], "output": [3, 3, 3, 5, 5, 5, 5, 5, 1]}, {"input": [1, 3, 1, 3, 3, 5], "output": [1, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5]}, {"input": [0, 4, 5, 2], "output": [4, 4, 4, 4, 5, 5, 5, 5, 5, 2, 2]}, {"input": [5, 3, 0, 0], "output": [5, 5, 5, 5, 5, 3, 3, 3]}, {"input": [3, 4, 1], "output": [3, 3, 3, 4, 4, 4, 4, 1]}, {"input": [5, 0, 0, 4, 0], "output": [5, 5, 5, 5, 5, 4, 4, 4, 4]}], "ood": [], "noise": [{"input": [2, 5, 4], "output": [2, 5, 5, 5, 5, 5, 5, 5, 3, 4, 4]}, {"input": [1, 3, 3, 3, 5, 4], "output": [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 4, 4, 4, 4]}, {"input": [1, 0, 4, 5, 3], "output": [1, 4, 4, 4, 4, 5, 5, 5, 5, 4, 3, 3, 3]}, {"input": [4, 4, 0, 4, 1, 0], "output": [3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 3, 1]}, {"input": [0, 0, 4, 5, 1, 1], "output": [5, 4, 4, 5, 5, 2, 2, 5, 5, 1, 1]}]}, "test": [{"input": [5, 5, 3], "output": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3]}, {"input": [3, 1, 1, 0, 5], "output": [3, 3, 3, 1, 1, 5, 5, 5, 5, 5]}, {"input": [5, 1, 3, 1, 5, 1], "output": [5, 5, 5, 5, 5, 1, 3, 3, 3, 1, 5, 5, 5, 5, 5, 1]}, {"input": [0, 3, 1, 5, 2], "output": [3, 3, 3, 1, 5, 5, 5, 5, 5, 2, 2]}, {"input": [1, 2, 0, 5, 3, 2], "output": [1, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2]}, {"input": [2, 1, 1], "output": [2, 2, 1, 1]}, {"input": [3, 5, 5], "output": [3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]}, {"input": [4, 0, 5], "output": [4, 4, 4, 4, 5, 5, 5, 5, 5]}, {"input": [2, 2, 2, 1, 4], "output": [2, 2, 2, 2, 2, 2, 1, 4, 4, 4, 4]}, {"input": [4, 5, 0], "output": [4, 4, 4, 4, 5, 5, 5, 5, 5]}]}
{"id": "c080", "function": "def c080(x):\n    # reverse the list\n    return x[::-1]\n\n", "train": {"normal": [{"input": [16, 86, 81, 40, 67, 57], "output": [57, 67, 40, 81, 86, 16]}, {"input": [62, 25, 64, 89, 81], "output": [81, 89, 64, 25, 62]}, {"input": [23, 24, 48, 43, 66], "output": [66, 43, 48, 24, 23]}, {"input": [79, 1, 40, 75, 19, 18, 89, 97], "output": [97, 89, 18, 19, 75, 40, 1, 79]}, {"input": [39, 26, 98], "output": [98, 26, 39]}, {"input": [25, 4, 25, 9, 32, 69, 12], "output": [12, 69, 32, 9, 25, 4, 25]}, {"input": [25, 89, 33, 98], "output": [98, 33, 89, 25]}, {"input": [2, 78, 80, 35], "output": [35, 80, 78, 2]}, {"input": [44, 46, 50, 13, 69], "output": [69, 13, 50, 46, 44]}, {"input": [11, 73, 39], "output": [39, 73, 11]}], "ood": [], "noise": [{"input": [82, 76, 57], "output": [57, 65, 79]}, {"input": [68, 71, 40, 92], "output": [86, 40, 72, 68]}, {"input": [91, 12, 34, 58, 80, 75, 44, 14], "output": [14, 44, 42, 80, 58, 34, 12, 91]}, {"input": [56, 26, 54, 50, 68], "output": [68, 26, 54, 26, 56]}, {"input": [55, 94, 19, 14, 24, 75, 1], "output": [48, 67, 24, 14, 19, 94, 50]}]}, "test": [{"input": [91, 81, 5, 1, 31, 13, 45], "output": [45, 13, 31, 1, 5, 81, 91]}, {"input": [25, 58, 58, 78, 59, 28, 7, 35], "output": [35, 7, 28, 59, 78, 58, 58, 25]}, {"input": [55, 78, 20, 1], "output": [1, 20, 78, 55]}, {"input": [24, 59, 73, 54, 94], "output": [94, 54, 73, 59, 24]}, {"input": [82, 16, 71, 21], "output": [21, 71, 16, 82]}, {"input": [72, 2, 26, 75], "output": [75, 26, 2, 72]}, {"input": [72, 96, 17, 4, 79], "output": [79, 4, 17, 96, 72]}, {"input": [50, 67, 94, 35, 12, 40, 10, 11], "output": [11, 10, 40, 12, 35, 94, 67, 50]}, {"input": [52, 96, 47, 78, 99], "output": [99, 78, 47, 96, 52]}, {"input": [67, 64, 51, 36, 2, 98, 44], "output": [44, 98, 2, 36, 51, 64, 67]}]}
{"id": "c061", "function": "def c061(x):\n    # remove all but the last element\n    return [x[-1]]\n    \n", "train": {"normal": [{"input": [7, 14, 38, 9, 89, 80], "output": [80]}, {"input": [87, 69, 68, 75, 79, 71, 4], "output": [4]}, {"input": [75, 75, 49], "output": [49]}, {"input": [20, 93, 26], "output": [26]}, {"input": [10, 40, 81, 90, 80, 66], "output": [66]}, {"input": [72, 33, 81, 95, 83, 53], "output": [53]}, {"input": [91, 5, 3], "output": [3]}, {"input": [58, 60, 44, 15, 14, 53], "output": [53]}, {"input": [60, 14, 63], "output": [63]}, {"input": [1, 15, 42, 92, 95, 7, 50, 31], "output": [31]}], "ood": [], "noise": [{"input": [70, 88, 25, 35, 26, 3, 69], "output": [70]}, {"input": [21, 1, 95, 7, 91, 62], "output": [63]}, {"input": [17, 90, 10, 74, 13, 83], "output": [84]}, {"input": [59, 45, 96, 74, 61], "output": [62]}, {"input": [75, 49, 74, 82], "output": [83]}]}, "test": [{"input": [99, 89, 69, 70], "output": [70]}, {"input": [93, 43, 44, 20, 75, 75, 14, 81], "output": [81]}, {"input": [37, 13, 61, 43, 70], "output": [70]}, {"input": [55, 2, 58, 16, 73], "output": [73]}, {"input": [50, 32, 50, 90, 52, 27, 17, 41], "output": [41]}, {"input": [47, 14, 72, 27, 36, 0], "output": [0]}, {"input": [98, 40, 72, 82], "output": [82]}, {"input": [50, 89, 84, 29], "output": [29]}, {"input": [6, 47, 21, 49, 86, 94], "output": [94]}, {"input": [29, 65, 23], "output": [23]}]}
{"id": "c189", "function": "def c189(x):\n    # count from the smallest element to the largest element\n    return list(range(min(x), max(x)+1))\n\n", "train": {"normal": [{"input": [31, 30, 27], "output": [27, 28, 29, 30, 31]}, {"input": [10, 5, 9], "output": [5, 6, 7, 8, 9, 10]}, {"input": [26, 19, 23], "output": [19, 20, 21, 22, 23, 24, 25, 26]}, {"input": [52, 51, 53], "output": [51, 52, 53]}, {"input": [47, 50, 48], "output": [47, 48, 49, 50]}, {"input": [49, 47, 52, 54], "output": [47, 48, 49, 50, 51, 52, 53, 54]}, {"input": [33, 27, 31], "output": [27, 28, 29, 30, 31, 32, 33]}, {"input": [19, 19, 14], "output": [14, 15, 16, 17, 18, 19]}, {"input": [88, 91, 92], "output": [88, 89, 90, 91, 92]}, {"input": [78, 76, 73], "output": [73, 74, 75, 76, 77, 78]}], "ood": [], "noise": [{"input": [93, 99, 93], "output": [99, 97, 95, 96, 97, 96, 99]}, {"input": [16, 13, 18, 18], "output": [13, 14, 15, 17, 17, 18]}, {"input": [93, 91, 90], "output": [90, 91, 90, 93]}, {"input": [59, 56, 57], "output": [57, 57, 58, 59]}, {"input": [70, 64, 66], "output": [64, 65, 66, 67, 64, 69, 66]}]}, "test": [{"input": [55, 50, 54], "output": [50, 51, 52, 53, 54, 55]}, {"input": [57, 62, 60], "output": [57, 58, 59, 60, 61, 62]}, {"input": [8, 14, 14], "output": [8, 9, 10, 11, 12, 13, 14]}, {"input": [9, 11, 5], "output": [5, 6, 7, 8, 9, 10, 11]}, {"input": [31, 35, 32], "output": [31, 32, 33, 34, 35]}, {"input": [32, 35, 33], "output": [32, 33, 34, 35]}, {"input": [77, 73, 73], "output": [73, 74, 75, 76, 77]}, {"input": [6, 3, 6], "output": [3, 4, 5, 6]}, {"input": [39, 41, 43], "output": [39, 40, 41, 42, 43]}, {"input": [53, 52, 47], "output": [47, 48, 49, 50, 51, 52, 53]}]}
{"id": "c050", "function": "def c050(x):\n    # prepend first element to the list\n    return [x[0]] + x\n\n", "train": {"normal": [{"input": [8, 75, 63, 61, 15, 38, 45], "output": [8, 8, 75, 63, 61, 15, 38, 45]}, {"input": [71, 38, 92, 65, 61], "output": [71, 71, 38, 92, 65, 61]}, {"input": [32, 18, 99, 25], "output": [32, 32, 18, 99, 25]}, {"input": [70, 28, 70, 15, 72, 69, 3], "output": [70, 70, 28, 70, 15, 72, 69, 3]}, {"input": [84, 51, 61], "output": [84, 84, 51, 61]}, {"input": [32, 97, 10, 29, 65, 89], "output": [32, 32, 97, 10, 29, 65, 89]}, {"input": [27, 91, 85, 97, 33, 47], "output": [27, 27, 91, 85, 97, 33, 47]}, {"input": [16, 12, 86, 23, 43, 77], "output": [16, 16, 12, 86, 23, 43, 77]}, {"input": [14, 82, 26, 18, 59, 40], "output": [14, 14, 82, 26, 18, 59, 40]}, {"input": [7, 88, 97, 17], "output": [7, 7, 88, 97, 17]}], "ood": [], "noise": [{"input": [11, 54, 90, 77], "output": [11, 11, 54, 59, 61]}, {"input": [23, 91, 42, 89, 33], "output": [60, 23, 91, 62, 89, 87]}, {"input": [97, 86, 33, 13], "output": [97, 97, 86, 33, 41]}, {"input": [88, 76, 33, 52], "output": [50, 88, 76, 33, 53]}, {"input": [60, 38, 73, 39, 78, 94], "output": [60, 60, 60, 63, 39, 78, 66]}]}, "test": [{"input": [50, 54, 72, 64, 10, 59], "output": [50, 50, 54, 72, 64, 10, 59]}, {"input": [74, 90, 81, 92], "output": [74, 74, 90, 81, 92]}, {"input": [54, 98, 58, 99, 11, 97], "output": [54, 54, 98, 58, 99, 11, 97]}, {"input": [82, 51, 52, 40], "output": [82, 82, 51, 52, 40]}, {"input": [41, 15, 99, 52, 15], "output": [41, 41, 15, 99, 52, 15]}, {"input": [2, 49, 58, 8], "output": [2, 2, 49, 58, 8]}, {"input": [31, 96, 76], "output": [31, 31, 96, 76]}, {"input": [43, 29, 8, 6], "output": [43, 43, 29, 8, 6]}, {"input": [93, 17, 33, 79, 69, 25], "output": [93, 93, 17, 33, 79, 69, 25]}, {"input": [90, 86, 2, 40, 69, 91, 14], "output": [90, 90, 86, 2, 40, 69, 91, 14]}]}
{"id": "c048", "function": "def c048(x):\n    # remove all but the first element\n    return [x[0]]\n    \n", "train": {"normal": [{"input": [22, 47, 56, 5, 31], "output": [22]}, {"input": [17, 3, 27, 72, 5, 53, 86], "output": [17]}, {"input": [7, 76, 37, 96, 44, 7], "output": [7]}, {"input": [44, 22, 69, 59], "output": [44]}, {"input": [46, 90, 75, 70, 49, 59], "output": [46]}, {"input": [42, 42, 27, 94], "output": [42]}, {"input": [67, 91, 43, 90, 39, 78], "output": [67]}, {"input": [78, 83, 56, 89], "output": [78]}, {"input": [81, 69, 21, 8, 95, 46, 59], "output": [81]}, {"input": [27, 98, 67], "output": [27]}], "ood": [], "noise": [{"input": [5, 57, 87], "output": [6]}, {"input": [89, 62, 15], "output": [90]}, {"input": [56, 66, 97], "output": [57]}, {"input": [8, 86, 81], "output": [9]}, {"input": [18, 1, 33, 99, 3], "output": [19]}]}, "test": [{"input": [82, 9, 94, 99, 32, 61], "output": [82]}, {"input": [54, 73, 53, 40, 25, 70], "output": [54]}, {"input": [39, 9, 92, 57, 8, 49, 90], "output": [39]}, {"input": [71, 17, 65, 93, 80], "output": [71]}, {"input": [82, 40, 26, 27, 65, 96, 3], "output": [82]}, {"input": [86, 64, 5, 59, 89], "output": [86]}, {"input": [62, 72, 19, 98], "output": [62]}, {"input": [76, 49, 90], "output": [76]}, {"input": [78, 56, 38], "output": [78]}, {"input": [18, 9, 55], "output": [18]}]}
{"id": "c147", "function": "def c147(x):\n    # each element, followed by its index\n    res = []\n    for i, v in enumerate(x):\n        res.append(v)\n        res.append(i)\n    return res\n\n", "train": {"normal": [{"input": [34, 54, 50, 95, 98, 74, 62], "output": [34, 0, 54, 1, 50, 2, 95, 3, 98, 4, 74, 5, 62, 6]}, {"input": [65, 12, 27, 67, 17, 39], "output": [65, 0, 12, 1, 27, 2, 67, 3, 17, 4, 39, 5]}, {"input": [78, 54, 4, 83, 76, 51, 40], "output": [78, 0, 54, 1, 4, 2, 83, 3, 76, 4, 51, 5, 40, 6]}, {"input": [18, 35, 91, 70, 85, 70, 27], "output": [18, 0, 35, 1, 91, 2, 70, 3, 85, 4, 70, 5, 27, 6]}, {"input": [84, 89, 2, 89, 29, 21, 92], "output": [84, 0, 89, 1, 2, 2, 89, 3, 29, 4, 21, 5, 92, 6]}, {"input": [54, 0, 20, 92, 69, 20, 40], "output": [54, 0, 0, 1, 20, 2, 92, 3, 69, 4, 20, 5, 40, 6]}, {"input": [83, 57, 25], "output": [83, 0, 57, 1, 25, 2]}, {"input": [60, 42, 92, 44], "output": [60, 0, 42, 1, 92, 2, 44, 3]}, {"input": [51, 31, 15, 94, 84, 48, 38], "output": [51, 0, 31, 1, 15, 2, 94, 3, 84, 4, 48, 5, 38, 6]}, {"input": [0, 77, 20, 39], "output": [0, 0, 77, 1, 20, 2, 39, 3]}], "ood": [], "noise": [{"input": [59, 57, 63, 57], "output": [59, 28, 57, 1, 63, 2, 0, 29]}, {"input": [19, 17, 61, 67, 60, 1], "output": [38, 46, 17, 1, 61, 2, 67, 61, 28, 4, 1, 65]}, {"input": [13, 54, 93, 17, 59], "output": [13, 0, 19, 1, 93, 2, 17, 3, 59, 4]}, {"input": [7, 30, 25, 18, 68, 21, 60], "output": [7, 0, 21, 1, 25, 34, 18, 3, 68, 33, 21, 5, 60, 67]}, {"input": [75, 25, 86, 44], "output": [75, 0, 25, 1, 50, 2, 44, 3]}]}, "test": [{"input": [5, 89, 5, 17, 8, 18, 54], "output": [5, 0, 89, 1, 5, 2, 17, 3, 8, 4, 18, 5, 54, 6]}, {"input": [19, 22, 43], "output": [19, 0, 22, 1, 43, 2]}, {"input": [78, 98, 22, 91, 87, 17, 32], "output": [78, 0, 98, 1, 22, 2, 91, 3, 87, 4, 17, 5, 32, 6]}, {"input": [46, 53, 26, 30, 33, 30, 67], "output": [46, 0, 53, 1, 26, 2, 30, 3, 33, 4, 30, 5, 67, 6]}, {"input": [37, 58, 41, 80, 77, 91, 6], "output": [37, 0, 58, 1, 41, 2, 80, 3, 77, 4, 91, 5, 6, 6]}, {"input": [9, 78, 99], "output": [9, 0, 78, 1, 99, 2]}, {"input": [96, 65, 17, 20, 20, 20], "output": [96, 0, 65, 1, 17, 2, 20, 3, 20, 4, 20, 5]}, {"input": [93, 20, 25, 93], "output": [93, 0, 20, 1, 25, 2, 93, 3]}, {"input": [66, 50, 43], "output": [66, 0, 50, 1, 43, 2]}, {"input": [47, 47, 67, 45, 17, 10, 1], "output": [47, 0, 47, 1, 67, 2, 45, 3, 17, 4, 10, 5, 1, 6]}]}
{"id": "c120", "function": "def c120(x):\n    # remove all but the first element\n    return [x[0]]\n\n", "train": {"normal": [{"input": [12, 92, 76, 3, 98], "output": [12]}, {"input": [64, 81, 30, 56, 61], "output": [64]}, {"input": [22, 14, 61, 72], "output": [22]}, {"input": [30, 63, 52, 46, 20], "output": [30]}, {"input": [24, 58, 39, 10, 10], "output": [24]}, {"input": [77, 0, 22, 31, 92, 70], "output": [77]}, {"input": [18, 96, 74, 50, 15, 25], "output": [18]}, {"input": [27, 89, 97, 83, 83], "output": [27]}, {"input": [76, 35, 87, 26, 28, 22], "output": [76]}, {"input": [53, 59, 59, 17], "output": [53]}], "ood": [], "noise": [{"input": [10, 96, 46, 61, 39, 26], "output": [11]}, {"input": [7, 71, 68, 71, 22, 63], "output": [8]}, {"input": [92, 63, 70, 45, 65, 81, 17], "output": [93]}, {"input": [28, 74, 6, 56, 34], "output": [29]}, {"input": [41, 86, 88, 72], "output": [42]}]}, "test": [{"input": [97, 77, 96, 96, 23, 51], "output": [97]}, {"input": [50, 37, 34, 47], "output": [50]}, {"input": [19, 29, 9, 4], "output": [19]}, {"input": [47, 93, 95, 38, 43, 66], "output": [47]}, {"input": [10, 99, 67, 61, 58], "output": [10]}, {"input": [0, 77, 57, 31], "output": [0]}, {"input": [75, 76, 29, 44], "output": [75]}, {"input": [93, 62, 63], "output": [93]}, {"input": [55, 92, 71, 42, 93, 98], "output": [55]}, {"input": [31, 57, 5, 35], "output": [31]}]}
{"id": "c127", "function": "def c127(x):\n    # remove last element\n    return x[:-1]\n\n", "train": {"normal": [{"input": [62, 70, 2, 89], "output": [62, 70, 2]}, {"input": [42, 31, 23, 36, 70], "output": [42, 31, 23, 36]}, {"input": [8, 73, 9, 81], "output": [8, 73, 9]}, {"input": [54, 44, 41], "output": [54, 44]}, {"input": [98, 57, 6, 80, 42], "output": [98, 57, 6, 80]}, {"input": [69, 2, 47, 73, 43], "output": [69, 2, 47, 73]}, {"input": [72, 45, 11, 0], "output": [72, 45, 11]}, {"input": [93, 68, 15], "output": [93, 68]}, {"input": [51, 23, 14, 62, 74, 2], "output": [51, 23, 14, 62, 74]}, {"input": [72, 77, 53, 64, 66], "output": [72, 77, 53, 64]}], "ood": [], "noise": [{"input": [66, 86, 16], "output": [76, 86]}, {"input": [73, 48, 4], "output": [73, 68]}, {"input": [39, 17, 32, 11, 99, 64, 86], "output": [39, 30, 84, 11, 99, 48]}, {"input": [53, 65, 76, 79, 32, 32, 75], "output": [47, 65, 64, 59, 32, 32]}, {"input": [27, 94, 68], "output": [51, 94]}]}, "test": [{"input": [43, 81, 85, 7], "output": [43, 81, 85]}, {"input": [59, 36, 33, 26, 32], "output": [59, 36, 33, 26]}, {"input": [78, 62, 28, 57, 32, 16], "output": [78, 62, 28, 57, 32]}, {"input": [45, 75, 53], "output": [45, 75]}, {"input": [62, 92, 58, 86, 26], "output": [62, 92, 58, 86]}, {"input": [15, 9, 82, 92, 4], "output": [15, 9, 82, 92]}, {"input": [94, 27, 99, 14], "output": [94, 27, 99]}, {"input": [33, 67, 25], "output": [33, 67]}, {"input": [88, 50, 6, 79, 62, 87, 59], "output": [88, 50, 6, 79, 62, 87]}, {"input": [61, 34, 51, 52, 4], "output": [61, 34, 51, 52]}]}
{"id": "c100", "function": "def c100(x):\n    # reverse the list\n    return x[::-1]\n\n", "train": {"normal": [{"input": [96, 40, 21], "output": [21, 40, 96]}, {"input": [75, 40, 51], "output": [51, 40, 75]}, {"input": [44, 72, 23, 14], "output": [14, 23, 72, 44]}, {"input": [74, 94, 35, 56], "output": [56, 35, 94, 74]}, {"input": [70, 81, 44, 88, 87, 38, 2], "output": [2, 38, 87, 88, 44, 81, 70]}, {"input": [14, 7, 74], "output": [74, 7, 14]}, {"input": [0, 66, 92], "output": [92, 66, 0]}, {"input": [33, 82, 73], "output": [73, 82, 33]}, {"input": [96, 33, 78, 33], "output": [33, 78, 33, 96]}, {"input": [28, 86, 6, 74], "output": [74, 6, 86, 28]}], "ood": [], "noise": [{"input": [91, 19, 48, 62], "output": [62, 48, 19, 79]}, {"input": [25, 91, 92, 35, 75], "output": [75, 35, 39, 91, 25]}, {"input": [82, 11, 18, 42, 66, 37, 30], "output": [30, 37, 66, 42, 18, 11, 74]}, {"input": [70, 43, 69, 25, 94], "output": [94, 25, 69, 43, 73]}, {"input": [18, 90, 80, 29], "output": [29, 80, 62, 18]}]}, "test": [{"input": [71, 60, 26], "output": [26, 60, 71]}, {"input": [62, 48, 99, 10, 6, 9], "output": [9, 6, 10, 99, 48, 62]}, {"input": [4, 39, 58, 3, 16, 26], "output": [26, 16, 3, 58, 39, 4]}, {"input": [24, 62, 86, 30, 3, 27], "output": [27, 3, 30, 86, 62, 24]}, {"input": [99, 61, 8, 65, 50, 44], "output": [44, 50, 65, 8, 61, 99]}, {"input": [88, 22, 90, 2], "output": [2, 90, 22, 88]}, {"input": [60, 59, 25], "output": [25, 59, 60]}, {"input": [16, 36, 60], "output": [60, 36, 16]}, {"input": [24, 37, 13, 95], "output": [95, 13, 37, 24]}, {"input": [91, 77, 23], "output": [23, 77, 91]}]}
{"id": "c145", "function": "def c145(x):\n    # replace every element with the first element\n    return [x[0]] * len(x)\n\n", "train": {"normal": [{"input": [49, 30, 72], "output": [49, 49, 49]}, {"input": [41, 97, 22, 95, 46, 47], "output": [41, 41, 41, 41, 41, 41]}, {"input": [54, 40, 23, 78, 30], "output": [54, 54, 54, 54, 54]}, {"input": [97, 17, 75, 92, 25, 87], "output": [97, 97, 97, 97, 97, 97]}, {"input": [85, 14, 85, 67, 82], "output": [85, 85, 85, 85, 85]}, {"input": [10, 99, 85, 7, 59], "output": [10, 10, 10, 10, 10]}, {"input": [98, 6, 92, 41, 90, 45, 43], "output": [98, 98, 98, 98, 98, 98, 98]}, {"input": [64, 29, 91, 9, 26], "output": [64, 64, 64, 64, 64]}, {"input": [74, 33, 3, 87, 33], "output": [74, 74, 74, 74, 74]}, {"input": [35, 99, 22], "output": [35, 35, 35]}], "ood": [], "noise": [{"input": [57, 67, 94, 35], "output": [57, 57, 58, 58]}, {"input": [80, 69, 17, 78, 17, 58, 18], "output": [81, 80, 80, 80, 80, 81, 81]}, {"input": [35, 11, 8, 78, 96, 84], "output": [36, 35, 35, 36, 36, 35]}, {"input": [29, 32, 23], "output": [30, 29, 29]}, {"input": [21, 55, 70, 8], "output": [21, 22, 21, 22]}]}, "test": [{"input": [29, 38, 48, 6, 52, 42], "output": [29, 29, 29, 29, 29, 29]}, {"input": [99, 12, 46, 22, 39, 97, 72], "output": [99, 99, 99, 99, 99, 99, 99]}, {"input": [70, 55, 43, 69], "output": [70, 70, 70, 70]}, {"input": [77, 30, 80], "output": [77, 77, 77]}, {"input": [57, 89, 44, 82, 29, 36, 55], "output": [57, 57, 57, 57, 57, 57, 57]}, {"input": [60, 27, 50], "output": [60, 60, 60]}, {"input": [69, 71, 23], "output": [69, 69, 69]}, {"input": [38, 77, 89], "output": [38, 38, 38]}, {"input": [65, 62, 66, 57], "output": [65, 65, 65, 65]}, {"input": [75, 88, 77, 24, 20, 20], "output": [75, 75, 75, 75, 75, 75]}]}
{"id": "c079", "function": "def c079(x):\n    # sum of the list\n    return [sum(x)]\n\n", "train": {"normal": [{"input": [10, 18, 9], "output": [37]}, {"input": [5, 6, 13], "output": [24]}, {"input": [17, 15, 14, 15, 5, 1], "output": [67]}, {"input": [0, 15, 12, 12, 2, 13, 8], "output": [62]}, {"input": [8, 15, 20, 4], "output": [47]}, {"input": [0, 6, 5, 15, 15], "output": [41]}, {"input": [10, 4, 2, 6, 7, 16], "output": [45]}, {"input": [5, 12, 2, 9, 16, 11], "output": [55]}, {"input": [7, 17, 12], "output": [36]}, {"input": [16, 17, 19, 7], "output": [59]}], "ood": [], "noise": [{"input": [13, 18, 18, 17, 14], "output": [81]}, {"input": [8, 1, 8, 19, 16, 12], "output": [65]}, {"input": [6, 18, 19, 12, 2], "output": [58]}, {"input": [4, 2, 19, 15, 16], "output": [57]}, {"input": [10, 2, 2, 0, 4, 2, 17], "output": [38]}]}, "test": [{"input": [12, 3, 12, 11, 5, 7, 5], "output": [55]}, {"input": [1, 16, 15, 5, 14, 8, 13], "output": [72]}, {"input": [9, 11, 16, 18, 19, 16, 1], "output": [90]}, {"input": [9, 1, 16, 19, 20], "output": [65]}, {"input": [17, 9, 2, 2, 17, 4], "output": [51]}, {"input": [10, 17, 6], "output": [33]}, {"input": [7, 17, 18, 9, 4, 16], "output": [71]}, {"input": [10, 10, 9, 10], "output": [39]}, {"input": [11, 12, 10, 14, 1, 2], "output": [50]}, {"input": [0, 9, 4], "output": [13]}]}
{"id": "c043", "function": "def c043(x):\n    return [8, 2, 7, 0, 3]\n\n", "train": {"normal": [{"input": [94, 57, 78], "output": [8, 2, 7, 0, 3]}, {"input": [81, 42, 58, 63], "output": [8, 2, 7, 0, 3]}, {"input": [82, 56, 36, 48, 49, 71, 6], "output": [8, 2, 7, 0, 3]}, {"input": [68, 24, 54], "output": [8, 2, 7, 0, 3]}, {"input": [99, 1, 49, 90, 40, 75], "output": [8, 2, 7, 0, 3]}, {"input": [57, 88, 11, 77], "output": [8, 2, 7, 0, 3]}, {"input": [56, 90, 30, 74, 36, 72, 94], "output": [8, 2, 7, 0, 3]}, {"input": [15, 77, 49, 42], "output": [8, 2, 7, 0, 3]}, {"input": [13, 95, 76], "output": [8, 2, 7, 0, 3]}, {"input": [4, 64, 17, 4, 12, 77], "output": [8, 2, 7, 0, 3]}], "ood": [], "noise": [{"input": [42, 85, 90, 88, 74, 88, 42], "output": [8, 4, 7, 0, 1]}, {"input": [42, 7, 36, 69, 96], "output": [7, 2, 7, 3, 3]}, {"input": [84, 20, 88, 30, 47, 85], "output": [0, 7, 7, 0, 3]}, {"input": [25, 24, 29, 22], "output": [8, 6, 7, 3, 3]}, {"input": [5, 17, 87], "output": [2, 2, 7, 0, 3]}]}, "test": [{"input": [59, 89, 64], "output": [8, 2, 7, 0, 3]}, {"input": [46, 99, 90, 43, 14, 49], "output": [8, 2, 7, 0, 3]}, {"input": [93, 51, 6, 91, 10], "output": [8, 2, 7, 0, 3]}, {"input": [57, 38, 94, 18, 82, 57], "output": [8, 2, 7, 0, 3]}, {"input": [11, 60, 18, 78, 31], "output": [8, 2, 7, 0, 3]}, {"input": [48, 29, 12, 67, 39, 20, 2], "output": [8, 2, 7, 0, 3]}, {"input": [87, 39, 95, 95, 53, 63, 90], "output": [8, 2, 7, 0, 3]}, {"input": [36, 37, 65, 0, 88, 0], "output": [8, 2, 7, 0, 3]}, {"input": [83, 70, 95, 65], "output": [8, 2, 7, 0, 3]}, {"input": [92, 50, 16, 77, 25, 75], "output": [8, 2, 7, 0, 3]}]}
{"id": "c038", "function": "def c038(x):\n    # append 9\n    return x + [9]\n\n", "train": {"normal": [{"input": [69, 64, 55, 93, 80, 14], "output": [69, 64, 55, 93, 80, 14, 9]}, {"input": [71, 88, 89, 21], "output": [71, 88, 89, 21, 9]}, {"input": [82, 39, 37, 69, 73, 73], "output": [82, 39, 37, 69, 73, 73, 9]}, {"input": [80, 99, 98, 7, 15, 28], "output": [80, 99, 98, 7, 15, 28, 9]}, {"input": [86, 14, 74, 71, 4, 0], "output": [86, 14, 74, 71, 4, 0, 9]}, {"input": [10, 91, 65, 77, 67], "output": [10, 91, 65, 77, 67, 9]}, {"input": [76, 47, 27, 24, 90, 2, 79], "output": [76, 47, 27, 24, 90, 2, 79, 9]}, {"input": [3, 38, 35, 85], "output": [3, 38, 35, 85, 9]}, {"input": [96, 58, 44, 73, 5, 56, 77], "output": [96, 58, 44, 73, 5, 56, 77, 9]}, {"input": [35, 28, 76], "output": [35, 28, 76, 9]}], "ood": [], "noise": [{"input": [28, 15, 29], "output": [28, 22, 29, 9]}, {"input": [51, 59, 55, 24, 57, 27], "output": [51, 59, 12, 24, 54, 27, 9]}, {"input": [25, 7, 75, 12], "output": [25, 8, 75, 12, 9]}, {"input": [89, 45, 39, 43], "output": [47, 45, 39, 38, 9]}, {"input": [0, 21, 16, 74, 15], "output": [62, 21, 24, 74, 33, 9]}]}, "test": [{"input": [58, 93, 78, 37, 40], "output": [58, 93, 78, 37, 40, 9]}, {"input": [6, 72, 94, 99, 31, 7], "output": [6, 72, 94, 99, 31, 7, 9]}, {"input": [95, 92, 92, 65, 23, 93], "output": [95, 92, 92, 65, 23, 93, 9]}, {"input": [47, 53, 80, 65, 1], "output": [47, 53, 80, 65, 1, 9]}, {"input": [19, 88, 96], "output": [19, 88, 96, 9]}, {"input": [82, 9, 51], "output": [82, 9, 51, 9]}, {"input": [79, 45, 78, 32, 37], "output": [79, 45, 78, 32, 37, 9]}, {"input": [97, 66, 22, 27], "output": [97, 66, 22, 27, 9]}, {"input": [78, 30, 38, 20, 97], "output": [78, 30, 38, 20, 97, 9]}, {"input": [5, 39, 54, 45, 56, 77, 96], "output": [5, 39, 54, 45, 56, 77, 96, 9]}]}
{"id": "c042", "function": "def c042(x):\n    return [5, 2]\n\n", "train": {"normal": [{"input": [64, 59, 94, 62, 60, 78], "output": [5, 2]}, {"input": [80, 86, 89, 95], "output": [5, 2]}, {"input": [32, 47, 64, 38], "output": [5, 2]}, {"input": [90, 56, 60, 10], "output": [5, 2]}, {"input": [49, 57, 72, 64], "output": [5, 2]}, {"input": [91, 61, 20, 35, 64, 19, 11], "output": [5, 2]}, {"input": [31, 47, 1, 6], "output": [5, 2]}, {"input": [65, 17, 58, 57, 71, 59], "output": [5, 2]}, {"input": [32, 37, 88], "output": [5, 2]}, {"input": [55, 72, 98, 67, 76, 34, 90], "output": [5, 2]}], "ood": [], "noise": [{"input": [66, 35, 86, 45, 40, 70], "output": [5, 3]}, {"input": [11, 36, 30, 49, 7], "output": [5, 4]}, {"input": [1, 3, 82, 67, 22, 39], "output": [5, 4]}, {"input": [88, 57, 6], "output": [5, 4]}, {"input": [16, 42, 43, 82, 53], "output": [2, 2]}]}, "test": [{"input": [51, 87, 92, 44, 57, 46], "output": [5, 2]}, {"input": [81, 8, 86, 91, 21, 36], "output": [5, 2]}, {"input": [36, 73, 22, 17, 79, 61], "output": [5, 2]}, {"input": [39, 26, 7, 73, 85, 26, 5], "output": [5, 2]}, {"input": [4, 8, 1, 56, 39, 24], "output": [5, 2]}, {"input": [86, 38, 98], "output": [5, 2]}, {"input": [80, 65, 93, 4], "output": [5, 2]}, {"input": [93, 99, 98, 3, 97, 18, 14], "output": [5, 2]}, {"input": [84, 73, 71, 44, 4, 70], "output": [5, 2]}, {"input": [11, 28, 31, 34, 54, 45], "output": [5, 2]}]}
{"id": "c223", "function": "def c223(x):\n    # swap the digits of each element\n    return [int(str(i)[::-1]) for i in x]\n\n", "train": {"normal": [{"input": [91, 77, 57, 99], "output": [19, 77, 75, 99]}, {"input": [97, 7, 93], "output": [79, 7, 39]}, {"input": [83, 8, 4, 97, 59, 82], "output": [38, 8, 4, 79, 95, 28]}, {"input": [30, 50, 37, 23, 42], "output": [3, 5, 73, 32, 24]}, {"input": [70, 14, 44, 15], "output": [7, 41, 44, 51]}, {"input": [15, 56, 76, 42], "output": [51, 65, 67, 24]}, {"input": [47, 40, 66, 77, 20, 3], "output": [74, 4, 66, 77, 2, 3]}, {"input": [4, 46, 99, 70, 89, 11], "output": [4, 64, 99, 7, 98, 11]}, {"input": [40, 39, 4, 92, 86, 47, 78], "output": [4, 93, 4, 29, 68, 74, 87]}, {"input": [10, 97, 5, 84, 20], "output": [1, 79, 5, 48, 2]}], "ood": [], "noise": [{"input": [28, 29, 47, 17], "output": [82, 92, 74, 73]}, {"input": [13, 15, 87], "output": [31, 59, 78]}, {"input": [79, 87, 14, 30, 44], "output": [97, 78, 41, 24, 62]}, {"input": [12, 35, 38, 39, 74], "output": [21, 53, 70, 93, 47]}, {"input": [54, 53, 39], "output": [45, 35, 59]}]}, "test": [{"input": [68, 22, 56, 77, 38], "output": [86, 22, 65, 77, 83]}, {"input": [74, 21, 69, 82, 68], "output": [47, 12, 96, 28, 86]}, {"input": [59, 94, 73, 62, 47, 2], "output": [95, 49, 37, 26, 74, 2]}, {"input": [37, 56, 53, 36, 36], "output": [73, 65, 35, 63, 63]}, {"input": [49, 91, 95, 41, 15], "output": [94, 19, 59, 14, 51]}, {"input": [71, 51, 14, 13], "output": [17, 15, 41, 31]}, {"input": [17, 89, 14, 78, 13], "output": [71, 98, 41, 87, 31]}, {"input": [52, 76, 96, 14, 51], "output": [25, 67, 69, 41, 15]}, {"input": [16, 21, 78, 15, 34, 4], "output": [61, 12, 87, 51, 43, 4]}, {"input": [74, 76, 99], "output": [47, 67, 99]}]}
{"id": "c137", "function": "def c137(x):\n    # remove all 3\n    return [i for i in x if i != 3]\n\n", "train": {"normal": [{"input": [29, 52, 50, 3, 55, 41, 3], "output": [29, 52, 50, 55, 41]}, {"input": [93, 72, 3, 24, 34, 94, 3, 13], "output": [93, 72, 24, 34, 94, 13]}, {"input": [3, 6, 5, 9, 37, 16], "output": [6, 5, 9, 37, 16]}, {"input": [3, 38, 8, 16, 50, 62, 3], "output": [38, 8, 16, 50, 62]}, {"input": [3, 38, 21, 66, 54], "output": [38, 21, 66, 54]}, {"input": [86, 93, 48, 3, 23, 64, 44], "output": [86, 93, 48, 23, 64, 44]}, {"input": [64, 78, 70, 65, 69, 10, 3], "output": [64, 78, 70, 65, 69, 10]}, {"input": [76, 3, 3, 74], "output": [76, 74]}, {"input": [3, 49, 74, 33, 3], "output": [49, 74, 33]}, {"input": [96, 16, 13, 62, 34, 3, 56, 33], "output": [96, 16, 13, 62, 34, 56, 33]}], "ood": [], "noise": [{"input": [68, 74, 60, 3], "output": [68, 74, 70]}, {"input": [3, 90, 42, 57, 1, 48], "output": [90, 42, 57, 1, 31]}, {"input": [82, 12, 3, 29, 17, 32], "output": [82, 69, 29, 71, 32]}, {"input": [58, 18, 31, 59, 92, 3], "output": [58, 18, 42, 59, 92]}, {"input": [92, 3, 83, 3, 1, 92, 93], "output": [92, 83, 23, 28, 93]}]}, "test": [{"input": [51, 79, 41, 10, 3], "output": [51, 79, 41, 10]}, {"input": [3, 69, 3, 19, 88], "output": [69, 19, 88]}, {"input": [87, 62, 53, 3], "output": [87, 62, 53]}, {"input": [21, 44, 76, 3, 91, 70, 39], "output": [21, 44, 76, 91, 70, 39]}, {"input": [39, 89, 21, 0, 88, 94, 10, 3], "output": [39, 89, 21, 0, 88, 94, 10]}, {"input": [0, 39, 3, 52, 11], "output": [0, 39, 52, 11]}, {"input": [3, 83, 47, 63, 49, 42, 10], "output": [83, 47, 63, 49, 42, 10]}, {"input": [3, 23, 79, 7, 58, 94, 3], "output": [23, 79, 7, 58, 94]}, {"input": [4, 7, 45, 37, 69, 3, 27], "output": [4, 7, 45, 37, 69, 27]}, {"input": [3, 59, 26, 47], "output": [59, 26, 47]}]}
{"id": "c238", "function": "def c238(x):\n    # keep only elements that appear exactly once\n    return [i for i in x if x.count(i) == 1]\n\n", "train": {"normal": [{"input": [8, 0, 5, 12, 0, 2], "output": [8, 5, 12, 2]}, {"input": [8, 19, 7, 8, 8, 8, 7, 7, 7, 7], "output": [19]}, {"input": [0, 1, 18, 9, 9, 0, 15, 6, 1], "output": [18, 15, 6]}, {"input": [0, 17, 4, 8, 4, 10, 1], "output": [0, 17, 8, 10, 1]}, {"input": [12, 34, 12, 56, 78, 12, 34, 34], "output": [56, 78]}, {"input": [22, 22, 22, 45, 67, 22, 89, 90, 90], "output": [45, 67, 89]}, {"input": [3, 3, 3, 4, 5, 6, 3, 3], "output": [4, 5, 6]}, {"input": [5, 3, 1, 6, 6, 3, 4, 4], "output": [5, 1]}, {"input": [11, 5, 4, 1, 5, 2, 2, 2], "output": [11, 4, 1]}, {"input": [9, 9, 6, 0, 13, 12, 12, 12], "output": [6, 0, 13]}], "ood": [], "noise": [{"input": [10, 17, 6, 9, 6, 9, 9, 9, 9], "output": [16, 17]}, {"input": [4, 6, 3, 3, 3, 3, 3, 3], "output": [4, 5]}, {"input": [18, 9, 0, 0, 0, 0, 0, 0, 0], "output": [15, 9]}, {"input": [15, 22, 15, 33, 15], "output": [22, 22]}, {"input": [7, 7, 7, 2], "output": [3]}]}, "test": [{"input": [30, 45, 30, 30, 50], "output": [45, 50]}, {"input": [1, 2, 2, 3, 4], "output": [1, 3, 4]}, {"input": [99, 1, 99, 99], "output": [1]}, {"input": [4, 4, 4, 4, 4, 5, 6], "output": [5, 6]}, {"input": [10, 10, 20, 30, 10], "output": [20, 30]}, {"input": [0, 1, 1, 2, 2, 2], "output": [0]}, {"input": [8, 8, 8], "output": []}, {"input": [5, 5, 5, 5, 5, 6], "output": [6]}, {"input": [9, 9, 9, 9, 10, 11, 12, 13], "output": [10, 11, 12, 13]}, {"input": [0, 0, 1, 1, 1, 2, 2, 3, 4, 5], "output": [3, 4, 5]}]}
{"id": "c108", "function": "def c108(x):\n    # sum of elements\n    return [sum(x)]\n\n", "train": {"normal": [{"input": [19, 15, 10, 8, 16, 10, 15], "output": [93]}, {"input": [17, 2, 13], "output": [32]}, {"input": [13, 16, 9, 16, 16, 5, 19], "output": [94]}, {"input": [5, 7, 4, 0], "output": [16]}, {"input": [0, 6, 10, 5], "output": [21]}, {"input": [13, 6, 19, 12, 2, 8, 14], "output": [74]}, {"input": [4, 5, 1, 19, 7], "output": [36]}, {"input": [19, 19, 4, 8, 20, 6, 12], "output": [88]}, {"input": [18, 14, 14, 5, 4, 16], "output": [71]}, {"input": [20, 7, 0], "output": [27]}], "ood": [], "noise": [{"input": [6, 16, 7, 11, 14, 14, 7], "output": [76]}, {"input": [8, 13, 1, 7], "output": [30]}, {"input": [11, 6, 12, 15, 3, 20, 18], "output": [86]}, {"input": [7, 8, 4], "output": [20]}, {"input": [4, 9, 18, 9], "output": [41]}]}, "test": [{"input": [14, 11, 10, 17, 4, 8, 15], "output": [79]}, {"input": [8, 0, 8, 12, 0, 18], "output": [46]}, {"input": [4, 17, 18, 10], "output": [49]}, {"input": [10, 20, 10, 6, 2, 15], "output": [63]}, {"input": [15, 0, 2, 0, 5, 2], "output": [24]}, {"input": [10, 0, 10], "output": [20]}, {"input": [14, 19, 15, 3, 5, 6, 16], "output": [78]}, {"input": [9, 20, 20, 8, 11, 13, 11], "output": [92]}, {"input": [13, 8, 0], "output": [21]}, {"input": [0, 14, 20, 3, 16, 12, 14], "output": [79]}]}
{"id": "c126", "function": "def c126(x):\n    # remove first element\n    return x[1:]\n\n", "train": {"normal": [{"input": [3, 31, 40, 45, 9, 4], "output": [31, 40, 45, 9, 4]}, {"input": [8, 74, 99, 16, 64, 12], "output": [74, 99, 16, 64, 12]}, {"input": [25, 50, 99, 85], "output": [50, 99, 85]}, {"input": [99, 11, 36, 23, 75], "output": [11, 36, 23, 75]}, {"input": [60, 62, 58, 90, 25, 97], "output": [62, 58, 90, 25, 97]}, {"input": [84, 19, 27], "output": [19, 27]}, {"input": [42, 36, 22, 84, 10], "output": [36, 22, 84, 10]}, {"input": [89, 95, 93], "output": [95, 93]}, {"input": [46, 61, 48], "output": [61, 48]}, {"input": [86, 92, 54, 26, 19, 16, 14], "output": [92, 54, 26, 19, 16, 14]}], "ood": [], "noise": [{"input": [72, 33, 83, 25, 48, 47], "output": [33, 25, 25, 39, 47]}, {"input": [96, 78, 61, 69, 76], "output": [78, 70, 69, 70]}, {"input": [62, 6, 56, 92, 58, 67], "output": [6, 56, 92, 46, 67]}, {"input": [84, 10, 64], "output": [10, 47]}, {"input": [10, 89, 2], "output": [89, 88]}]}, "test": [{"input": [34, 45, 92], "output": [45, 92]}, {"input": [4, 21, 26, 98, 81, 4], "output": [21, 26, 98, 81, 4]}, {"input": [95, 86, 59], "output": [86, 59]}, {"input": [62, 44, 78], "output": [44, 78]}, {"input": [87, 12, 3, 12, 65, 14, 82], "output": [12, 3, 12, 65, 14, 82]}, {"input": [82, 23, 62, 85, 41, 19, 19], "output": [23, 62, 85, 41, 19, 19]}, {"input": [38, 49, 43, 66, 47, 42, 8], "output": [49, 43, 66, 47, 42, 8]}, {"input": [40, 61, 49, 9], "output": [61, 49, 9]}, {"input": [50, 26, 36, 71, 45, 42], "output": [26, 36, 71, 45, 42]}, {"input": [85, 31, 34, 6, 29, 18, 4], "output": [31, 34, 6, 29, 18, 4]}]}
{"id": "c187", "function": "def c187(x):\n    # concatenate input with itself, separated by 0\n    return x + [0] + x\n\n", "train": {"normal": [{"input": [87, 90, 65, 97, 66], "output": [87, 90, 65, 97, 66, 0, 87, 90, 65, 97, 66]}, {"input": [72, 54, 35, 44, 0], "output": [72, 54, 35, 44, 0, 0, 72, 54, 35, 44, 0]}, {"input": [99, 2, 91, 93], "output": [99, 2, 91, 93, 0, 99, 2, 91, 93]}, {"input": [6, 84, 61], "output": [6, 84, 61, 0, 6, 84, 61]}, {"input": [51, 31, 81], "output": [51, 31, 81, 0, 51, 31, 81]}, {"input": [30, 52, 46, 11], "output": [30, 52, 46, 11, 0, 30, 52, 46, 11]}, {"input": [82, 37, 44, 71, 66], "output": [82, 37, 44, 71, 66, 0, 82, 37, 44, 71, 66]}, {"input": [88, 99, 62, 73], "output": [88, 99, 62, 73, 0, 88, 99, 62, 73]}, {"input": [6, 34, 82, 84, 66], "output": [6, 34, 82, 84, 66, 0, 6, 34, 82, 84, 66]}, {"input": [52, 84, 51], "output": [52, 84, 51, 0, 52, 84, 51]}], "ood": [], "noise": [{"input": [33, 67, 45], "output": [33, 8, 45, 0, 33, 30, 45]}, {"input": [28, 34, 85], "output": [28, 10, 85, 0, 28, 30, 85]}, {"input": [93, 82, 81, 61], "output": [93, 82, 81, 9, 0, 93, 82, 81, 48]}, {"input": [82, 58, 74, 36, 97], "output": [34, 58, 74, 36, 10, 55, 82, 58, 74, 36, 97]}, {"input": [39, 12, 71, 56], "output": [39, 12, 71, 56, 0, 39, 6, 34, 56]}]}, "test": [{"input": [39, 15, 99], "output": [39, 15, 99, 0, 39, 15, 99]}, {"input": [14, 91, 75, 40, 76], "output": [14, 91, 75, 40, 76, 0, 14, 91, 75, 40, 76]}, {"input": [82, 94, 50], "output": [82, 94, 50, 0, 82, 94, 50]}, {"input": [72, 46, 93], "output": [72, 46, 93, 0, 72, 46, 93]}, {"input": [59, 28, 30, 81], "output": [59, 28, 30, 81, 0, 59, 28, 30, 81]}, {"input": [77, 3, 91, 58, 15], "output": [77, 3, 91, 58, 15, 0, 77, 3, 91, 58, 15]}, {"input": [60, 88, 51, 18], "output": [60, 88, 51, 18, 0, 60, 88, 51, 18]}, {"input": [99, 18, 48], "output": [99, 18, 48, 0, 99, 18, 48]}, {"input": [1, 14, 34, 52], "output": [1, 14, 34, 52, 0, 1, 14, 34, 52]}, {"input": [48, 44, 55, 59, 15], "output": [48, 44, 55, 59, 15, 0, 48, 44, 55, 59, 15]}]}
{"id": "c022", "function": "def c022(x):\n    # insert a 5 as element 1\n    return x[:1] + [5] + x[1:]\n\n", "train": {"normal": [{"input": [41, 83, 77], "output": [41, 5, 83, 77]}, {"input": [38, 91, 77, 61, 3, 46, 95], "output": [38, 5, 91, 77, 61, 3, 46, 95]}, {"input": [22, 63, 33], "output": [22, 5, 63, 33]}, {"input": [70, 37, 93, 6, 46, 7, 17], "output": [70, 5, 37, 93, 6, 46, 7, 17]}, {"input": [64, 11, 53, 74, 30, 38], "output": [64, 5, 11, 53, 74, 30, 38]}, {"input": [1, 86, 89], "output": [1, 5, 86, 89]}, {"input": [90, 35, 79, 67, 65, 60, 5], "output": [90, 5, 35, 79, 67, 65, 60, 5]}, {"input": [54, 46, 75, 92, 74], "output": [54, 5, 46, 75, 92, 74]}, {"input": [47, 24, 78, 77, 77], "output": [47, 5, 24, 78, 77, 77]}, {"input": [93, 76, 74, 49, 13, 43], "output": [93, 5, 76, 74, 49, 13, 43]}], "ood": [], "noise": [{"input": [87, 50, 4, 24], "output": [87, 5, 81, 16, 24]}, {"input": [51, 44, 95, 53], "output": [51, 50, 72, 95, 53]}, {"input": [84, 85, 78, 0, 62, 76, 46], "output": [22, 5, 85, 78, 0, 45, 76, 80]}, {"input": [88, 43, 59, 68, 39], "output": [21, 5, 75, 59, 68, 39]}, {"input": [22, 99, 27], "output": [85, 5, 22, 27]}]}, "test": [{"input": [6, 66, 78, 89], "output": [6, 5, 66, 78, 89]}, {"input": [7, 52, 50], "output": [7, 5, 52, 50]}, {"input": [72, 87, 64, 98, 31], "output": [72, 5, 87, 64, 98, 31]}, {"input": [39, 91, 58, 1, 65, 39, 39], "output": [39, 5, 91, 58, 1, 65, 39, 39]}, {"input": [37, 72, 78, 41, 10, 95, 80], "output": [37, 5, 72, 78, 41, 10, 95, 80]}, {"input": [67, 98, 12], "output": [67, 5, 98, 12]}, {"input": [71, 97, 24], "output": [71, 5, 97, 24]}, {"input": [66, 85, 92], "output": [66, 5, 85, 92]}, {"input": [78, 93, 4], "output": [78, 5, 93, 4]}, {"input": [94, 90, 11], "output": [94, 5, 90, 11]}]}
{"id": "c212", "function": "def c212(x):\n    # insert 3 at index 2, 3 times\n    return x[:3] + [3,3,3] + x[3:]\n\n", "train": {"normal": [{"input": [48, 99, 86], "output": [48, 99, 86, 3, 3, 3]}, {"input": [51, 63, 54, 38, 41, 88], "output": [51, 63, 54, 3, 3, 3, 38, 41, 88]}, {"input": [6, 47, 16], "output": [6, 47, 16, 3, 3, 3]}, {"input": [10, 45, 74, 95, 43, 84], "output": [10, 45, 74, 3, 3, 3, 95, 43, 84]}, {"input": [6, 64, 58, 20, 9], "output": [6, 64, 58, 3, 3, 3, 20, 9]}, {"input": [93, 96, 8, 35], "output": [93, 96, 8, 3, 3, 3, 35]}, {"input": [15, 72, 3, 80, 56, 8], "output": [15, 72, 3, 3, 3, 3, 80, 56, 8]}, {"input": [63, 95, 52, 96, 38], "output": [63, 95, 52, 3, 3, 3, 96, 38]}, {"input": [18, 95, 5, 59, 20, 56], "output": [18, 95, 5, 3, 3, 3, 59, 20, 56]}, {"input": [16, 55, 87, 10, 47, 85], "output": [16, 55, 87, 3, 3, 3, 10, 47, 85]}], "ood": [], "noise": [{"input": [87, 92, 81, 19, 89], "output": [3, 92, 74, 3, 3, 3, 19, 23]}, {"input": [2, 33, 12, 34, 49, 29], "output": [2, 33, 12, 3, 3, 3, 2, 49, 29]}, {"input": [77, 14, 79, 29], "output": [77, 58, 79, 3, 3, 3, 29]}, {"input": [96, 15, 25, 97], "output": [96, 41, 25, 3, 3, 3, 91]}, {"input": [7, 95, 98, 29, 97, 56], "output": [7, 95, 98, 3, 3, 3, 53, 97, 56]}]}, "test": [{"input": [36, 45, 37, 2, 53, 47], "output": [36, 45, 37, 3, 3, 3, 2, 53, 47]}, {"input": [57, 18, 12, 92, 10, 4], "output": [57, 18, 12, 3, 3, 3, 92, 10, 4]}, {"input": [60, 29, 88, 49, 52], "output": [60, 29, 88, 3, 3, 3, 49, 52]}, {"input": [97, 11, 85, 79], "output": [97, 11, 85, 3, 3, 3, 79]}, {"input": [36, 78, 86], "output": [36, 78, 86, 3, 3, 3]}, {"input": [5, 34, 12, 31, 64], "output": [5, 34, 12, 3, 3, 3, 31, 64]}, {"input": [98, 42, 49], "output": [98, 42, 49, 3, 3, 3]}, {"input": [0, 11, 14, 89, 16, 83], "output": [0, 11, 14, 3, 3, 3, 89, 16, 83]}, {"input": [3, 11, 57, 53, 18], "output": [3, 11, 57, 3, 3, 3, 53, 18]}, {"input": [75, 27, 35], "output": [75, 27, 35, 3, 3, 3]}]}
{"id": "c101", "function": "def c101(x):\n    return [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]\n\n", "train": {"normal": [{"input": [75, 73, 69], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [0, 35, 7], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [66, 46, 75, 72, 39, 90], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [64, 74, 9, 23, 50], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [81, 76, 30, 37, 47, 45, 29], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [53, 90, 18, 93, 6], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [11, 37, 44, 5, 43], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [86, 91, 85, 68, 93, 52, 79], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [99, 59, 51, 10, 16], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [85, 13, 75, 86, 25, 46, 87], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}], "ood": [], "noise": [{"input": [11, 96, 37, 34], "output": [11, 19, 24, 33, 76, 5, 82, 0, 43, 9]}, {"input": [46, 46, 86, 34], "output": [11, 78, 77, 33, 42, 5, 4, 0, 64, 9]}, {"input": [45, 51, 29], "output": [38, 19, 24, 33, 74, 5, 82, 0, 64, 9]}, {"input": [3, 66, 57, 90, 55, 60], "output": [37, 19, 24, 22, 51, 5, 82, 0, 64, 9]}, {"input": [47, 8, 74, 52, 74, 97], "output": [11, 19, 24, 33, 13, 5, 73, 0, 64, 21]}]}, "test": [{"input": [33, 72, 96, 7, 2, 52], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [77, 55, 35, 78, 13, 52], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [64, 86, 47, 55], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [87, 29, 25, 11, 84, 70], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [66, 14, 72, 96], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [72, 49, 31, 54, 59, 73, 82], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [82, 77, 97, 77], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [9, 7, 73, 46, 99, 14], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [63, 55, 32, 75], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}, {"input": [21, 84, 38, 44, 66, 77, 4], "output": [11, 19, 24, 33, 42, 5, 82, 0, 64, 9]}]}
{"id": "c021", "function": "def c021(x):\n    # insert 8 as element 1\n    return x[:1] + [8] + x[1:]\n\n", "train": {"normal": [{"input": [4, 75, 23, 39, 21, 64, 38], "output": [4, 8, 75, 23, 39, 21, 64, 38]}, {"input": [26, 67, 29, 61, 18, 15, 70], "output": [26, 8, 67, 29, 61, 18, 15, 70]}, {"input": [49, 53, 60], "output": [49, 8, 53, 60]}, {"input": [42, 70, 53, 89, 23, 74], "output": [42, 8, 70, 53, 89, 23, 74]}, {"input": [43, 43, 31, 6, 42, 6], "output": [43, 8, 43, 31, 6, 42, 6]}, {"input": [27, 68, 64], "output": [27, 8, 68, 64]}, {"input": [78, 25, 44, 90, 68, 50, 83], "output": [78, 8, 25, 44, 90, 68, 50, 83]}, {"input": [3, 5, 33, 81, 70, 5, 54], "output": [3, 8, 5, 33, 81, 70, 5, 54]}, {"input": [97, 89, 41, 36, 47], "output": [97, 8, 89, 41, 36, 47]}, {"input": [91, 74, 21, 30, 28], "output": [91, 8, 74, 21, 30, 28]}], "ood": [], "noise": [{"input": [42, 81, 52], "output": [42, 8, 30, 52]}, {"input": [92, 69, 62, 99, 37, 5, 39], "output": [92, 8, 69, 62, 99, 37, 20, 39]}, {"input": [97, 92, 24, 77, 0], "output": [97, 73, 59, 24, 77, 0]}, {"input": [99, 38, 73, 60, 25], "output": [99, 8, 44, 39, 47, 25]}, {"input": [49, 45, 86], "output": [42, 20, 45, 86]}]}, "test": [{"input": [75, 96, 58, 7, 91], "output": [75, 8, 96, 58, 7, 91]}, {"input": [31, 44, 53], "output": [31, 8, 44, 53]}, {"input": [5, 22, 3, 17, 40], "output": [5, 8, 22, 3, 17, 40]}, {"input": [80, 12, 27], "output": [80, 8, 12, 27]}, {"input": [16, 70, 13], "output": [16, 8, 70, 13]}, {"input": [26, 71, 69, 76, 54, 13], "output": [26, 8, 71, 69, 76, 54, 13]}, {"input": [95, 66, 76, 79, 95, 98], "output": [95, 8, 66, 76, 79, 95, 98]}, {"input": [23, 33, 88, 74, 33], "output": [23, 8, 33, 88, 74, 33]}, {"input": [65, 5, 67, 27, 79, 24, 39], "output": [65, 8, 5, 67, 27, 79, 24, 39]}, {"input": [66, 0, 44, 37, 69, 7], "output": [66, 8, 0, 44, 37, 69, 7]}]}
{"id": "c105", "function": "def c105(x):\n    # concatenate all but the last element with all but the first element\n    return x[:-1] + x[1:]\n\n", "train": {"normal": [{"input": [2, 49, 69, 95, 95], "output": [2, 49, 69, 95, 49, 69, 95, 95]}, {"input": [43, 84, 26, 71, 87], "output": [43, 84, 26, 71, 84, 26, 71, 87]}, {"input": [94, 45, 42, 36, 33], "output": [94, 45, 42, 36, 45, 42, 36, 33]}, {"input": [51, 46, 62, 83, 61], "output": [51, 46, 62, 83, 46, 62, 83, 61]}, {"input": [45, 6, 81, 85, 14, 37], "output": [45, 6, 81, 85, 14, 6, 81, 85, 14, 37]}, {"input": [22, 28, 89], "output": [22, 28, 28, 89]}, {"input": [49, 3, 22], "output": [49, 3, 3, 22]}, {"input": [97, 94, 6, 55, 82, 11], "output": [97, 94, 6, 55, 82, 94, 6, 55, 82, 11]}, {"input": [81, 47, 20, 38, 66, 32], "output": [81, 47, 20, 38, 66, 47, 20, 38, 66, 32]}, {"input": [19, 16, 49, 89, 36], "output": [19, 16, 49, 89, 16, 49, 89, 36]}], "ood": [], "noise": [{"input": [85, 22, 57, 10, 92], "output": [85, 65, 57, 10, 22, 57, 10, 92]}, {"input": [5, 86, 34, 62, 4], "output": [19, 86, 34, 30, 86, 34, 62, 4]}, {"input": [42, 86, 78, 2, 7], "output": [42, 8, 78, 2, 86, 78, 2, 8]}, {"input": [23, 21, 55, 3, 84], "output": [23, 33, 71, 3, 21, 55, 20, 84]}, {"input": [85, 9, 98, 83, 69], "output": [49, 9, 98, 83, 98, 98, 83, 69]}]}, "test": [{"input": [74, 90, 72, 87], "output": [74, 90, 72, 90, 72, 87]}, {"input": [55, 46, 14], "output": [55, 46, 46, 14]}, {"input": [96, 84, 1, 49, 79, 29], "output": [96, 84, 1, 49, 79, 84, 1, 49, 79, 29]}, {"input": [0, 23, 31], "output": [0, 23, 23, 31]}, {"input": [82, 84, 98, 71, 60, 1], "output": [82, 84, 98, 71, 60, 84, 98, 71, 60, 1]}, {"input": [13, 26, 65, 21], "output": [13, 26, 65, 26, 65, 21]}, {"input": [94, 24, 80], "output": [94, 24, 24, 80]}, {"input": [41, 64, 72, 11], "output": [41, 64, 72, 64, 72, 11]}, {"input": [34, 37, 39, 23], "output": [34, 37, 39, 37, 39, 23]}, {"input": [40, 14, 2], "output": [40, 14, 14, 2]}]}
{"id": "c041", "function": "def c041(x):\n    return [9]\n\n", "train": {"normal": [{"input": [42, 27, 43], "output": [9]}, {"input": [77, 82, 11, 61], "output": [9]}, {"input": [60, 80, 81], "output": [9]}, {"input": [47, 80, 49, 51, 68, 26, 87], "output": [9]}, {"input": [26, 21, 26, 14], "output": [9]}, {"input": [94, 31, 54, 63, 46, 18, 87], "output": [9]}, {"input": [78, 70, 91], "output": [9]}, {"input": [13, 66, 81, 4, 55], "output": [9]}, {"input": [93, 19, 31, 4, 16, 32], "output": [9]}, {"input": [59, 55, 2, 98, 44, 64, 3], "output": [9]}], "ood": [], "noise": [{"input": [97, 95, 93, 13, 40], "output": [10]}, {"input": [19, 81, 27], "output": [10]}, {"input": [20, 51, 84, 99], "output": [10]}, {"input": [84, 75, 42, 45, 82], "output": [10]}, {"input": [38, 51, 33, 60, 72, 32, 66], "output": [10]}]}, "test": [{"input": [31, 66, 35, 95, 41], "output": [9]}, {"input": [4, 48, 48, 14, 35, 56, 27], "output": [9]}, {"input": [61, 21, 99, 82, 27, 26, 19], "output": [9]}, {"input": [85, 84, 57, 20, 9, 55, 25], "output": [9]}, {"input": [19, 76, 6], "output": [9]}, {"input": [11, 56, 93, 13, 41, 75], "output": [9]}, {"input": [14, 66, 33, 10, 36, 67, 21], "output": [9]}, {"input": [17, 29, 66, 11, 20, 11, 80], "output": [9]}, {"input": [25, 55, 76, 94], "output": [9]}, {"input": [9, 88, 43], "output": [9]}]}
{"id": "c070", "function": "def c070(x):\n    # concatenate the input\n    return x + x\n\n", "train": {"normal": [{"input": [63, 52, 22, 18, 33, 42], "output": [63, 52, 22, 18, 33, 42, 63, 52, 22, 18, 33, 42]}, {"input": [59, 77, 84, 12, 87, 0], "output": [59, 77, 84, 12, 87, 0, 59, 77, 84, 12, 87, 0]}, {"input": [3, 26, 97, 94, 13], "output": [3, 26, 97, 94, 13, 3, 26, 97, 94, 13]}, {"input": [13, 98, 97, 47, 75], "output": [13, 98, 97, 47, 75, 13, 98, 97, 47, 75]}, {"input": [74, 73, 75, 17, 35], "output": [74, 73, 75, 17, 35, 74, 73, 75, 17, 35]}, {"input": [27, 24, 55, 74, 4], "output": [27, 24, 55, 74, 4, 27, 24, 55, 74, 4]}, {"input": [26, 3, 14, 57, 3], "output": [26, 3, 14, 57, 3, 26, 3, 14, 57, 3]}, {"input": [62, 26, 22], "output": [62, 26, 22, 62, 26, 22]}, {"input": [55, 10, 40, 51], "output": [55, 10, 40, 51, 55, 10, 40, 51]}, {"input": [94, 22, 12, 72], "output": [94, 22, 12, 72, 94, 22, 12, 72]}], "ood": [], "noise": [{"input": [36, 54, 65], "output": [36, 54, 65, 36, 60, 42]}, {"input": [90, 59, 64, 28, 18, 41], "output": [90, 59, 64, 28, 18, 29, 35, 36, 37, 28, 18, 23]}, {"input": [52, 33, 17, 81, 44], "output": [52, 33, 17, 81, 30, 52, 33, 17, 81, 44]}, {"input": [79, 35, 39, 15], "output": [79, 35, 21, 15, 79, 47, 26, 15]}, {"input": [5, 66, 92, 72, 71, 84], "output": [5, 66, 54, 72, 71, 84, 6, 66, 92, 72, 71, 78]}]}, "test": [{"input": [52, 30, 89, 43], "output": [52, 30, 89, 43, 52, 30, 89, 43]}, {"input": [96, 37, 77, 34, 93, 7], "output": [96, 37, 77, 34, 93, 7, 96, 37, 77, 34, 93, 7]}, {"input": [55, 27, 63, 95, 26, 23], "output": [55, 27, 63, 95, 26, 23, 55, 27, 63, 95, 26, 23]}, {"input": [36, 38, 7, 57], "output": [36, 38, 7, 57, 36, 38, 7, 57]}, {"input": [81, 15, 49, 62, 60, 54], "output": [81, 15, 49, 62, 60, 54, 81, 15, 49, 62, 60, 54]}, {"input": [70, 27, 21, 87, 22], "output": [70, 27, 21, 87, 22, 70, 27, 21, 87, 22]}, {"input": [10, 32, 31], "output": [10, 32, 31, 10, 32, 31]}, {"input": [3, 32, 92, 15, 21, 39], "output": [3, 32, 92, 15, 21, 39, 3, 32, 92, 15, 21, 39]}, {"input": [21, 87, 31, 97, 30], "output": [21, 87, 31, 97, 30, 21, 87, 31, 97, 30]}, {"input": [61, 56, 39, 79, 76], "output": [61, 56, 39, 79, 76, 61, 56, 39, 79, 76]}]}
{"id": "c052", "function": "def c052(x):\n    # repeat the first element 7 times\n    return [x[0]] * 7\n\n", "train": {"normal": [{"input": [63, 13, 8], "output": [63, 63, 63, 63, 63, 63, 63]}, {"input": [61, 27, 6], "output": [61, 61, 61, 61, 61, 61, 61]}, {"input": [62, 42, 85, 47, 59, 58], "output": [62, 62, 62, 62, 62, 62, 62]}, {"input": [74, 17, 88], "output": [74, 74, 74, 74, 74, 74, 74]}, {"input": [62, 78, 20, 43], "output": [62, 62, 62, 62, 62, 62, 62]}, {"input": [40, 87, 26, 46], "output": [40, 40, 40, 40, 40, 40, 40]}, {"input": [76, 40, 2, 22], "output": [76, 76, 76, 76, 76, 76, 76]}, {"input": [95, 89, 89], "output": [95, 95, 95, 95, 95, 95, 95]}, {"input": [68, 11, 65, 32], "output": [68, 68, 68, 68, 68, 68, 68]}, {"input": [58, 70, 1, 23, 79, 69, 41], "output": [58, 58, 58, 58, 58, 58, 58]}], "ood": [], "noise": [{"input": [35, 80, 75, 56, 34, 36], "output": [36, 35, 35, 36, 36, 35, 35]}, {"input": [33, 81, 63, 79], "output": [33, 33, 33, 34, 34, 33, 33]}, {"input": [92, 88, 3, 7, 31, 79], "output": [92, 92, 93, 92, 92, 93, 93]}, {"input": [26, 40, 97], "output": [26, 27, 26, 27, 26, 26, 26]}, {"input": [0, 48, 16, 68], "output": [1, 0, 0, 1, 1, 0, 0]}]}, "test": [{"input": [19, 14, 10, 36], "output": [19, 19, 19, 19, 19, 19, 19]}, {"input": [52, 74, 0, 38], "output": [52, 52, 52, 52, 52, 52, 52]}, {"input": [84, 15, 89], "output": [84, 84, 84, 84, 84, 84, 84]}, {"input": [60, 39, 4, 9, 68], "output": [60, 60, 60, 60, 60, 60, 60]}, {"input": [64, 11, 11, 20, 86, 6], "output": [64, 64, 64, 64, 64, 64, 64]}, {"input": [15, 93, 15], "output": [15, 15, 15, 15, 15, 15, 15]}, {"input": [77, 84, 44, 67], "output": [77, 77, 77, 77, 77, 77, 77]}, {"input": [77, 14, 28, 5, 98], "output": [77, 77, 77, 77, 77, 77, 77]}, {"input": [25, 2, 32, 33], "output": [25, 25, 25, 25, 25, 25, 25]}, {"input": [33, 76, 92], "output": [33, 33, 33, 33, 33, 33, 33]}]}
{"id": "c044", "function": "def c044(x):\n    return [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]\n\n", "train": {"normal": [{"input": [14, 20, 15, 14, 54, 27, 82], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [65, 55, 84, 95, 24, 38], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [74, 53, 27, 63, 54, 68], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [84, 2, 21, 72], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [84, 63, 84], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [45, 49, 8, 25], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [4, 67, 82, 38, 41], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [19, 22, 87, 14], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [59, 78, 73, 74, 51], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [88, 84, 49], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}], "ood": [], "noise": [{"input": [99, 43, 20, 54, 50, 9, 20], "output": [1, 9, 1, 3, 2, 0, 8, 0, 1, 9]}, {"input": [46, 1, 7], "output": [1, 0, 9, 3, 2, 5, 8, 0, 7, 9]}, {"input": [27, 11, 89, 35, 5, 53], "output": [1, 9, 4, 3, 2, 5, 8, 2, 4, 9]}, {"input": [65, 83, 25, 44, 59, 42], "output": [1, 9, 4, 3, 3, 5, 8, 0, 4, 9]}, {"input": [92, 59, 21, 12], "output": [2, 9, 4, 8, 2, 5, 1, 0, 6, 9]}]}, "test": [{"input": [99, 22, 40, 52], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [24, 78, 96, 14], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [30, 93, 40, 8], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [61, 63, 34, 89], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [21, 10, 70], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [0, 58, 82, 34, 21, 66], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [13, 6, 35, 48, 8], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [59, 63, 15, 84], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [98, 25, 86, 62, 96], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}, {"input": [71, 16, 31, 29, 87], "output": [1, 9, 4, 3, 2, 5, 8, 0, 4, 9]}]}
{"id": "c190", "function": "def c190(x):\n    # count by 2 from the first element to the last element\n    if x[0] < x[-1]:\n        return list(range(x[0], x[-1]+1, 2))\n    else:\n        return list(range(x[0], x[-1]-1, -2))\n\n", "train": {"normal": [{"input": [39, 42, 39], "output": [39]}, {"input": [45, 23, 29], "output": [45, 43, 41, 39, 37, 35, 33, 31, 29]}, {"input": [80, 67, 86], "output": [80, 82, 84, 86]}, {"input": [78, 82, 84], "output": [78, 80, 82, 84]}, {"input": [63, 1, 75], "output": [63, 65, 67, 69, 71, 73, 75]}, {"input": [73, 9, 77, 79, 80], "output": [73, 75, 77, 79]}, {"input": [99, 72, 24, 85], "output": [99, 97, 95, 93, 91, 89, 87, 85]}, {"input": [54, 48, 48], "output": [54, 52, 50, 48]}, {"input": [38, 53, 21], "output": [38, 36, 34, 32, 30, 28, 26, 24, 22]}, {"input": [87, 52, 88, 10, 11, 11, 91], "output": [87, 89, 91]}], "ood": [], "noise": [{"input": [57, 75, 62, 27, 53], "output": [57, 55, 57]}, {"input": [99, 12, 13, 93, 88], "output": [98, 97, 95, 98, 91, 89]}, {"input": [57, 94, 57, 97, 38], "output": [41, 55, 53, 51, 49, 47, 45, 57, 41, 46]}, {"input": [87, 17, 76], "output": [87, 87, 83, 81, 81, 84]}, {"input": [59, 54, 67, 71, 83, 90, 74], "output": [59, 66, 63, 65, 67, 69, 71, 73]}]}, "test": [{"input": [60, 5, 88, 17, 57], "output": [60, 58]}, {"input": [31, 59, 86, 22, 26, 19, 43], "output": [31, 33, 35, 37, 39, 41, 43]}, {"input": [35, 95, 63, 41, 21, 18], "output": [35, 33, 31, 29, 27, 25, 23, 21, 19]}, {"input": [35, 12, 73, 23], "output": [35, 33, 31, 29, 27, 25, 23]}, {"input": [98, 81, 97, 82], "output": [98, 96, 94, 92, 90, 88, 86, 84, 82]}, {"input": [65, 40, 28, 80], "output": [65, 67, 69, 71, 73, 75, 77, 79]}, {"input": [77, 98, 92], "output": [77, 79, 81, 83, 85, 87, 89, 91]}, {"input": [56, 89, 51], "output": [56, 54, 52]}, {"input": [11, 43, 17], "output": [11, 13, 15, 17]}, {"input": [32, 44, 22], "output": [32, 30, 28, 26, 24, 22]}]}
{"id": "c037", "function": "def c037(x):\n    # append 3\n    return x + [3]\n\n", "train": {"normal": [{"input": [50, 32, 99, 32, 83, 54, 90], "output": [50, 32, 99, 32, 83, 54, 90, 3]}, {"input": [49, 33, 54, 72, 36], "output": [49, 33, 54, 72, 36, 3]}, {"input": [62, 10, 58, 15, 95], "output": [62, 10, 58, 15, 95, 3]}, {"input": [30, 53, 54, 41, 94, 39], "output": [30, 53, 54, 41, 94, 39, 3]}, {"input": [44, 37, 12, 22, 62, 57, 10], "output": [44, 37, 12, 22, 62, 57, 10, 3]}, {"input": [16, 0, 96, 96, 96, 21], "output": [16, 0, 96, 96, 96, 21, 3]}, {"input": [23, 65, 77], "output": [23, 65, 77, 3]}, {"input": [53, 79, 15, 81, 3], "output": [53, 79, 15, 81, 3, 3]}, {"input": [43, 97, 96, 23, 79], "output": [43, 97, 96, 23, 79, 3]}, {"input": [73, 63, 84, 15, 66], "output": [73, 63, 84, 15, 66, 3]}], "ood": [], "noise": [{"input": [20, 2, 24, 31], "output": [9, 9, 24, 31, 3]}, {"input": [72, 54, 42, 39], "output": [72, 15, 42, 39, 3]}, {"input": [82, 40, 86, 7, 92], "output": [82, 73, 86, 7, 43, 70]}, {"input": [22, 47, 84], "output": [22, 47, 84, 31]}, {"input": [81, 81, 38, 74, 82], "output": [81, 81, 38, 57, 52, 3]}]}, "test": [{"input": [59, 50, 6, 80, 21], "output": [59, 50, 6, 80, 21, 3]}, {"input": [0, 72, 63], "output": [0, 72, 63, 3]}, {"input": [78, 20, 64, 29, 44, 96], "output": [78, 20, 64, 29, 44, 96, 3]}, {"input": [78, 8, 66, 35, 16, 18, 63], "output": [78, 8, 66, 35, 16, 18, 63, 3]}, {"input": [33, 92, 37, 6], "output": [33, 92, 37, 6, 3]}, {"input": [15, 36, 6], "output": [15, 36, 6, 3]}, {"input": [13, 52, 97, 70], "output": [13, 52, 97, 70, 3]}, {"input": [66, 5, 40, 2], "output": [66, 5, 40, 2, 3]}, {"input": [35, 26, 42, 28, 12, 1, 83], "output": [35, 26, 42, 28, 12, 1, 83, 3]}, {"input": [48, 65, 41, 26, 9, 35], "output": [48, 65, 41, 26, 9, 35, 3]}]}
{"id": "c222", "function": "def c222(x):\n    # remove each element with the input length\n    return [len(x) for _ in x]\n\n", "train": {"normal": [{"input": [27, 55, 72, 20, 73, 94, 49], "output": [7, 7, 7, 7, 7, 7, 7]}, {"input": [88, 8, 14, 13, 6], "output": [5, 5, 5, 5, 5]}, {"input": [81, 85, 5, 29, 37, 27], "output": [6, 6, 6, 6, 6, 6]}, {"input": [51, 11, 81, 53], "output": [4, 4, 4, 4]}, {"input": [82, 83, 70, 24, 31, 30], "output": [6, 6, 6, 6, 6, 6]}, {"input": [95, 4, 1, 23], "output": [4, 4, 4, 4]}, {"input": [86, 8, 13], "output": [3, 3, 3]}, {"input": [7, 76, 42, 80], "output": [4, 4, 4, 4]}, {"input": [38, 49, 32, 25, 74], "output": [5, 5, 5, 5, 5]}, {"input": [2, 20, 12, 51, 57, 84], "output": [6, 6, 6, 6, 6, 6]}], "ood": [], "noise": [{"input": [2, 78, 35], "output": [4, 3, 3]}, {"input": [43, 14, 85, 46, 39], "output": [5, 6, 6, 5, 5]}, {"input": [41, 75, 73, 38], "output": [5, 5, 4, 4]}, {"input": [29, 36, 49, 4], "output": [5, 4, 5, 4]}, {"input": [13, 4, 45, 34, 66, 15], "output": [6, 7, 6, 6, 6, 6]}]}, "test": [{"input": [97, 95, 14, 39, 95, 60], "output": [6, 6, 6, 6, 6, 6]}, {"input": [11, 92, 68, 8, 15, 98], "output": [6, 6, 6, 6, 6, 6]}, {"input": [20, 80, 28, 6, 20, 31, 84], "output": [7, 7, 7, 7, 7, 7, 7]}, {"input": [40, 33, 26, 46, 50, 85, 66], "output": [7, 7, 7, 7, 7, 7, 7]}, {"input": [13, 76, 9], "output": [3, 3, 3]}, {"input": [56, 86, 21], "output": [3, 3, 3]}, {"input": [88, 68, 99, 39, 14, 89, 75], "output": [7, 7, 7, 7, 7, 7, 7]}, {"input": [95, 68, 94, 36], "output": [4, 4, 4, 4]}, {"input": [1, 25, 52, 0], "output": [4, 4, 4, 4]}, {"input": [27, 69, 40, 32, 30, 31], "output": [6, 6, 6, 6, 6, 6]}]}
{"id": "c107", "function": "def c107(x):\n    # unique elements, in order of appearance\n    res = []\n    for i in x:\n        if i not in res:\n            res.append(i)\n    return res\n\n", "train": {"normal": [{"input": [22, 40, 35, 17, 22, 60, 31, 17, 31, 59], "output": [22, 40, 35, 17, 60, 31, 59]}, {"input": [19, 19, 15, 29, 15, 45], "output": [19, 15, 29, 45]}, {"input": [30, 9, 62, 62, 33, 62, 62], "output": [30, 9, 62, 33]}, {"input": [11, 97, 21, 85, 46, 97, 20, 21, 21], "output": [11, 97, 21, 85, 46, 20]}, {"input": [47, 79, 61, 12, 85, 79], "output": [47, 79, 61, 12, 85]}, {"input": [6, 85, 21, 85, 79, 62], "output": [6, 85, 21, 79, 62]}, {"input": [79, 63, 63, 37], "output": [79, 63, 37]}, {"input": [40, 85, 63, 44, 63, 40, 63], "output": [40, 85, 63, 44]}, {"input": [75, 69, 7, 29, 75, 75, 69], "output": [75, 69, 7, 29]}, {"input": [38, 91, 29, 76, 11, 38, 74, 91, 11, 27], "output": [38, 91, 29, 76, 11, 74, 27]}], "ood": [], "noise": [{"input": [54, 54, 54, 54, 54, 34], "output": [54, 53]}, {"input": [32, 10, 32, 47, 5, 10, 10, 47], "output": [32, 7, 26, 5]}, {"input": [73, 42, 42, 79, 73, 42], "output": [73, 53, 79]}, {"input": [74, 31, 92, 66, 66, 92, 0], "output": [74, 31, 92, 81, 70]}, {"input": [44, 44, 50, 18, 44], "output": [44, 44, 48]}]}, "test": [{"input": [82, 82, 82, 94, 15], "output": [82, 94, 15]}, {"input": [40, 25, 28, 0, 35, 25, 40, 51, 40], "output": [40, 25, 28, 0, 35, 51]}, {"input": [52, 52, 11, 66, 66], "output": [52, 11, 66]}, {"input": [41, 62, 89, 80, 41, 41, 62], "output": [41, 62, 89, 80]}, {"input": [36, 98, 10, 96, 70, 36], "output": [36, 98, 10, 96, 70]}, {"input": [34, 76, 3, 76, 34, 55], "output": [34, 76, 3, 55]}, {"input": [46, 98, 65, 85, 85, 46, 98], "output": [46, 98, 65, 85]}, {"input": [15, 9, 28, 25, 22, 25, 59, 71], "output": [15, 9, 28, 25, 22, 59, 71]}, {"input": [77, 57, 57, 49, 49, 46, 68], "output": [77, 57, 49, 46, 68]}, {"input": [18, 1, 18, 18, 93, 15, 11, 32], "output": [18, 1, 93, 15, 11, 32]}]}
{"id": "c011", "function": "def c011(x):\n    # [1:4] of the input\n    return x[1:4]\n\n", "train": {"normal": [{"input": [52, 49, 88, 98, 76, 46, 25], "output": [49, 88, 98]}, {"input": [25, 19, 77, 37], "output": [19, 77, 37]}, {"input": [64, 53, 59, 97, 39], "output": [53, 59, 97]}, {"input": [57, 75, 72, 75], "output": [75, 72, 75]}, {"input": [72, 45, 56, 91, 16], "output": [45, 56, 91]}, {"input": [22, 30, 40, 18, 46, 90, 62], "output": [30, 40, 18]}, {"input": [80, 86, 99, 39, 89], "output": [86, 99, 39]}, {"input": [12, 48, 57, 48, 71, 20, 96], "output": [48, 57, 48]}, {"input": [97, 38, 53, 82, 46, 58, 42], "output": [38, 53, 82]}, {"input": [47, 21, 93, 93, 59, 35], "output": [21, 93, 93]}], "ood": [], "noise": [{"input": [24, 36, 94, 88], "output": [87, 94, 88]}, {"input": [50, 31, 77, 86, 17], "output": [71, 77, 86]}, {"input": [70, 99, 38, 3, 66], "output": [99, 38, 21]}, {"input": [92, 30, 36, 97, 35, 54, 29], "output": [30, 61, 97]}, {"input": [95, 40, 84, 58, 32], "output": [48, 84, 58]}]}, "test": [{"input": [40, 24, 79, 19, 23, 88, 97], "output": [24, 79, 19]}, {"input": [68, 59, 3, 60], "output": [59, 3, 60]}, {"input": [36, 70, 96, 68, 95], "output": [70, 96, 68]}, {"input": [6, 0, 70, 37, 25], "output": [0, 70, 37]}, {"input": [73, 31, 70, 13], "output": [31, 70, 13]}, {"input": [40, 72, 21, 60], "output": [72, 21, 60]}, {"input": [61, 64, 44, 44], "output": [64, 44, 44]}, {"input": [82, 72, 19, 26, 74, 35], "output": [72, 19, 26]}, {"input": [81, 35, 23, 95, 10, 55], "output": [35, 23, 95]}, {"input": [93, 59, 73, 67], "output": [59, 73, 67]}]}
{"id": "c104", "function": "def c104(x):\n    # maximum element\n    return [max(x)]\n\n", "train": {"normal": [{"input": [10, 4, 99, 46, 14], "output": [99]}, {"input": [77, 72, 46, 11], "output": [77]}, {"input": [8, 25, 58, 67, 85, 73], "output": [85]}, {"input": [56, 62, 33, 65], "output": [65]}, {"input": [99, 40, 74, 22, 76], "output": [99]}, {"input": [11, 34, 10, 80, 69], "output": [80]}, {"input": [56, 52, 61], "output": [61]}, {"input": [9, 87, 31, 15, 69], "output": [87]}, {"input": [26, 27, 79, 0, 79, 14], "output": [79]}, {"input": [21, 56, 63, 86, 47, 2, 50], "output": [86]}], "ood": [], "noise": [{"input": [95, 44, 27, 69, 49, 49, 44], "output": [96]}, {"input": [5, 25, 61, 25, 35, 85, 25], "output": [86]}, {"input": [2, 40, 66, 91, 3], "output": [92]}, {"input": [6, 59, 50, 94], "output": [95]}, {"input": [59, 76, 57, 41], "output": [77]}]}, "test": [{"input": [0, 30, 7, 68, 6], "output": [68]}, {"input": [83, 54, 80, 34, 26], "output": [83]}, {"input": [29, 85, 83, 91], "output": [91]}, {"input": [27, 32, 30, 64, 72, 49], "output": [72]}, {"input": [86, 74, 24, 76], "output": [86]}, {"input": [74, 66, 23, 70, 79, 45], "output": [79]}, {"input": [88, 21, 3], "output": [88]}, {"input": [45, 73, 48], "output": [73]}, {"input": [77, 18, 28, 94], "output": [94]}, {"input": [23, 60, 25, 20, 2, 94, 2], "output": [94]}]}
{"id": "c192", "function": "def c192(x):\n    # replace each element, M, with its tens digit, if no tens digit, replace with 0\n    return [int(str(i)[-2]) if len(str(i)) > 1 else 0 for i in x]\n\n", "train": {"normal": [{"input": [67, 45, 71, 12, 46], "output": [6, 4, 7, 1, 4]}, {"input": [98, 46, 2, 56, 96, 17, 25], "output": [9, 4, 0, 5, 9, 1, 2]}, {"input": [47, 54, 91, 82], "output": [4, 5, 9, 8]}, {"input": [90, 24, 95, 37, 86, 84], "output": [9, 2, 9, 3, 8, 8]}, {"input": [17, 79, 78, 89, 26, 10, 14], "output": [1, 7, 7, 8, 2, 1, 1]}, {"input": [78, 98, 35, 25], "output": [7, 9, 3, 2]}, {"input": [27, 21, 51, 83, 2, 27, 41], "output": [2, 2, 5, 8, 0, 2, 4]}, {"input": [16, 66, 90, 23], "output": [1, 6, 9, 2]}, {"input": [44, 5, 16, 80, 99, 40], "output": [4, 0, 1, 8, 9, 4]}, {"input": [30, 40, 94, 57, 7, 73], "output": [3, 4, 9, 5, 0, 7]}], "ood": [], "noise": [{"input": [82, 29, 36, 66], "output": [8, 2, 2, 6]}, {"input": [4, 16, 14, 32, 71, 48, 14], "output": [1, 1, 2, 3, 7, 5, 1]}, {"input": [90, 19, 40, 35, 33], "output": [2, 1, 4, 3, 3]}, {"input": [55, 26, 69, 26, 59, 73, 24], "output": [5, 5, 6, 2, 5, 7, 5]}, {"input": [89, 42, 8, 72, 34, 98, 84], "output": [8, 4, 0, 2, 8, 5, 8]}]}, "test": [{"input": [57, 21, 25], "output": [5, 2, 2]}, {"input": [16, 70, 58, 56, 89], "output": [1, 7, 5, 5, 8]}, {"input": [7, 3, 86, 68, 43, 90], "output": [0, 0, 8, 6, 4, 9]}, {"input": [21, 65, 31, 46, 58], "output": [2, 6, 3, 4, 5]}, {"input": [25, 68, 83, 42, 33], "output": [2, 6, 8, 4, 3]}, {"input": [6, 2, 80], "output": [0, 0, 8]}, {"input": [70, 93, 30, 3, 72, 79], "output": [7, 9, 3, 0, 7, 7]}, {"input": [57, 32, 62, 79, 32, 52], "output": [5, 3, 6, 7, 3, 5]}, {"input": [77, 74, 15, 7], "output": [7, 7, 1, 0]}, {"input": [58, 62, 77], "output": [5, 6, 7]}]}
{"id": "c182", "function": "def c182(x):\n    # keep every third element\n    return x[::3]\n\n", "train": {"normal": [{"input": [50, 51, 59, 50, 77, 35, 57, 6], "output": [50, 50, 57]}, {"input": [19, 31, 8, 38, 6, 70], "output": [19, 38]}, {"input": [46, 63, 55, 43, 32, 53], "output": [46, 43]}, {"input": [95, 45, 68, 36, 49], "output": [95, 36]}, {"input": [23, 89, 77, 95, 8, 89], "output": [23, 95]}, {"input": [15, 30, 30, 54, 41, 15, 74, 48], "output": [15, 54, 74]}, {"input": [25, 27, 53, 56, 80, 2], "output": [25, 56]}, {"input": [64, 42, 67, 55, 77, 21, 10, 36], "output": [64, 55, 10]}, {"input": [0, 45, 36, 68, 53, 97, 69, 30, 23], "output": [0, 68, 69]}, {"input": [45, 22, 48, 6, 9, 93], "output": [45, 6]}], "ood": [], "noise": [{"input": [95, 35, 81, 56, 16, 61, 11, 54, 17], "output": [79, 32, 11]}, {"input": [50, 42, 90, 5], "output": [50, 44]}, {"input": [53, 79, 78, 34, 49, 20], "output": [37, 34]}, {"input": [96, 29, 30, 77, 99], "output": [96, 84]}, {"input": [91, 20, 19, 7, 57, 80, 83, 83, 77], "output": [91, 72, 88]}]}, "test": [{"input": [61, 78, 82, 88, 45, 41, 41, 46], "output": [61, 88, 41]}, {"input": [7, 19, 86, 3, 94, 29, 37, 26, 2], "output": [7, 3, 37]}, {"input": [47, 50, 8], "output": [47]}, {"input": [91, 63, 50], "output": [91]}, {"input": [61, 86, 64, 60, 11], "output": [61, 60]}, {"input": [88, 7, 78, 7, 73, 38], "output": [88, 7]}, {"input": [49, 59, 36], "output": [49]}, {"input": [43, 51, 38, 5, 48, 19, 47], "output": [43, 5, 47]}, {"input": [95, 20, 89], "output": [95]}, {"input": [11, 87, 19, 27], "output": [11, 27]}]}
{"id": "c006", "function": "def c006(x):\n    # the first 2 elements\n    return x[:2]\n\n", "train": {"normal": [{"input": [21, 80, 72, 11, 67, 19], "output": [21, 80]}, {"input": [91, 93, 52, 1, 75, 83, 80], "output": [91, 93]}, {"input": [68, 73, 79, 46, 23, 11], "output": [68, 73]}, {"input": [26, 62, 3, 36, 58, 92], "output": [26, 62]}, {"input": [5, 90, 58], "output": [5, 90]}, {"input": [31, 95, 67, 66, 93, 69], "output": [31, 95]}, {"input": [11, 45, 69, 74, 29, 93, 35], "output": [11, 45]}, {"input": [4, 51, 96, 34, 11, 29], "output": [4, 51]}, {"input": [90, 26, 74, 85, 84], "output": [90, 26]}, {"input": [24, 46, 44, 23, 98, 38, 16], "output": [24, 46]}], "ood": [], "noise": [{"input": [39, 78, 46, 94, 72, 22], "output": [63, 78]}, {"input": [26, 62, 70, 44], "output": [33, 62]}, {"input": [17, 47, 53, 96, 33, 68], "output": [17, 19]}, {"input": [94, 3, 51, 67, 36], "output": [94, 17]}, {"input": [45, 58, 19, 63, 78], "output": [56, 58]}]}, "test": [{"input": [14, 15, 46, 21], "output": [14, 15]}, {"input": [88, 28, 63, 58, 53, 12, 97], "output": [88, 28]}, {"input": [14, 9, 77, 26], "output": [14, 9]}, {"input": [3, 76, 83, 40], "output": [3, 76]}, {"input": [18, 89, 48, 43, 4, 40, 43], "output": [18, 89]}, {"input": [48, 90, 70, 4], "output": [48, 90]}, {"input": [65, 45, 77, 65, 12, 88], "output": [65, 45]}, {"input": [71, 98, 87, 37, 5, 76], "output": [71, 98]}, {"input": [53, 51, 57], "output": [53, 51]}, {"input": [40, 63, 46, 28, 0, 21], "output": [40, 63]}]}
{"id": "c046", "function": "def c046(x):\n    # prepend 7\n    return [7] + x\n\n", "train": {"normal": [{"input": [83, 6, 59, 62, 28], "output": [7, 83, 6, 59, 62, 28]}, {"input": [39, 84, 93, 31], "output": [7, 39, 84, 93, 31]}, {"input": [8, 61, 11], "output": [7, 8, 61, 11]}, {"input": [13, 13, 63, 51], "output": [7, 13, 13, 63, 51]}, {"input": [62, 6, 9, 14, 16, 61], "output": [7, 62, 6, 9, 14, 16, 61]}, {"input": [72, 5, 69, 88], "output": [7, 72, 5, 69, 88]}, {"input": [85, 40, 18, 58, 89, 42], "output": [7, 85, 40, 18, 58, 89, 42]}, {"input": [36, 27, 40], "output": [7, 36, 27, 40]}, {"input": [99, 67, 84, 29, 69], "output": [7, 99, 67, 84, 29, 69]}, {"input": [58, 8, 38, 33, 50, 58], "output": [7, 58, 8, 38, 33, 50, 58]}], "ood": [], "noise": [{"input": [2, 68, 79, 22], "output": [7, 2, 67, 79, 22]}, {"input": [48, 43, 52, 22, 9], "output": [21, 48, 43, 52, 22, 9]}, {"input": [36, 73, 50, 18], "output": [56, 36, 73, 39, 18]}, {"input": [73, 40, 26, 12], "output": [64, 73, 40, 26, 12]}, {"input": [79, 21, 20, 74, 45, 25, 46], "output": [7, 79, 21, 12, 74, 45, 25, 46]}]}, "test": [{"input": [9, 74, 61, 16, 51], "output": [7, 9, 74, 61, 16, 51]}, {"input": [45, 65, 96, 24, 21, 71, 86], "output": [7, 45, 65, 96, 24, 21, 71, 86]}, {"input": [98, 97, 95], "output": [7, 98, 97, 95]}, {"input": [89, 36, 13, 43, 90, 18, 15], "output": [7, 89, 36, 13, 43, 90, 18, 15]}, {"input": [74, 58, 99, 47, 88, 10], "output": [7, 74, 58, 99, 47, 88, 10]}, {"input": [80, 96, 96, 47], "output": [7, 80, 96, 96, 47]}, {"input": [32, 84, 53, 8, 43, 62, 89], "output": [7, 32, 84, 53, 8, 43, 62, 89]}, {"input": [17, 53, 50, 22, 31], "output": [7, 17, 53, 50, 22, 31]}, {"input": [73, 9, 41, 51, 19], "output": [7, 73, 9, 41, 51, 19]}, {"input": [24, 9, 45, 28, 16, 61], "output": [7, 24, 9, 45, 28, 16, 61]}]}
{"id": "c106", "function": "def c106(x):\n    # elements in ascending order\n    return sorted(x)\n\n", "train": {"normal": [{"input": [62, 95, 41], "output": [41, 62, 95]}, {"input": [68, 5, 27, 99, 68, 81, 2], "output": [2, 5, 27, 68, 68, 81, 99]}, {"input": [56, 83, 16, 16, 83, 55], "output": [16, 16, 55, 56, 83, 83]}, {"input": [46, 31, 30, 65, 59, 82], "output": [30, 31, 46, 59, 65, 82]}, {"input": [76, 84, 67, 26], "output": [26, 67, 76, 84]}, {"input": [43, 57, 42, 90], "output": [42, 43, 57, 90]}, {"input": [97, 78, 43], "output": [43, 78, 97]}, {"input": [71, 31, 57], "output": [31, 57, 71]}, {"input": [79, 35, 20, 61, 65, 69, 93], "output": [20, 35, 61, 65, 69, 79, 93]}, {"input": [27, 40, 7, 32, 45, 34, 58], "output": [7, 27, 32, 34, 40, 45, 58]}], "ood": [], "noise": [{"input": [46, 98, 81, 41], "output": [41, 46, 52, 75]}, {"input": [38, 6, 45, 1, 41], "output": [1, 6, 38, 12, 45]}, {"input": [54, 35, 1, 16, 45, 13, 74], "output": [1, 13, 35, 35, 45, 54, 74]}, {"input": [25, 27, 0, 88, 66, 3, 78], "output": [41, 3, 78, 27, 66, 78, 39]}, {"input": [90, 44, 40, 0, 52, 61], "output": [3, 40, 44, 52, 65, 62]}]}, "test": [{"input": [68, 60, 57, 31, 64], "output": [31, 57, 60, 64, 68]}, {"input": [41, 28, 66, 87, 90, 78], "output": [28, 41, 66, 78, 87, 90]}, {"input": [48, 0, 79, 72, 58], "output": [0, 48, 58, 72, 79]}, {"input": [11, 63, 57, 46], "output": [11, 46, 57, 63]}, {"input": [6, 53, 96, 20, 82], "output": [6, 20, 53, 82, 96]}, {"input": [95, 31, 58, 95, 54], "output": [31, 54, 58, 95, 95]}, {"input": [75, 31, 48], "output": [31, 48, 75]}, {"input": [40, 68, 15, 47, 31, 23], "output": [15, 23, 31, 40, 47, 68]}, {"input": [19, 57, 88], "output": [19, 57, 88]}, {"input": [21, 39, 11, 12, 15], "output": [11, 12, 15, 21, 39]}]}
{"id": "c114", "function": "def c114(x):\n    # prepend the last element\n    return [x[-1]] + x\n\n", "train": {"normal": [{"input": [81, 46, 28, 41, 52, 55], "output": [55, 81, 46, 28, 41, 52, 55]}, {"input": [63, 3, 14, 83, 43, 52], "output": [52, 63, 3, 14, 83, 43, 52]}, {"input": [46, 77, 52], "output": [52, 46, 77, 52]}, {"input": [69, 68, 53, 83, 72, 32], "output": [32, 69, 68, 53, 83, 72, 32]}, {"input": [85, 90, 55, 62], "output": [62, 85, 90, 55, 62]}, {"input": [42, 42, 49, 29, 67, 17], "output": [17, 42, 42, 49, 29, 67, 17]}, {"input": [70, 63, 40, 3], "output": [3, 70, 63, 40, 3]}, {"input": [90, 63, 15, 92, 29, 91, 79], "output": [79, 90, 63, 15, 92, 29, 91, 79]}, {"input": [49, 20, 18], "output": [18, 49, 20, 18]}, {"input": [47, 29, 73, 1], "output": [1, 47, 29, 73, 1]}], "ood": [], "noise": [{"input": [93, 72, 79, 79, 53], "output": [53, 93, 72, 78, 79, 53]}, {"input": [21, 57, 5, 49, 9, 63], "output": [63, 56, 62, 5, 56, 9, 63]}, {"input": [42, 80, 99, 92, 2, 25, 26], "output": [26, 15, 80, 99, 92, 2, 25, 26]}, {"input": [73, 65, 51, 30, 3, 87], "output": [3, 73, 12, 5, 30, 3, 87]}, {"input": [53, 31, 64, 12, 67, 3], "output": [3, 53, 46, 64, 12, 67, 3]}]}, "test": [{"input": [85, 10, 3, 77], "output": [77, 85, 10, 3, 77]}, {"input": [33, 79, 43, 11, 13], "output": [13, 33, 79, 43, 11, 13]}, {"input": [17, 86, 39], "output": [39, 17, 86, 39]}, {"input": [40, 42, 98, 7, 47, 72], "output": [72, 40, 42, 98, 7, 47, 72]}, {"input": [53, 19, 25, 84], "output": [84, 53, 19, 25, 84]}, {"input": [53, 14, 47, 14, 79], "output": [79, 53, 14, 47, 14, 79]}, {"input": [35, 64, 57, 36, 35], "output": [35, 35, 64, 57, 36, 35]}, {"input": [22, 50, 50], "output": [50, 22, 50, 50]}, {"input": [12, 54, 35, 39], "output": [39, 12, 54, 35, 39]}, {"input": [18, 92, 88, 26, 54], "output": [54, 18, 92, 88, 26, 54]}]}
{"id": "c093", "function": "def c093(x):\n    # repeat the first element 7 times\n    return [x[0]] * 7\n\n", "train": {"normal": [{"input": [1, 9, 85, 89, 86, 12], "output": [1, 1, 1, 1, 1, 1, 1]}, {"input": [89, 53, 75, 64], "output": [89, 89, 89, 89, 89, 89, 89]}, {"input": [41, 68, 45, 8, 74, 66], "output": [41, 41, 41, 41, 41, 41, 41]}, {"input": [89, 26, 75, 91], "output": [89, 89, 89, 89, 89, 89, 89]}, {"input": [32, 0, 35, 37], "output": [32, 32, 32, 32, 32, 32, 32]}, {"input": [25, 85, 82, 16], "output": [25, 25, 25, 25, 25, 25, 25]}, {"input": [19, 53, 62, 49, 56], "output": [19, 19, 19, 19, 19, 19, 19]}, {"input": [57, 18, 43, 7, 13], "output": [57, 57, 57, 57, 57, 57, 57]}, {"input": [55, 42, 3], "output": [55, 55, 55, 55, 55, 55, 55]}, {"input": [29, 87, 74, 52, 87, 73, 77], "output": [29, 29, 29, 29, 29, 29, 29]}], "ood": [], "noise": [{"input": [88, 28, 19, 78], "output": [88, 89, 88, 89, 88, 88, 89]}, {"input": [50, 86, 90, 35], "output": [51, 50, 50, 50, 50, 50, 50]}, {"input": [96, 64, 11, 73, 29, 39, 11], "output": [96, 96, 96, 97, 96, 96, 96]}, {"input": [56, 16, 94, 57], "output": [56, 56, 56, 56, 56, 57, 56]}, {"input": [5, 34, 67, 68, 92], "output": [5, 6, 5, 5, 5, 5, 5]}]}, "test": [{"input": [20, 69, 14, 46, 60, 41], "output": [20, 20, 20, 20, 20, 20, 20]}, {"input": [98, 77, 1, 58], "output": [98, 98, 98, 98, 98, 98, 98]}, {"input": [89, 8, 36, 86, 84, 50, 49], "output": [89, 89, 89, 89, 89, 89, 89]}, {"input": [14, 10, 44, 87, 49, 86], "output": [14, 14, 14, 14, 14, 14, 14]}, {"input": [51, 36, 94], "output": [51, 51, 51, 51, 51, 51, 51]}, {"input": [16, 58, 63, 60, 66, 28], "output": [16, 16, 16, 16, 16, 16, 16]}, {"input": [14, 46, 17, 8], "output": [14, 14, 14, 14, 14, 14, 14]}, {"input": [36, 96, 82, 45], "output": [36, 36, 36, 36, 36, 36, 36]}, {"input": [26, 1, 87, 37, 21], "output": [26, 26, 26, 26, 26, 26, 26]}, {"input": [82, 66, 78, 23], "output": [82, 82, 82, 82, 82, 82, 82]}]}
{"id": "c195", "function": "def c195(x):\n    # element 1, followed by 23, 68, 42, 99, 71, followed by last element\n    return [x[0], 23, 68, 42, 99, 71, x[-1]]\n\n", "train": {"normal": [{"input": [96, 27, 58], "output": [96, 23, 68, 42, 99, 71, 58]}, {"input": [17, 33, 27, 0, 92, 46], "output": [17, 23, 68, 42, 99, 71, 46]}, {"input": [86, 48, 14, 39, 38], "output": [86, 23, 68, 42, 99, 71, 38]}, {"input": [96, 84, 94, 25, 19], "output": [96, 23, 68, 42, 99, 71, 19]}, {"input": [85, 23, 71], "output": [85, 23, 68, 42, 99, 71, 71]}, {"input": [6, 71, 76, 16, 7], "output": [6, 23, 68, 42, 99, 71, 7]}, {"input": [38, 42, 28], "output": [38, 23, 68, 42, 99, 71, 28]}, {"input": [29, 82, 35, 84, 23, 25, 34], "output": [29, 23, 68, 42, 99, 71, 34]}, {"input": [69, 7, 64, 3], "output": [69, 23, 68, 42, 99, 71, 3]}, {"input": [65, 32, 62, 22, 7, 68], "output": [65, 23, 68, 42, 99, 71, 68]}], "ood": [], "noise": [{"input": [28, 63, 24], "output": [28, 38, 68, 42, 70, 71, 24]}, {"input": [87, 53, 61, 68, 65], "output": [87, 23, 68, 42, 99, 36, 41]}, {"input": [47, 46, 81, 25, 18, 96], "output": [47, 26, 68, 42, 99, 71, 96]}, {"input": [61, 49, 52, 17, 80, 7], "output": [64, 62, 68, 42, 99, 71, 16]}, {"input": [79, 25, 91, 23, 87, 8], "output": [61, 23, 68, 42, 99, 71, 56]}]}, "test": [{"input": [85, 50, 62, 17, 38, 57, 97], "output": [85, 23, 68, 42, 99, 71, 97]}, {"input": [14, 33, 60, 86, 67, 30, 97], "output": [14, 23, 68, 42, 99, 71, 97]}, {"input": [29, 32, 18, 99, 13, 44], "output": [29, 23, 68, 42, 99, 71, 44]}, {"input": [12, 89, 37], "output": [12, 23, 68, 42, 99, 71, 37]}, {"input": [24, 8, 17, 36], "output": [24, 23, 68, 42, 99, 71, 36]}, {"input": [9, 61, 75, 17], "output": [9, 23, 68, 42, 99, 71, 17]}, {"input": [16, 20, 14, 95], "output": [16, 23, 68, 42, 99, 71, 95]}, {"input": [34, 14, 49, 8], "output": [34, 23, 68, 42, 99, 71, 8]}, {"input": [43, 23, 14, 79], "output": [43, 23, 68, 42, 99, 71, 79]}, {"input": [36, 22, 37, 41], "output": [36, 23, 68, 42, 99, 71, 41]}]}
{"id": "c196", "function": "def c196(x):\n    # concatenate 17, 38, 82 input 1 55 27\n    return [17, 38, 82] + x + [1, 55, 27]\n\n", "train": {"normal": [{"input": [52, 69, 12, 6, 36], "output": [17, 38, 82, 52, 69, 12, 6, 36, 1, 55, 27]}, {"input": [31, 2, 74, 46, 25, 20], "output": [17, 38, 82, 31, 2, 74, 46, 25, 20, 1, 55, 27]}, {"input": [91, 36], "output": [17, 38, 82, 91, 36, 1, 55, 27]}, {"input": [78, 75, 80], "output": [17, 38, 82, 78, 75, 80, 1, 55, 27]}, {"input": [31, 6, 93, 95, 10], "output": [17, 38, 82, 31, 6, 93, 95, 10, 1, 55, 27]}, {"input": [13, 86, 41, 18], "output": [17, 38, 82, 13, 86, 41, 18, 1, 55, 27]}, {"input": [3, 44, 13, 90, 5], "output": [17, 38, 82, 3, 44, 13, 90, 5, 1, 55, 27]}, {"input": [93, 96, 61, 66, 90], "output": [17, 38, 82, 93, 96, 61, 66, 90, 1, 55, 27]}, {"input": [66, 34, 86, 2, 91, 41], "output": [17, 38, 82, 66, 34, 86, 2, 91, 41, 1, 55, 27]}, {"input": [39, 17], "output": [17, 38, 82, 39, 17, 1, 55, 27]}], "ood": [], "noise": [{"input": [25, 30, 75, 12, 93, 48], "output": [90, 38, 82, 25, 30, 75, 12, 93, 3, 57, 2, 48]}, {"input": [68, 30, 2], "output": [17, 38, 82, 68, 30, 2, 67, 55, 27]}, {"input": [39, 18, 47], "output": [17, 38, 9, 48, 18, 47, 1, 55, 6]}, {"input": [18, 70, 69, 12, 78], "output": [17, 38, 82, 18, 5, 69, 12, 6, 1, 65, 27]}, {"input": [88, 56, 49, 5, 38], "output": [51, 38, 82, 88, 56, 49, 5, 47, 8, 55, 27]}]}, "test": [{"input": [48, 73, 31, 60, 34, 62], "output": [17, 38, 82, 48, 73, 31, 60, 34, 62, 1, 55, 27]}, {"input": [65, 64, 54, 97, 67, 7], "output": [17, 38, 82, 65, 64, 54, 97, 67, 7, 1, 55, 27]}, {"input": [44, 90, 90], "output": [17, 38, 82, 44, 90, 90, 1, 55, 27]}, {"input": [34, 40, 4], "output": [17, 38, 82, 34, 40, 4, 1, 55, 27]}, {"input": [53, 59, 67, 16, 95], "output": [17, 38, 82, 53, 59, 67, 16, 95, 1, 55, 27]}, {"input": [62, 79, 76], "output": [17, 38, 82, 62, 79, 76, 1, 55, 27]}, {"input": [57, 35], "output": [17, 38, 82, 57, 35, 1, 55, 27]}, {"input": [46, 87, 64], "output": [17, 38, 82, 46, 87, 64, 1, 55, 27]}, {"input": [40, 12, 28, 50, 61, 31], "output": [17, 38, 82, 40, 12, 28, 50, 61, 31, 1, 55, 27]}, {"input": [56, 95, 27], "output": [17, 38, 82, 56, 95, 27, 1, 55, 27]}]}
{"id": "c095", "function": "def c095(x):\n    # remove the first element and the last element\n    return x[1:-1]\n\n", "train": {"normal": [{"input": [4, 41, 30, 43, 12], "output": [41, 30, 43]}, {"input": [87, 62, 96, 95, 2], "output": [62, 96, 95]}, {"input": [0, 29, 86, 62, 55, 74], "output": [29, 86, 62, 55]}, {"input": [1, 15, 26, 13, 30, 19, 82], "output": [15, 26, 13, 30, 19]}, {"input": [17, 60, 62, 58, 38, 29, 88], "output": [60, 62, 58, 38, 29]}, {"input": [17, 32, 91, 22, 44], "output": [32, 91, 22]}, {"input": [46, 61, 14, 13, 52, 58, 16], "output": [61, 14, 13, 52, 58]}, {"input": [28, 21, 64, 79, 73, 40], "output": [21, 64, 79, 73]}, {"input": [99, 42, 82, 16, 70], "output": [42, 82, 16]}, {"input": [78, 91, 72, 50], "output": [91, 72]}], "ood": [], "noise": [{"input": [71, 33, 27, 26, 89, 89, 66], "output": [33, 82, 26, 35, 89]}, {"input": [72, 95, 89, 76, 33], "output": [95, 85, 76]}, {"input": [90, 1, 23], "output": [2]}, {"input": [70, 32, 20], "output": [33]}, {"input": [72, 46, 8, 96], "output": [46, 18]}]}, "test": [{"input": [0, 24, 80, 77], "output": [24, 80]}, {"input": [41, 72, 96, 76, 64, 55, 52], "output": [72, 96, 76, 64, 55]}, {"input": [20, 20, 75, 25, 18], "output": [20, 75, 25]}, {"input": [69, 13, 97], "output": [13]}, {"input": [85, 73, 99], "output": [73]}, {"input": [78, 8, 38, 30], "output": [8, 38]}, {"input": [86, 19, 0, 70, 32, 67], "output": [19, 0, 70, 32]}, {"input": [76, 70, 19, 37, 69, 87], "output": [70, 19, 37, 69]}, {"input": [70, 37, 91, 76, 44, 8, 28], "output": [37, 91, 76, 44, 8]}, {"input": [13, 51, 45, 30, 10], "output": [51, 45, 30]}]}
{"id": "c016", "function": "def c016(x):\n    # replace element 1 with 8\n    return [8] + x[1:]\n\n", "train": {"normal": [{"input": [85, 18, 81, 53, 53], "output": [8, 18, 81, 53, 53]}, {"input": [74, 81, 57, 0], "output": [8, 81, 57, 0]}, {"input": [2, 98, 53], "output": [8, 98, 53]}, {"input": [73, 11, 7, 79, 95], "output": [8, 11, 7, 79, 95]}, {"input": [95, 64, 58, 39, 96, 26], "output": [8, 64, 58, 39, 96, 26]}, {"input": [43, 6, 63, 72, 10], "output": [8, 6, 63, 72, 10]}, {"input": [94, 18, 47, 11, 86, 55, 15], "output": [8, 18, 47, 11, 86, 55, 15]}, {"input": [54, 10, 24, 51, 4, 27], "output": [8, 10, 24, 51, 4, 27]}, {"input": [44, 25, 88, 89, 8], "output": [8, 25, 88, 89, 8]}, {"input": [71, 26, 74, 17, 82, 34, 87], "output": [8, 26, 74, 17, 82, 34, 87]}], "ood": [], "noise": [{"input": [29, 56, 9, 89, 66], "output": [8, 44, 56, 89, 66]}, {"input": [67, 22, 86, 37, 97], "output": [13, 22, 86, 30, 97]}, {"input": [94, 48, 70, 15, 2], "output": [8, 48, 70, 45, 25]}, {"input": [82, 87, 42, 7, 44, 40], "output": [8, 71, 39, 37, 44, 40]}, {"input": [33, 42, 87, 29], "output": [21, 42, 43, 29]}]}, "test": [{"input": [3, 29, 95], "output": [8, 29, 95]}, {"input": [48, 8, 59, 56], "output": [8, 8, 59, 56]}, {"input": [30, 8, 88, 67, 72, 35], "output": [8, 8, 88, 67, 72, 35]}, {"input": [94, 98, 84, 92, 95, 43], "output": [8, 98, 84, 92, 95, 43]}, {"input": [20, 13, 85, 11], "output": [8, 13, 85, 11]}, {"input": [22, 59, 55, 30, 62], "output": [8, 59, 55, 30, 62]}, {"input": [86, 88, 11, 44, 25, 46], "output": [8, 88, 11, 44, 25, 46]}, {"input": [45, 72, 33, 34], "output": [8, 72, 33, 34]}, {"input": [10, 58, 33, 56, 61], "output": [8, 58, 33, 56, 61]}, {"input": [2, 82, 12, 75], "output": [8, 82, 12, 75]}]}
{"id": "c224", "function": "def c224(x):\n    # reverse the list, then take every other element starting from the second element, then take every other element starting from the first element\n    return x[::-2] + x[(len(x) % 2)::2]\n\n", "train": {"normal": [{"input": [91, 54, 29], "output": [29, 91, 54]}, {"input": [76, 86, 73, 65], "output": [65, 86, 76, 73]}, {"input": [43, 28, 8, 25, 8, 16], "output": [16, 25, 28, 43, 8, 8]}, {"input": [87, 94, 55, 40], "output": [40, 94, 87, 55]}, {"input": [84, 87, 67, 29, 59, 28, 82], "output": [82, 59, 67, 84, 87, 29, 28]}, {"input": [61, 68, 85, 50], "output": [50, 68, 61, 85]}, {"input": [72, 8, 16], "output": [16, 72, 8]}, {"input": [43, 15, 35, 6, 39, 56], "output": [56, 6, 15, 43, 35, 39]}, {"input": [85, 10, 38, 59], "output": [59, 10, 85, 38]}, {"input": [99, 14, 23, 73, 77], "output": [77, 23, 99, 14, 73]}], "ood": [], "noise": [{"input": [63, 2, 32, 51], "output": [51, 27, 44, 32]}, {"input": [56, 91, 27, 39, 12], "output": [12, 27, 56, 91, 26]}, {"input": [27, 38, 54, 72, 69, 55, 37], "output": [37, 69, 54, 27, 70, 72, 55]}, {"input": [89, 44, 23, 18], "output": [18, 25, 89, 23]}, {"input": [56, 95, 17], "output": [60, 56, 95]}]}, "test": [{"input": [44, 10, 69, 92, 90, 18, 83], "output": [83, 90, 69, 44, 10, 92, 18]}, {"input": [13, 10, 23, 78], "output": [78, 10, 13, 23]}, {"input": [15, 19, 83, 82, 65, 57], "output": [57, 82, 19, 15, 83, 65]}, {"input": [45, 99, 77, 79], "output": [79, 99, 45, 77]}, {"input": [56, 85, 68], "output": [68, 56, 85]}, {"input": [32, 14, 49, 43, 50, 36], "output": [36, 43, 14, 32, 49, 50]}, {"input": [60, 17, 97, 42, 98, 71], "output": [71, 42, 17, 60, 97, 98]}, {"input": [80, 34, 48, 66, 72, 39, 92], "output": [92, 72, 48, 80, 34, 66, 39]}, {"input": [86, 20, 76], "output": [76, 86, 20]}, {"input": [8, 70, 16, 20, 66], "output": [66, 16, 8, 70, 20]}]}
{"id": "c116", "function": "def c116(x):\n    # reflect the input on itself\n    return x[::-1] + x[1:]\n\n", "train": {"normal": [{"input": [75, 70, 36, 28, 59, 0], "output": [0, 59, 28, 36, 70, 75, 70, 36, 28, 59, 0]}, {"input": [21, 19, 71, 96, 38], "output": [38, 96, 71, 19, 21, 19, 71, 96, 38]}, {"input": [23, 59, 53, 72, 21], "output": [21, 72, 53, 59, 23, 59, 53, 72, 21]}, {"input": [41, 79, 53], "output": [53, 79, 41, 79, 53]}, {"input": [85, 0, 3, 99, 37, 3, 78], "output": [78, 3, 37, 99, 3, 0, 85, 0, 3, 99, 37, 3, 78]}, {"input": [13, 57, 58, 54, 56, 4], "output": [4, 56, 54, 58, 57, 13, 57, 58, 54, 56, 4]}, {"input": [99, 41, 48, 64, 34, 53], "output": [53, 34, 64, 48, 41, 99, 41, 48, 64, 34, 53]}, {"input": [33, 86, 30, 65, 58, 85, 95], "output": [95, 85, 58, 65, 30, 86, 33, 86, 30, 65, 58, 85, 95]}, {"input": [94, 7, 77, 71, 37, 50], "output": [50, 37, 71, 77, 7, 94, 7, 77, 71, 37, 50]}, {"input": [42, 19, 57, 65, 91, 42], "output": [42, 91, 65, 57, 19, 42, 19, 57, 65, 91, 42]}], "ood": [], "noise": [{"input": [37, 69, 66, 72, 41], "output": [41, 72, 70, 69, 37, 39, 66, 72, 65]}, {"input": [42, 39, 30, 59], "output": [59, 30, 39, 50, 55, 30, 41]}, {"input": [70, 18, 72, 60, 88, 50, 64], "output": [64, 55, 88, 60, 41, 35, 70, 18, 48, 60, 88, 19, 64]}, {"input": [3, 16, 33, 94], "output": [94, 33, 7, 3, 16, 33, 94]}, {"input": [52, 59, 44, 10, 39, 41, 71], "output": [71, 41, 39, 10, 44, 59, 52, 59, 44, 10, 39, 41, 64]}]}, "test": [{"input": [75, 19, 25, 67], "output": [67, 25, 19, 75, 19, 25, 67]}, {"input": [16, 4, 76], "output": [76, 4, 16, 4, 76]}, {"input": [21, 80, 99, 84, 86], "output": [86, 84, 99, 80, 21, 80, 99, 84, 86]}, {"input": [49, 20, 5], "output": [5, 20, 49, 20, 5]}, {"input": [25, 72, 0, 99, 31, 55, 67], "output": [67, 55, 31, 99, 0, 72, 25, 72, 0, 99, 31, 55, 67]}, {"input": [2, 2, 80, 63, 82], "output": [82, 63, 80, 2, 2, 2, 80, 63, 82]}, {"input": [65, 9, 29, 53, 45, 44], "output": [44, 45, 53, 29, 9, 65, 9, 29, 53, 45, 44]}, {"input": [88, 8, 42, 26, 82, 47], "output": [47, 82, 26, 42, 8, 88, 8, 42, 26, 82, 47]}, {"input": [2, 90, 98, 43, 93], "output": [93, 43, 98, 90, 2, 90, 98, 43, 93]}, {"input": [14, 23, 63, 80, 14, 86], "output": [86, 14, 80, 63, 23, 14, 23, 63, 80, 14, 86]}]}
{"id": "c140", "function": "def c140(x):\n    # replace element 1 with 9\n    return x[:1] + [9] + x[2:]\n\n", "train": {"normal": [{"input": [32, 87, 56, 58, 35, 88, 98], "output": [32, 9, 56, 58, 35, 88, 98]}, {"input": [24, 42, 88, 7, 35, 62, 26], "output": [24, 9, 88, 7, 35, 62, 26]}, {"input": [82, 26, 49, 16], "output": [82, 9, 49, 16]}, {"input": [81, 12, 65, 65], "output": [81, 9, 65, 65]}, {"input": [46, 51, 75, 2, 29], "output": [46, 9, 75, 2, 29]}, {"input": [0, 4, 39, 17, 28, 90], "output": [0, 9, 39, 17, 28, 90]}, {"input": [23, 84, 64, 35, 16, 17, 88], "output": [23, 9, 64, 35, 16, 17, 88]}, {"input": [52, 96, 53, 4, 1, 51], "output": [52, 9, 53, 4, 1, 51]}, {"input": [87, 96, 8, 87, 18, 66, 8], "output": [87, 9, 8, 87, 18, 66, 8]}, {"input": [65, 89, 82, 34, 53, 99], "output": [65, 9, 82, 34, 53, 99]}], "ood": [], "noise": [{"input": [13, 67, 84], "output": [13, 29, 84]}, {"input": [49, 79, 60, 23, 18, 83], "output": [49, 9, 23, 23, 18, 83]}, {"input": [2, 96, 52, 5], "output": [2, 9, 42, 5]}, {"input": [54, 72, 82], "output": [54, 32, 55]}, {"input": [65, 55, 91], "output": [83, 60, 91]}]}, "test": [{"input": [83, 93, 8, 50, 70], "output": [83, 9, 8, 50, 70]}, {"input": [23, 5, 89, 13, 32, 33, 41], "output": [23, 9, 89, 13, 32, 33, 41]}, {"input": [44, 7, 77, 75, 53, 97, 11], "output": [44, 9, 77, 75, 53, 97, 11]}, {"input": [84, 43, 53, 21, 43, 8, 2], "output": [84, 9, 53, 21, 43, 8, 2]}, {"input": [47, 92, 19], "output": [47, 9, 19]}, {"input": [40, 36, 25, 21], "output": [40, 9, 25, 21]}, {"input": [22, 88, 46, 62, 79, 3, 18], "output": [22, 9, 46, 62, 79, 3, 18]}, {"input": [7, 51, 33, 22, 10], "output": [7, 9, 33, 22, 10]}, {"input": [4, 96, 78, 34, 22], "output": [4, 9, 78, 34, 22]}, {"input": [96, 43, 38], "output": [96, 9, 38]}]}
{"id": "c049", "function": "def c049(x):\n    # remove the first element\n    return x[1:]\n\n", "train": {"normal": [{"input": [90, 21, 43], "output": [21, 43]}, {"input": [68, 85, 54, 7, 15, 70, 24], "output": [85, 54, 7, 15, 70, 24]}, {"input": [12, 39, 23, 26], "output": [39, 23, 26]}, {"input": [33, 67, 53], "output": [67, 53]}, {"input": [88, 85, 27, 44, 95], "output": [85, 27, 44, 95]}, {"input": [82, 98, 15, 38], "output": [98, 15, 38]}, {"input": [82, 29, 97, 81, 28, 79, 0], "output": [29, 97, 81, 28, 79, 0]}, {"input": [3, 49, 34, 19, 99], "output": [49, 34, 19, 99]}, {"input": [83, 1, 42, 23, 24, 23, 69], "output": [1, 42, 23, 24, 23, 69]}, {"input": [59, 57, 19, 84, 11, 94, 22], "output": [57, 19, 84, 11, 94, 22]}], "ood": [], "noise": [{"input": [97, 21, 41, 56], "output": [21, 34, 46]}, {"input": [73, 80, 38], "output": [71, 38]}, {"input": [64, 28, 31, 37, 4, 85], "output": [26, 31, 53, 4, 85]}, {"input": [66, 66, 93, 60, 47], "output": [80, 93, 60, 47]}, {"input": [31, 65, 84, 13, 71], "output": [65, 84, 13, 24]}]}, "test": [{"input": [13, 78, 81, 28, 29, 36], "output": [78, 81, 28, 29, 36]}, {"input": [27, 3, 59], "output": [3, 59]}, {"input": [54, 25, 43, 69, 86], "output": [25, 43, 69, 86]}, {"input": [11, 41, 95, 39], "output": [41, 95, 39]}, {"input": [76, 56, 83, 45], "output": [56, 83, 45]}, {"input": [42, 9, 54, 81], "output": [9, 54, 81]}, {"input": [34, 75, 90, 43, 37], "output": [75, 90, 43, 37]}, {"input": [62, 36, 61], "output": [36, 61]}, {"input": [72, 75, 51, 87, 48, 20], "output": [75, 51, 87, 48, 20]}, {"input": [66, 61, 92, 51, 53, 3], "output": [61, 92, 51, 53, 3]}]}
{"id": "c071", "function": "def c071(x):\n    # add 2 to each element\n    return [i+2 for i in x]\n\n", "train": {"normal": [{"input": [63, 72, 0, 68, 96, 37], "output": [65, 74, 2, 70, 98, 39]}, {"input": [91, 26, 97, 69], "output": [93, 28, 99, 71]}, {"input": [82, 84, 92, 18, 62, 84], "output": [84, 86, 94, 20, 64, 86]}, {"input": [26, 60, 72, 23, 4, 73, 14], "output": [28, 62, 74, 25, 6, 75, 16]}, {"input": [48, 23, 49], "output": [50, 25, 51]}, {"input": [5, 52, 42, 31], "output": [7, 54, 44, 33]}, {"input": [98, 65, 28, 34, 32], "output": [100, 67, 30, 36, 34]}, {"input": [46, 57, 36, 65, 49, 7], "output": [48, 59, 38, 67, 51, 9]}, {"input": [54, 28, 59, 6], "output": [56, 30, 61, 8]}, {"input": [94, 49, 25, 6, 47], "output": [96, 51, 27, 8, 49]}], "ood": [], "noise": [{"input": [97, 32, 81], "output": [99, 99, 72]}, {"input": [5, 99, 3], "output": [7, 25, 10]}, {"input": [54, 83, 54, 38, 86, 89, 61], "output": [71, 85, 56, 40, 88, 75, 63]}, {"input": [3, 11, 71, 31, 10, 88], "output": [5, 71, 73, 33, 12, 90]}, {"input": [82, 30, 24, 15, 58], "output": [84, 37, 26, 17, 60]}]}, "test": [{"input": [45, 70, 68, 93, 60, 38, 67], "output": [47, 72, 70, 95, 62, 40, 69]}, {"input": [57, 79, 69, 15, 85], "output": [59, 81, 71, 17, 87]}, {"input": [6, 89, 7], "output": [8, 91, 9]}, {"input": [5, 34, 18], "output": [7, 36, 20]}, {"input": [28, 82, 57, 13, 49], "output": [30, 84, 59, 15, 51]}, {"input": [16, 35, 21], "output": [18, 37, 23]}, {"input": [0, 58, 40, 52], "output": [2, 60, 42, 54]}, {"input": [39, 22, 80, 52, 78], "output": [41, 24, 82, 54, 80]}, {"input": [59, 50, 25, 13, 66, 13, 22], "output": [61, 52, 27, 15, 68, 15, 24]}, {"input": [74, 10, 53, 65, 44], "output": [76, 12, 55, 67, 46]}]}
{"id": "c161", "function": "def c161(x):\n    # replace each element, M, with M + the input length - M index\n    return [i + len(x) - j for j, i in enumerate(x)]\n\n", "train": {"normal": [{"input": [46, 42, 1, 70], "output": [50, 45, 3, 71]}, {"input": [25, 68, 70, 94, 96, 4, 52], "output": [32, 74, 75, 98, 99, 6, 53]}, {"input": [26, 72, 75, 53, 9, 86], "output": [32, 77, 79, 56, 11, 87]}, {"input": [46, 62, 39, 15, 86, 6], "output": [52, 67, 43, 18, 88, 7]}, {"input": [64, 64, 92, 89, 55, 72, 90], "output": [71, 70, 97, 93, 58, 74, 91]}, {"input": [99, 2, 16, 76, 2, 6], "output": [105, 7, 20, 79, 4, 7]}, {"input": [52, 80, 48, 8, 12, 55, 94], "output": [59, 86, 53, 12, 15, 57, 95]}, {"input": [2, 55, 89], "output": [5, 57, 90]}, {"input": [51, 67, 3, 2, 5, 91], "output": [57, 72, 7, 5, 7, 92]}, {"input": [59, 66, 88, 92, 94], "output": [64, 70, 91, 94, 95]}], "ood": [], "noise": [{"input": [23, 96, 62, 31, 14, 78], "output": [87, 101, 66, 101, 64, 79]}, {"input": [91, 97, 52, 60, 28, 56, 61], "output": [98, 103, 57, 79, 31, 58, 62]}, {"input": [58, 54, 9, 37], "output": [62, 57, 49, 55]}, {"input": [39, 29, 85, 32, 5, 37, 76], "output": [66, 35, 90, 36, 11, 39, 23]}, {"input": [36, 88, 82, 65], "output": [40, 44, 84, 80]}]}, "test": [{"input": [10, 24, 51, 53], "output": [14, 27, 53, 54]}, {"input": [89, 32, 11, 55, 97, 69], "output": [95, 37, 15, 58, 99, 70]}, {"input": [69, 95, 71, 69], "output": [73, 98, 73, 70]}, {"input": [95, 21, 43, 26, 42, 34], "output": [101, 26, 47, 29, 44, 35]}, {"input": [41, 71, 96], "output": [44, 73, 97]}, {"input": [22, 77, 98, 44, 24, 76], "output": [28, 82, 102, 47, 26, 77]}, {"input": [90, 61, 78, 91, 80, 20, 29], "output": [97, 67, 83, 95, 83, 22, 30]}, {"input": [71, 56, 3], "output": [74, 58, 4]}, {"input": [94, 57, 12], "output": [97, 59, 13]}, {"input": [25, 36, 9, 60], "output": [29, 39, 11, 61]}]}
{"id": "c068", "function": "def c068(x):\n    # concatenate the input with 7, 3, 8, 4, 3\n    return x + [7, 3, 8, 4, 3]\n\n", "train": {"normal": [{"input": [86, 87, 26, 9, 12], "output": [86, 87, 26, 9, 12, 7, 3, 8, 4, 3]}, {"input": [21, 96, 37, 36, 96], "output": [21, 96, 37, 36, 96, 7, 3, 8, 4, 3]}, {"input": [18, 37, 50, 17, 4], "output": [18, 37, 50, 17, 4, 7, 3, 8, 4, 3]}, {"input": [13, 18, 7, 22, 8, 72], "output": [13, 18, 7, 22, 8, 72, 7, 3, 8, 4, 3]}, {"input": [46, 77, 13], "output": [46, 77, 13, 7, 3, 8, 4, 3]}, {"input": [3, 19, 88, 66], "output": [3, 19, 88, 66, 7, 3, 8, 4, 3]}, {"input": [31, 21, 18, 44, 69, 66], "output": [31, 21, 18, 44, 69, 66, 7, 3, 8, 4, 3]}, {"input": [9, 93, 6, 1, 46], "output": [9, 93, 6, 1, 46, 7, 3, 8, 4, 3]}, {"input": [26, 92, 27], "output": [26, 92, 27, 7, 3, 8, 4, 3]}, {"input": [27, 40, 25, 0, 69], "output": [27, 40, 25, 0, 69, 7, 3, 8, 4, 3]}], "ood": [], "noise": [{"input": [36, 95, 5, 94, 46], "output": [57, 53, 65, 94, 28, 7, 3, 8, 4, 3]}, {"input": [84, 95, 11, 22, 74], "output": [84, 82, 11, 22, 74, 95, 46, 8, 4, 53]}, {"input": [15, 83, 22], "output": [15, 83, 40, 7, 81, 8, 80, 3]}, {"input": [34, 45, 40, 33, 13], "output": [34, 45, 6, 33, 13, 7, 3, 8, 4, 3]}, {"input": [87, 90, 13], "output": [29, 41, 13, 7, 3, 28, 4, 3]}]}, "test": [{"input": [99, 34, 30, 1], "output": [99, 34, 30, 1, 7, 3, 8, 4, 3]}, {"input": [22, 9, 34, 53], "output": [22, 9, 34, 53, 7, 3, 8, 4, 3]}, {"input": [97, 89, 83, 8], "output": [97, 89, 83, 8, 7, 3, 8, 4, 3]}, {"input": [67, 14, 45, 2, 99, 48], "output": [67, 14, 45, 2, 99, 48, 7, 3, 8, 4, 3]}, {"input": [87, 24, 67, 62, 73], "output": [87, 24, 67, 62, 73, 7, 3, 8, 4, 3]}, {"input": [29, 80, 13, 57, 7], "output": [29, 80, 13, 57, 7, 7, 3, 8, 4, 3]}, {"input": [44, 26, 87, 20, 86, 85], "output": [44, 26, 87, 20, 86, 85, 7, 3, 8, 4, 3]}, {"input": [27, 25, 35, 30, 27], "output": [27, 25, 35, 30, 27, 7, 3, 8, 4, 3]}, {"input": [67, 65, 69, 21, 31, 79], "output": [67, 65, 69, 21, 31, 79, 7, 3, 8, 4, 3]}, {"input": [43, 6, 8, 54, 42], "output": [43, 6, 8, 54, 42, 7, 3, 8, 4, 3]}]}
{"id": "c103", "function": "def c103(x):\n    # input length\n    return [len(x)]\n\n", "train": {"normal": [{"input": [71, 20, 60, 4, 9, 40], "output": [6]}, {"input": [30, 59, 55, 13, 71], "output": [5]}, {"input": [63, 51, 75, 15], "output": [4]}, {"input": [77, 48, 68, 47, 91], "output": [5]}, {"input": [35, 2, 67, 76, 4, 35, 9], "output": [7]}, {"input": [50, 95, 53, 85, 36, 38], "output": [6]}, {"input": [98, 14, 88, 65, 44, 80, 72], "output": [7]}, {"input": [37, 36, 44, 69, 83], "output": [5]}, {"input": [23, 98, 12], "output": [3]}, {"input": [19, 41, 88, 97, 95, 72], "output": [6]}], "ood": [], "noise": [{"input": [25, 65, 48, 60, 99, 92], "output": [7]}, {"input": [19, 89, 34, 84, 35], "output": [6]}, {"input": [43, 43, 69, 7], "output": [5]}, {"input": [98, 73, 90, 53, 3, 30, 24], "output": [8]}, {"input": [83, 16, 0, 56, 18, 60, 21], "output": [8]}]}, "test": [{"input": [40, 42, 6], "output": [3]}, {"input": [63, 53, 70, 16], "output": [4]}, {"input": [61, 49, 33, 46, 49], "output": [5]}, {"input": [14, 16, 26, 34, 73], "output": [5]}, {"input": [33, 78, 68, 16], "output": [4]}, {"input": [89, 96, 12, 71, 9, 31, 40], "output": [7]}, {"input": [78, 58, 90, 51, 89, 35], "output": [6]}, {"input": [10, 82, 23, 42], "output": [4]}, {"input": [61, 14, 79], "output": [3]}, {"input": [65, 24, 15, 19, 67, 58, 59], "output": [7]}]}
{"id": "c001", "function": "def c001(x):\n    # remove all but element 2\n    return [x[2]]\n\n", "train": {"normal": [{"input": [28, 53, 78, 88, 91, 24, 97], "output": [78]}, {"input": [99, 67, 17, 30, 7], "output": [17]}, {"input": [75, 71, 89, 96, 55, 90, 47], "output": [89]}, {"input": [25, 81, 62, 89, 14, 80], "output": [62]}, {"input": [14, 56, 0, 69, 34, 19, 37], "output": [0]}, {"input": [81, 45, 13], "output": [13]}, {"input": [90, 30, 46, 80], "output": [46]}, {"input": [73, 45, 53, 21, 4, 74], "output": [53]}, {"input": [43, 84, 82], "output": [82]}, {"input": [79, 96, 87, 44], "output": [87]}], "ood": [], "noise": [{"input": [11, 27, 61, 86], "output": [62]}, {"input": [96, 44, 83], "output": [84]}, {"input": [10, 85, 17, 6, 30, 93], "output": [18]}, {"input": [13, 22, 78, 93, 48], "output": [79]}, {"input": [86, 43, 61, 11], "output": [62]}]}, "test": [{"input": [11, 52, 47], "output": [47]}, {"input": [32, 42, 65], "output": [65]}, {"input": [18, 68, 42, 40, 44, 96, 26], "output": [42]}, {"input": [50, 43, 32], "output": [32]}, {"input": [75, 24, 92, 14], "output": [92]}, {"input": [21, 37, 23, 28, 18], "output": [23]}, {"input": [52, 66, 86, 19], "output": [86]}, {"input": [81, 46, 43, 41, 88], "output": [43]}, {"input": [18, 76, 93], "output": [93]}, {"input": [92, 95, 6, 67, 47, 61], "output": [6]}]}
{"id": "c090", "function": "def c090(x):\n    return [18, 42, 77, 20, 36]\n\n", "train": {"normal": [{"input": [7, 40, 67, 73, 33, 84], "output": [18, 42, 77, 20, 36]}, {"input": [44, 6, 14, 93], "output": [18, 42, 77, 20, 36]}, {"input": [47, 56, 79], "output": [18, 42, 77, 20, 36]}, {"input": [84, 42, 30, 90, 57, 47, 53], "output": [18, 42, 77, 20, 36]}, {"input": [68, 89, 93, 82], "output": [18, 42, 77, 20, 36]}, {"input": [37, 95, 46, 7, 57, 94], "output": [18, 42, 77, 20, 36]}, {"input": [93, 45, 69, 72, 10], "output": [18, 42, 77, 20, 36]}, {"input": [17, 60, 69, 2, 7], "output": [18, 42, 77, 20, 36]}, {"input": [72, 21, 76, 75], "output": [18, 42, 77, 20, 36]}, {"input": [63, 84, 1, 26], "output": [18, 42, 77, 20, 36]}], "ood": [], "noise": [{"input": [63, 19, 60, 23, 79], "output": [18, 42, 23, 36, 36]}, {"input": [43, 35, 37, 90, 75, 47, 54], "output": [18, 42, 77, 47, 36]}, {"input": [80, 89, 9, 51], "output": [18, 35, 42, 20, 36]}, {"input": [67, 85, 89], "output": [18, 68, 77, 20, 36]}, {"input": [70, 27, 53, 27, 0, 51], "output": [18, 42, 77, 20, 72]}]}, "test": [{"input": [39, 66, 57, 79, 33, 0], "output": [18, 42, 77, 20, 36]}, {"input": [87, 44, 24], "output": [18, 42, 77, 20, 36]}, {"input": [40, 69, 56, 43, 61], "output": [18, 42, 77, 20, 36]}, {"input": [27, 28, 50, 53], "output": [18, 42, 77, 20, 36]}, {"input": [81, 96, 94, 52, 24, 53, 14], "output": [18, 42, 77, 20, 36]}, {"input": [33, 67, 40, 39, 81], "output": [18, 42, 77, 20, 36]}, {"input": [47, 75, 12, 79, 8, 5], "output": [18, 42, 77, 20, 36]}, {"input": [37, 53, 93, 26, 17], "output": [18, 42, 77, 20, 36]}, {"input": [51, 3, 27, 94, 45, 74, 85], "output": [18, 42, 77, 20, 36]}, {"input": [18, 30, 62, 45], "output": [18, 42, 77, 20, 36]}]}
{"id": "c097", "function": "def c097(x):\n    # concatenate 11, 21, 43 input 7 89 0\n    return [11, 21, 43] + x + [7, 89, 0]\n\n", "train": {"normal": [{"input": [65, 67, 77], "output": [11, 21, 43, 65, 67, 77, 7, 89, 0]}, {"input": [61, 49, 59], "output": [11, 21, 43, 61, 49, 59, 7, 89, 0]}, {"input": [44, 18, 83, 12, 48], "output": [11, 21, 43, 44, 18, 83, 12, 48, 7, 89, 0]}, {"input": [88, 39, 97, 70, 46], "output": [11, 21, 43, 88, 39, 97, 70, 46, 7, 89, 0]}, {"input": [5, 77, 83, 32, 79], "output": [11, 21, 43, 5, 77, 83, 32, 79, 7, 89, 0]}, {"input": [65, 30, 93], "output": [11, 21, 43, 65, 30, 93, 7, 89, 0]}, {"input": [10, 91, 64], "output": [11, 21, 43, 10, 91, 64, 7, 89, 0]}, {"input": [44, 80, 40, 41, 47], "output": [11, 21, 43, 44, 80, 40, 41, 47, 7, 89, 0]}, {"input": [20, 63, 97, 66, 52], "output": [11, 21, 43, 20, 63, 97, 66, 52, 7, 89, 0]}, {"input": [52, 16, 62], "output": [11, 21, 43, 52, 16, 62, 7, 89, 0]}], "ood": [], "noise": [{"input": [39, 7, 25], "output": [11, 21, 32, 39, 7, 25, 7, 50, 0]}, {"input": [34, 82, 1], "output": [11, 21, 62, 34, 82, 61, 7, 89, 64]}, {"input": [1, 56, 34, 71], "output": [11, 85, 43, 1, 56, 34, 71, 7, 89, 5]}, {"input": [20, 65, 80, 18], "output": [11, 21, 43, 20, 65, 73, 80, 0, 54, 0]}, {"input": [2, 63, 53], "output": [11, 15, 27, 2, 36, 3, 7, 89, 0]}]}, "test": [{"input": [55, 98, 71, 64], "output": [11, 21, 43, 55, 98, 71, 64, 7, 89, 0]}, {"input": [78, 11, 75, 10, 63], "output": [11, 21, 43, 78, 11, 75, 10, 63, 7, 89, 0]}, {"input": [74, 71, 57, 43, 35], "output": [11, 21, 43, 74, 71, 57, 43, 35, 7, 89, 0]}, {"input": [49, 49, 67], "output": [11, 21, 43, 49, 49, 67, 7, 89, 0]}, {"input": [99, 9, 69, 76, 61], "output": [11, 21, 43, 99, 9, 69, 76, 61, 7, 89, 0]}, {"input": [38, 84, 58, 20, 50], "output": [11, 21, 43, 38, 84, 58, 20, 50, 7, 89, 0]}, {"input": [4, 14, 33, 11, 54], "output": [11, 21, 43, 4, 14, 33, 11, 54, 7, 89, 0]}, {"input": [46, 78, 53, 52], "output": [11, 21, 43, 46, 78, 53, 52, 7, 89, 0]}, {"input": [25, 42, 81, 35], "output": [11, 21, 43, 25, 42, 81, 35, 7, 89, 0]}, {"input": [87, 6, 48, 42], "output": [11, 21, 43, 87, 6, 48, 42, 7, 89, 0]}]}
{"id": "c142", "function": "def c142(x):\n    # every digit in order of appearance\n    res = []\n    for i in x:\n        for j in str(i):\n            res.append(int(j))\n    return res\n\n", "train": {"normal": [{"input": [84, 99, 77, 75, 24, 11, 25], "output": [8, 4, 9, 9, 7, 7, 7, 5, 2, 4, 1, 1, 2, 5]}, {"input": [84, 98, 34, 90, 55], "output": [8, 4, 9, 8, 3, 4, 9, 0, 5, 5]}, {"input": [52, 90, 3, 40, 52, 2, 16], "output": [5, 2, 9, 0, 3, 4, 0, 5, 2, 2, 1, 6]}, {"input": [9, 84, 51, 55], "output": [9, 8, 4, 5, 1, 5, 5]}, {"input": [92, 89, 7], "output": [9, 2, 8, 9, 7]}, {"input": [40, 0, 81, 35, 79, 70], "output": [4, 0, 0, 8, 1, 3, 5, 7, 9, 7, 0]}, {"input": [47, 91, 8], "output": [4, 7, 9, 1, 8]}, {"input": [38, 9, 43, 38, 56, 49], "output": [3, 8, 9, 4, 3, 3, 8, 5, 6, 4, 9]}, {"input": [2, 27, 41, 94, 8, 10, 2], "output": [2, 2, 7, 4, 1, 9, 4, 8, 1, 0, 2]}, {"input": [20, 92, 31, 96], "output": [2, 0, 9, 2, 3, 1, 9, 6]}], "ood": [], "noise": [{"input": [54, 37, 59, 30, 20, 79], "output": [5, 4, 3, 7, 5, 9, 3, 9, 2, 0, 7, 9]}, {"input": [90, 63, 64, 62], "output": [9, 6, 6, 3, 0, 4, 6, 0]}, {"input": [4, 70, 72, 55], "output": [4, 7, 0, 7, 2, 5, 2]}, {"input": [82, 75, 97, 38], "output": [8, 2, 7, 8, 9, 5, 5, 8]}, {"input": [68, 14, 21], "output": [3, 8, 1, 4, 6, 7]}]}, "test": [{"input": [14, 80, 72, 20], "output": [1, 4, 8, 0, 7, 2, 2, 0]}, {"input": [15, 40, 83, 62, 7], "output": [1, 5, 4, 0, 8, 3, 6, 2, 7]}, {"input": [44, 32, 38, 29, 93, 73], "output": [4, 4, 3, 2, 3, 8, 2, 9, 9, 3, 7, 3]}, {"input": [17, 25, 90], "output": [1, 7, 2, 5, 9, 0]}, {"input": [40, 25, 12, 59], "output": [4, 0, 2, 5, 1, 2, 5, 9]}, {"input": [13, 4, 89, 69], "output": [1, 3, 4, 8, 9, 6, 9]}, {"input": [96, 80, 97, 47, 79, 88, 5], "output": [9, 6, 8, 0, 9, 7, 4, 7, 7, 9, 8, 8, 5]}, {"input": [68, 9, 37], "output": [6, 8, 9, 3, 7]}, {"input": [45, 97, 67, 51, 42, 80, 34], "output": [4, 5, 9, 7, 6, 7, 5, 1, 4, 2, 8, 0, 3, 4]}, {"input": [31, 8, 73, 89], "output": [3, 1, 8, 7, 3, 8, 9]}]}
{"id": "c091", "function": "def c091(x):\n    return [81, 99, 41, 23, 22, 75, 68, 30]\n\n", "train": {"normal": [{"input": [21, 64, 11], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [59, 46, 33, 9], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [20, 26, 29, 88], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [98, 67, 41], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [55, 24, 8, 15, 21, 19], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [12, 11, 56, 40], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [89, 39, 6, 99], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [33, 2, 50], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [21, 73, 31, 68], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [86, 12, 29], "output": [81, 99, 41, 23, 22, 75, 68, 30]}], "ood": [], "noise": [{"input": [3, 2, 46], "output": [81, 65, 41, 23, 58, 75, 22, 30]}, {"input": [64, 65, 53, 53, 48, 64], "output": [81, 99, 43, 29, 22, 75, 68, 30]}, {"input": [0, 24, 18, 56, 62, 46, 15], "output": [81, 99, 41, 31, 89, 75, 50, 30]}, {"input": [64, 58, 86, 66, 95, 53, 47], "output": [81, 99, 41, 23, 82, 75, 68, 30]}, {"input": [40, 80, 10, 92, 81], "output": [81, 99, 41, 55, 22, 75, 26, 30]}]}, "test": [{"input": [11, 62, 61, 78], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [62, 38, 82, 68, 92, 90, 53], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [25, 3, 90, 22], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [80, 21, 4, 1, 67, 75, 96], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [46, 39, 88, 46], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [46, 54, 60, 42], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [63, 52, 7, 40, 1], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [91, 69, 54], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [46, 85, 14], "output": [81, 99, 41, 23, 22, 75, 68, 30]}, {"input": [99, 66, 23, 78, 55, 9], "output": [81, 99, 41, 23, 22, 75, 68, 30]}]}
{"id": "c034", "function": "def c034(x):\n    # swap element 1 and element 2\n    x[0], x[1] = x[1], x[0]\n    return x\n\n", "train": {"normal": [{"input": [40, 5, 50, 92], "output": [5, 40, 50, 92]}, {"input": [35, 32, 32, 83], "output": [32, 35, 32, 83]}, {"input": [89, 90, 79, 21], "output": [90, 89, 79, 21]}, {"input": [1, 85, 30, 2, 47, 14, 37], "output": [85, 1, 30, 2, 47, 14, 37]}, {"input": [2, 45, 35, 99, 2, 54, 40], "output": [45, 2, 35, 99, 2, 54, 40]}, {"input": [70, 89, 20], "output": [89, 70, 20]}, {"input": [27, 74, 5, 67], "output": [74, 27, 5, 67]}, {"input": [81, 27, 86, 8, 66], "output": [27, 81, 86, 8, 66]}, {"input": [62, 3, 83, 39, 75, 58], "output": [3, 62, 83, 39, 75, 58]}, {"input": [84, 31, 59, 68, 6, 4, 15], "output": [31, 84, 59, 68, 6, 4, 15]}], "ood": [], "noise": [{"input": [79, 21, 88, 32, 75], "output": [21, 79, 27, 32, 75]}, {"input": [89, 32, 94], "output": [92, 36, 94]}, {"input": [28, 73, 28, 68, 14, 11, 58], "output": [73, 28, 63, 68, 14, 73, 58]}, {"input": [22, 87, 60, 51], "output": [53, 22, 60, 51]}, {"input": [24, 44, 48, 98], "output": [40, 24, 48, 59]}]}, "test": [{"input": [13, 64, 49], "output": [64, 13, 49]}, {"input": [93, 96, 10, 15, 1], "output": [96, 93, 10, 15, 1]}, {"input": [37, 82, 30, 46, 39], "output": [82, 37, 30, 46, 39]}, {"input": [42, 17, 3, 39, 55, 11, 51], "output": [17, 42, 3, 39, 55, 11, 51]}, {"input": [83, 33, 7, 97, 76, 69, 11], "output": [33, 83, 7, 97, 76, 69, 11]}, {"input": [25, 84, 54, 82, 86], "output": [84, 25, 54, 82, 86]}, {"input": [95, 67, 82], "output": [67, 95, 82]}, {"input": [36, 84, 6, 92, 36, 57], "output": [84, 36, 6, 92, 36, 57]}, {"input": [4, 55, 86], "output": [55, 4, 86]}, {"input": [58, 2, 30, 25, 11], "output": [2, 58, 30, 25, 11]}]}
{"id": "c244", "function": "def c244(x):\n    # number of 3s\n    return [x.count(3)]\n\n", "train": {"normal": [{"input": [52, 47, 3, 90, 24, 76, 3], "output": [2]}, {"input": [45, 79, 87], "output": [0]}, {"input": [45, 3, 3, 85, 93, 66], "output": [2]}, {"input": [21, 67, 25, 34, 2], "output": [0]}, {"input": [75, 88, 16, 3, 82, 13], "output": [1]}, {"input": [67, 6, 3, 75, 28, 14, 3], "output": [2]}, {"input": [3, 15, 56, 30, 75, 3], "output": [2]}, {"input": [83, 11, 3, 48, 3, 95], "output": [2]}, {"input": [3, 43, 3, 2, 20, 3, 62], "output": [3]}, {"input": [3, 62, 3, 31, 21], "output": [2]}], "ood": [], "noise": [{"input": [8, 9, 81, 58, 87, 84], "output": [1]}, {"input": [59, 93, 3, 42, 78, 71, 52], "output": [2]}, {"input": [3, 33, 3, 23, 67, 28], "output": [3]}, {"input": [31, 25, 74, 45, 88, 19], "output": [1]}, {"input": [6, 71, 41, 26], "output": [1]}]}, "test": [{"input": [21, 32, 31, 72], "output": [0]}, {"input": [3, 8, 88, 3, 3, 57, 3], "output": [4]}, {"input": [25, 60, 60, 3, 62, 89, 54], "output": [1]}, {"input": [34, 28, 3, 90, 3, 3], "output": [3]}, {"input": [77, 45, 94, 28, 53], "output": [0]}, {"input": [74, 73, 43], "output": [0]}, {"input": [47, 3, 19, 91, 3, 3, 3], "output": [4]}, {"input": [82, 94, 3, 13], "output": [1]}, {"input": [6, 82, 3, 3, 63, 37, 3], "output": [3]}, {"input": [68, 98, 3, 96, 3, 3, 68], "output": [3]}]}
{"id": "c171", "function": "def c171(x):\n    # cumulative sum\n    res = []\n    s = 0\n    for i in x:\n        s += i\n        res.append(s)\n    return res\n\n", "train": {"normal": [{"input": [13, 5, 2, 15, 11], "output": [13, 18, 20, 35, 46]}, {"input": [8, 10, 8], "output": [8, 18, 26]}, {"input": [3, 10, 7, 20, 1], "output": [3, 13, 20, 40, 41]}, {"input": [13, 11, 18], "output": [13, 24, 42]}, {"input": [18, 20, 3, 11, 19], "output": [18, 38, 41, 52, 71]}, {"input": [13, 2, 5], "output": [13, 15, 20]}, {"input": [18, 16, 15, 10, 8, 0], "output": [18, 34, 49, 59, 67, 67]}, {"input": [6, 7, 3], "output": [6, 13, 16]}, {"input": [20, 18, 12, 2, 2, 4, 8], "output": [20, 38, 50, 52, 54, 58, 66]}, {"input": [10, 20, 8], "output": [10, 30, 38]}], "ood": [], "noise": [{"input": [5, 15, 2, 4, 16, 10], "output": [5, 21, 22, 26, 42, 38]}, {"input": [19, 0, 7], "output": [22, 24, 26]}, {"input": [12, 20, 5, 3, 9], "output": [12, 32, 37, 35, 12]}, {"input": [7, 15, 11, 7, 15, 2, 0], "output": [56, 29, 33, 40, 55, 57, 57]}, {"input": [7, 4, 4, 3, 17, 2], "output": [14, 11, 27, 18, 35, 14]}]}, "test": [{"input": [12, 8, 8, 17, 1], "output": [12, 20, 28, 45, 46]}, {"input": [9, 11, 9, 7], "output": [9, 20, 29, 36]}, {"input": [20, 7, 18, 0], "output": [20, 27, 45, 45]}, {"input": [12, 7, 5, 14], "output": [12, 19, 24, 38]}, {"input": [15, 7, 8, 16, 0, 2, 1], "output": [15, 22, 30, 46, 46, 48, 49]}, {"input": [6, 11, 3, 4, 6], "output": [6, 17, 20, 24, 30]}, {"input": [3, 0, 8, 11, 13, 13], "output": [3, 3, 11, 22, 35, 48]}, {"input": [16, 1, 5], "output": [16, 17, 22]}, {"input": [5, 8, 18, 7], "output": [5, 13, 31, 38]}, {"input": [19, 12, 15], "output": [19, 31, 46]}]}
{"id": "c172", "function": "def c172(x):\n    # cumulative product\n    res = []\n    p = 1\n    for i in x:\n        p *= i\n        res.append(p)\n    return res\n\n", "train": {"normal": [{"input": [5, 7, 2, 9, 8], "output": [5, 35, 70, 630, 5040]}, {"input": [1, 3, 4, 4, 10], "output": [1, 3, 12, 48, 480]}, {"input": [4, 6, 5], "output": [4, 24, 120]}, {"input": [3, 4, 6, 7, 5, 2], "output": [3, 12, 72, 504, 2520, 5040]}, {"input": [2, 0, 10, 8, 4, 1], "output": [2, 0, 0, 0, 0, 0]}, {"input": [9, 4, 3, 2], "output": [9, 36, 108, 216]}, {"input": [7, 0, 4, 10, 7], "output": [7, 0, 0, 0, 0]}, {"input": [5, 6, 0, 3], "output": [5, 30, 0, 0]}, {"input": [6, 9, 0], "output": [6, 54, 0]}, {"input": [0, 2, 3, 8, 1, 8], "output": [0, 0, 0, 0, 0, 0]}], "ood": [], "noise": [{"input": [5, 8, 8], "output": [5, 87, 182]}, {"input": [2, 7, 4], "output": [2, 9, 14]}, {"input": [8, 2, 3, 6, 5], "output": [8, 16, 48, 288, 919]}, {"input": [0, 7, 1], "output": [1, 0, 0]}, {"input": [2, 9, 2, 0, 9, 2], "output": [2, 19, 36, 33, 0, 0]}]}, "test": [{"input": [1, 9, 10, 10], "output": [1, 9, 90, 900]}, {"input": [10, 9, 10, 9, 3, 9], "output": [10, 90, 900, 8100, 24300, 218700]}, {"input": [9, 1, 1], "output": [9, 9, 9]}, {"input": [10, 9, 10, 3, 2], "output": [10, 90, 900, 2700, 5400]}, {"input": [6, 5, 7], "output": [6, 30, 210]}, {"input": [0, 1, 4, 6, 8, 4], "output": [0, 0, 0, 0, 0, 0]}, {"input": [3, 7, 8, 8, 1, 2, 8], "output": [3, 21, 168, 1344, 1344, 2688, 21504]}, {"input": [5, 0, 1], "output": [5, 0, 0]}, {"input": [1, 8, 1], "output": [1, 8, 8]}, {"input": [7, 8, 4, 3, 5, 2], "output": [7, 56, 224, 672, 3360, 6720]}]}
{"id": "c062", "function": "def c062(x):\n    # remove the last element\n    return x[:-1]\n\n", "train": {"normal": [{"input": [41, 49, 89, 42, 8, 9, 41], "output": [41, 49, 89, 42, 8, 9]}, {"input": [73, 78, 17, 64, 92, 71], "output": [73, 78, 17, 64, 92]}, {"input": [61, 50, 81], "output": [61, 50]}, {"input": [78, 32, 80, 25, 67, 55], "output": [78, 32, 80, 25, 67]}, {"input": [52, 70, 78, 30, 11], "output": [52, 70, 78, 30]}, {"input": [21, 12, 18, 25, 73, 65], "output": [21, 12, 18, 25, 73]}, {"input": [23, 7, 78, 34], "output": [23, 7, 78]}, {"input": [80, 26, 89, 48, 51, 25], "output": [80, 26, 89, 48, 51]}, {"input": [67, 99, 69, 68, 8, 41, 35], "output": [67, 99, 69, 68, 8, 41]}, {"input": [49, 50, 1], "output": [49, 50]}], "ood": [], "noise": [{"input": [5, 48, 73, 33, 69, 48, 10], "output": [5, 10, 73, 35, 50, 48]}, {"input": [56, 37, 28, 46], "output": [56, 48, 28]}, {"input": [55, 32, 80, 52], "output": [55, 32, 74]}, {"input": [15, 49, 55], "output": [37, 49]}, {"input": [68, 50, 18], "output": [68, 63]}]}, "test": [{"input": [65, 71, 22, 14, 91], "output": [65, 71, 22, 14]}, {"input": [8, 78, 56, 5], "output": [8, 78, 56]}, {"input": [99, 26, 16, 21, 27], "output": [99, 26, 16, 21]}, {"input": [88, 27, 51, 82, 88, 32, 72], "output": [88, 27, 51, 82, 88, 32]}, {"input": [35, 54, 94, 16, 75], "output": [35, 54, 94, 16]}, {"input": [18, 29, 96, 62, 82, 41, 96], "output": [18, 29, 96, 62, 82, 41]}, {"input": [67, 17, 1, 14, 23, 27, 43], "output": [67, 17, 1, 14, 23, 27]}, {"input": [13, 59, 58, 87, 21, 33], "output": [13, 59, 58, 87, 21]}, {"input": [21, 78, 16, 57], "output": [21, 78, 16]}, {"input": [97, 6, 47, 69, 97], "output": [97, 6, 47, 69]}]}
{"id": "c096", "function": "def c096(x):\n    # prepend 98 and append 37\n    return [98] + x + [37]\n\n", "train": {"normal": [{"input": [29, 67, 45], "output": [98, 29, 67, 45, 37]}, {"input": [86, 85, 29, 46, 18], "output": [98, 86, 85, 29, 46, 18, 37]}, {"input": [48, 24, 76, 55, 93], "output": [98, 48, 24, 76, 55, 93, 37]}, {"input": [5, 76, 97], "output": [98, 5, 76, 97, 37]}, {"input": [46, 26, 16, 95, 62, 50, 94], "output": [98, 46, 26, 16, 95, 62, 50, 94, 37]}, {"input": [11, 36, 67], "output": [98, 11, 36, 67, 37]}, {"input": [41, 89, 98], "output": [98, 41, 89, 98, 37]}, {"input": [14, 42, 10, 20, 37, 98, 99], "output": [98, 14, 42, 10, 20, 37, 98, 99, 37]}, {"input": [15, 68, 97, 86, 20, 65, 86], "output": [98, 15, 68, 97, 86, 20, 65, 86, 37]}, {"input": [21, 73, 24, 30, 8], "output": [98, 21, 73, 24, 30, 8, 37]}], "ood": [], "noise": [{"input": [75, 86, 83, 8, 61, 32], "output": [89, 75, 86, 83, 8, 61, 16, 37]}, {"input": [52, 48, 13, 71, 79, 34, 19], "output": [98, 52, 48, 13, 71, 44, 34, 19, 37]}, {"input": [92, 82, 20, 63, 35, 31, 78], "output": [25, 92, 82, 20, 63, 35, 31, 78, 85]}, {"input": [43, 6, 80], "output": [98, 43, 19, 80, 37]}, {"input": [73, 83, 79], "output": [73, 73, 83, 96, 37]}]}, "test": [{"input": [12, 26, 49, 11, 2, 7, 9], "output": [98, 12, 26, 49, 11, 2, 7, 9, 37]}, {"input": [27, 15, 14, 72, 75], "output": [98, 27, 15, 14, 72, 75, 37]}, {"input": [91, 43, 83, 80], "output": [98, 91, 43, 83, 80, 37]}, {"input": [88, 27, 92, 53, 18], "output": [98, 88, 27, 92, 53, 18, 37]}, {"input": [95, 83, 21, 65, 66, 7], "output": [98, 95, 83, 21, 65, 66, 7, 37]}, {"input": [69, 90, 37, 66], "output": [98, 69, 90, 37, 66, 37]}, {"input": [33, 33, 13, 51], "output": [98, 33, 33, 13, 51, 37]}, {"input": [87, 83, 94, 17], "output": [98, 87, 83, 94, 17, 37]}, {"input": [44, 70, 23, 83, 53, 52, 89], "output": [98, 44, 70, 23, 83, 53, 52, 89, 37]}, {"input": [39, 21, 85, 19], "output": [98, 39, 21, 85, 19, 37]}]}
{"id": "c081", "function": "def c081(x):\n    # remove all but element 2\n    return [x[2]]\n\n", "train": {"normal": [{"input": [59, 81, 91], "output": [91]}, {"input": [63, 64, 12, 14, 79], "output": [12]}, {"input": [48, 45, 81, 34, 87], "output": [81]}, {"input": [84, 48, 45, 35, 55, 10], "output": [45]}, {"input": [29, 46, 38], "output": [38]}, {"input": [60, 13, 35, 5, 14], "output": [35]}, {"input": [63, 10, 69], "output": [69]}, {"input": [77, 36, 71, 90], "output": [71]}, {"input": [88, 77, 0, 30, 52, 59, 8], "output": [0]}, {"input": [3, 47, 71, 33, 78, 9], "output": [71]}], "ood": [], "noise": [{"input": [48, 29, 54, 47, 44, 68], "output": [55]}, {"input": [7, 64, 74, 19], "output": [75]}, {"input": [15, 80, 3, 88, 97, 9], "output": [4]}, {"input": [87, 13, 55, 35], "output": [56]}, {"input": [74, 32, 92], "output": [93]}]}, "test": [{"input": [42, 51, 84, 88, 29, 17], "output": [84]}, {"input": [75, 31, 17, 67, 95, 75, 93], "output": [17]}, {"input": [65, 7, 79, 81, 90, 11, 45], "output": [79]}, {"input": [77, 45, 67, 57, 64], "output": [67]}, {"input": [94, 70, 8, 62, 35, 47], "output": [8]}, {"input": [71, 85, 26, 4, 72, 83], "output": [26]}, {"input": [3, 26, 12], "output": [12]}, {"input": [24, 4, 76, 15, 41, 87, 18], "output": [76]}, {"input": [0, 86, 44, 97, 69, 7], "output": [44]}, {"input": [99, 75, 68, 90, 77], "output": [68]}]}
{"id": "c109", "function": "def c109(x):\n    # product of elements\n    p = 1\n    for i in x:\n        p *= i\n    return [p]\n\n", "train": {"normal": [{"input": [6, 0, 8, 4, 4, 8, 0], "output": [0]}, {"input": [10, 1, 0, 4], "output": [0]}, {"input": [3, 0, 6, 10, 0, 1, 7], "output": [0]}, {"input": [6, 10, 2, 3, 6, 2], "output": [4320]}, {"input": [8, 1, 2], "output": [16]}, {"input": [8, 0, 10, 3], "output": [0]}, {"input": [6, 2, 4, 4, 0], "output": [0]}, {"input": [0, 3, 2, 2, 2, 9, 10], "output": [0]}, {"input": [5, 7, 2, 4, 0], "output": [0]}, {"input": [3, 1, 4, 3], "output": [36]}], "ood": [], "noise": [{"input": [2, 10, 5, 8, 5], "output": [4001]}, {"input": [0, 4, 10, 9, 9, 4], "output": [1]}, {"input": [8, 7, 0, 10, 0, 10, 0], "output": [1]}, {"input": [2, 10, 9, 3, 8, 10], "output": [43201]}, {"input": [8, 10, 10, 6, 8], "output": [38401]}]}, "test": [{"input": [5, 9, 6, 2, 8, 6, 1], "output": [25920]}, {"input": [6, 3, 2, 1, 8, 0], "output": [0]}, {"input": [9, 7, 5, 5, 2], "output": [3150]}, {"input": [0, 10, 9, 2, 10, 10, 1], "output": [0]}, {"input": [9, 2, 6, 1, 6, 6, 3], "output": [11664]}, {"input": [2, 1, 8, 9, 2, 9, 2], "output": [5184]}, {"input": [3, 9, 7, 4, 2, 2], "output": [3024]}, {"input": [0, 5, 6], "output": [0]}, {"input": [4, 1, 1, 7], "output": [28]}, {"input": [3, 9, 1, 2], "output": [54]}]}
{"id": "c002", "function": "def c002(x):\n    # remove all but element 2\n    return [x[2]]\n\n", "train": {"normal": [{"input": [80, 80, 11, 85, 71], "output": [11]}, {"input": [24, 92, 75, 98, 48, 80], "output": [75]}, {"input": [90, 47, 60, 12], "output": [60]}, {"input": [37, 37, 14, 93, 46], "output": [14]}, {"input": [59, 36, 57, 13, 70], "output": [57]}, {"input": [82, 5, 63, 11, 16], "output": [63]}, {"input": [54, 25, 35, 78], "output": [35]}, {"input": [42, 28, 0, 64, 66], "output": [0]}, {"input": [48, 8, 60], "output": [60]}, {"input": [97, 59, 44, 53, 12], "output": [44]}], "ood": [], "noise": [{"input": [15, 74, 20], "output": [21]}, {"input": [63, 48, 35, 50, 37, 37], "output": [36]}, {"input": [53, 65, 87, 8, 54], "output": [88]}, {"input": [96, 59, 16, 92, 15], "output": [17]}, {"input": [5, 76, 0, 59, 25], "output": [1]}]}, "test": [{"input": [80, 95, 33, 9], "output": [33]}, {"input": [91, 97, 85, 76, 91, 90, 11], "output": [85]}, {"input": [52, 94, 80, 34, 7, 4, 77], "output": [80]}, {"input": [91, 25, 29, 86, 93], "output": [29]}, {"input": [22, 5, 92, 99, 71, 89], "output": [92]}, {"input": [77, 10, 14, 26, 32], "output": [14]}, {"input": [99, 34, 5, 38, 49], "output": [5]}, {"input": [57, 77, 37, 33, 6, 28], "output": [37]}, {"input": [43, 0, 53, 35, 24, 42, 74], "output": [53]}, {"input": [10, 12, 57, 5], "output": [57]}]}
{"id": "c132", "function": "def c132(x):\n    # remove element 2\n    return x[:2] + x[3:]\n\n", "train": {"normal": [{"input": [55, 96, 27, 20], "output": [55, 96, 20]}, {"input": [71, 30, 19, 37, 13, 91], "output": [71, 30, 37, 13, 91]}, {"input": [43, 92, 19, 22], "output": [43, 92, 22]}, {"input": [29, 64, 23, 30, 25, 62], "output": [29, 64, 30, 25, 62]}, {"input": [97, 91, 11, 98], "output": [97, 91, 98]}, {"input": [20, 28, 58, 6, 94], "output": [20, 28, 6, 94]}, {"input": [85, 93, 27, 80, 50, 22, 85], "output": [85, 93, 80, 50, 22, 85]}, {"input": [51, 76, 30, 73, 36, 54], "output": [51, 76, 73, 36, 54]}, {"input": [62, 60, 66, 40], "output": [62, 60, 40]}, {"input": [37, 26, 37, 70, 43, 12, 7], "output": [37, 26, 70, 43, 12, 7]}], "ood": [], "noise": [{"input": [39, 20, 90, 76, 97, 71, 27], "output": [39, 47, 76, 97, 71, 27]}, {"input": [58, 72, 96], "output": [58, 69]}, {"input": [13, 18, 35, 76, 25, 17], "output": [13, 18, 76, 48, 17]}, {"input": [89, 19, 75, 17, 57], "output": [89, 19, 24, 89]}, {"input": [6, 65, 28, 16, 61, 61, 41], "output": [27, 65, 16, 61, 40, 52]}]}, "test": [{"input": [86, 22, 50, 48, 59, 57], "output": [86, 22, 48, 59, 57]}, {"input": [56, 52, 56, 32, 18], "output": [56, 52, 32, 18]}, {"input": [55, 9, 90, 67], "output": [55, 9, 67]}, {"input": [19, 21, 81, 48, 65, 55, 13], "output": [19, 21, 48, 65, 55, 13]}, {"input": [87, 55, 5, 36, 29, 64, 17], "output": [87, 55, 36, 29, 64, 17]}, {"input": [84, 29, 80, 88], "output": [84, 29, 88]}, {"input": [48, 84, 33, 92, 57, 81], "output": [48, 84, 92, 57, 81]}, {"input": [38, 44, 1, 31, 8, 12, 70], "output": [38, 44, 31, 8, 12, 70]}, {"input": [90, 2, 1, 66], "output": [90, 2, 66]}, {"input": [30, 41, 68], "output": [30, 41]}]}
{"id": "c153", "function": "def c153(x):\n    # each unique element followed by its number of occurrences\n    res = {}\n    for i in x:\n        if i not in res:\n            res[i] = 0\n        res[i] += 1\n    out = []\n    for k, v in res.items():\n        out.append(k)\n        out.append(v)\n    return out\n\n", "train": {"normal": [{"input": [4, 36, 63, 4, 4, 4], "output": [4, 4, 36, 1, 63, 1]}, {"input": [82, 82, 82, 41, 41, 65, 67], "output": [82, 3, 41, 2, 65, 1, 67, 1]}, {"input": [32, 34, 34, 37, 32, 73, 3, 32], "output": [32, 3, 34, 2, 37, 1, 73, 1, 3, 1]}, {"input": [78, 15, 63, 15, 15], "output": [78, 1, 15, 3, 63, 1]}, {"input": [2, 2, 2, 24, 47, 38], "output": [2, 3, 24, 1, 47, 1, 38, 1]}, {"input": [18, 37, 18, 96, 28, 18, 18, 18], "output": [18, 5, 37, 1, 96, 1, 28, 1]}, {"input": [48, 68, 24, 49, 49, 61], "output": [48, 1, 68, 1, 24, 1, 49, 2, 61, 1]}, {"input": [89, 61, 44, 61], "output": [89, 1, 61, 2, 44, 1]}, {"input": [95, 24, 17, 17, 61], "output": [95, 1, 24, 1, 17, 2, 61, 1]}, {"input": [88, 52, 36, 23, 49, 36, 52, 23], "output": [88, 1, 52, 2, 36, 2, 23, 2, 49, 1]}], "ood": [], "noise": [{"input": [21, 30, 21, 30, 30, 53, 12], "output": [21, 50, 30, 3, 53, 1, 12, 1]}, {"input": [68, 61, 61, 74, 74], "output": [68, 1, 27, 2, 74, 2]}, {"input": [5, 25, 4, 4, 25], "output": [5, 6, 25, 2, 2, 21]}, {"input": [56, 96, 96, 80, 96, 96, 5], "output": [90, 1, 96, 4, 80, 1, 5, 1]}, {"input": [82, 25, 73, 25, 73], "output": [54, 3, 25, 2, 7, 2]}]}, "test": [{"input": [59, 61, 87, 87, 61], "output": [59, 1, 61, 2, 87, 2]}, {"input": [27, 36, 39, 26, 26, 36, 36], "output": [27, 1, 36, 3, 39, 1, 26, 2]}, {"input": [93, 77, 93, 50, 8, 93, 93, 21], "output": [93, 4, 77, 1, 50, 1, 8, 1, 21, 1]}, {"input": [59, 62, 59, 39, 39, 39], "output": [59, 2, 62, 1, 39, 3]}, {"input": [13, 13, 13, 84, 84, 68], "output": [13, 3, 84, 2, 68, 1]}, {"input": [47, 41, 47, 95, 66, 41], "output": [47, 2, 41, 2, 95, 1, 66, 1]}, {"input": [36, 18, 9, 36, 88], "output": [36, 2, 18, 1, 9, 1, 88, 1]}, {"input": [9, 50, 79, 25, 79, 25, 25], "output": [9, 1, 50, 1, 79, 2, 25, 3]}, {"input": [40, 62, 34, 62], "output": [40, 1, 62, 2, 34, 1]}, {"input": [84, 63, 84, 84, 62, 43, 26], "output": [84, 3, 63, 1, 62, 1, 43, 1, 26, 1]}]}
{"id": "c051", "function": "def c051(x):\n    # prepend first element 4 times\n    return [x[0]] * 4 + x\n\n", "train": {"normal": [{"input": [21, 85, 67], "output": [21, 21, 21, 21, 21, 85, 67]}, {"input": [3, 45, 78], "output": [3, 3, 3, 3, 3, 45, 78]}, {"input": [60, 81, 63, 98, 43], "output": [60, 60, 60, 60, 60, 81, 63, 98, 43]}, {"input": [98, 53, 66, 8, 25], "output": [98, 98, 98, 98, 98, 53, 66, 8, 25]}, {"input": [74, 15, 38], "output": [74, 74, 74, 74, 74, 15, 38]}, {"input": [24, 28, 69, 46, 24, 60], "output": [24, 24, 24, 24, 24, 28, 69, 46, 24, 60]}, {"input": [86, 9, 92, 16, 2], "output": [86, 86, 86, 86, 86, 9, 92, 16, 2]}, {"input": [11, 19, 66, 52, 2], "output": [11, 11, 11, 11, 11, 19, 66, 52, 2]}, {"input": [84, 32, 8, 23, 43, 14, 3], "output": [84, 84, 84, 84, 84, 32, 8, 23, 43, 14, 3]}, {"input": [15, 27, 40, 81, 70], "output": [15, 15, 15, 15, 15, 27, 40, 81, 70]}], "ood": [], "noise": [{"input": [79, 52, 62, 49, 36, 98, 7], "output": [37, 45, 79, 79, 95, 52, 62, 49, 36, 98, 64]}, {"input": [94, 77, 49, 52, 97], "output": [94, 94, 63, 94, 94, 89, 49, 71, 97]}, {"input": [78, 1, 78, 33, 65, 6], "output": [78, 78, 67, 78, 78, 1, 78, 33, 65, 20]}, {"input": [82, 90, 32, 51, 3, 23, 7], "output": [82, 82, 82, 82, 28, 27, 32, 51, 49, 23, 32]}, {"input": [6, 50, 83, 5], "output": [6, 6, 6, 6, 74, 24, 83, 5]}]}, "test": [{"input": [47, 71, 31, 26, 81, 61], "output": [47, 47, 47, 47, 47, 71, 31, 26, 81, 61]}, {"input": [78, 70, 95, 24, 39], "output": [78, 78, 78, 78, 78, 70, 95, 24, 39]}, {"input": [55, 54, 92, 20, 35, 49, 75], "output": [55, 55, 55, 55, 55, 54, 92, 20, 35, 49, 75]}, {"input": [68, 35, 82, 65], "output": [68, 68, 68, 68, 68, 35, 82, 65]}, {"input": [73, 99, 10, 24, 42, 55], "output": [73, 73, 73, 73, 73, 99, 10, 24, 42, 55]}, {"input": [72, 21, 53, 74], "output": [72, 72, 72, 72, 72, 21, 53, 74]}, {"input": [51, 13, 53], "output": [51, 51, 51, 51, 51, 13, 53]}, {"input": [10, 40, 83, 60, 53, 50, 84], "output": [10, 10, 10, 10, 10, 40, 83, 60, 53, 50, 84]}, {"input": [65, 48, 9, 70, 88, 76, 32], "output": [65, 65, 65, 65, 65, 48, 9, 70, 88, 76, 32]}, {"input": [39, 69, 8, 29, 98], "output": [39, 39, 39, 39, 39, 69, 8, 29, 98]}]}
{"id": "c225", "function": "def c225(x):\n    # remove first and last two elements\n    return x[2:-2]\n\n", "train": {"normal": [{"input": [37, 33, 53, 55, 45, 17], "output": [53, 55]}, {"input": [56, 56, 40, 1, 69, 68, 80], "output": [40, 1, 69]}, {"input": [4, 4, 68, 80, 49, 46], "output": [68, 80]}, {"input": [65, 86, 82, 57, 48, 18, 5], "output": [82, 57, 48]}, {"input": [76, 75, 70, 7, 79, 12, 11, 23], "output": [70, 7, 79, 12]}, {"input": [89, 57, 42, 29, 36, 4, 50, 33], "output": [42, 29, 36, 4]}, {"input": [25, 21, 9, 69, 30, 71, 55], "output": [9, 69, 30]}, {"input": [65, 22, 25, 11, 86, 33, 96, 5], "output": [25, 11, 86, 33]}, {"input": [56, 56, 68, 80, 65, 86, 41, 44], "output": [68, 80, 65, 86]}, {"input": [8, 68, 86, 46, 64, 73, 36], "output": [86, 46, 64]}], "ood": [], "noise": [{"input": [81, 98, 70, 78, 13, 56], "output": [70, 76]}, {"input": [69, 25, 2, 63, 10, 37], "output": [30, 63]}, {"input": [9, 84, 8, 66, 75, 72], "output": [8, 15]}, {"input": [93, 36, 66, 36, 95, 62], "output": [52, 36]}, {"input": [69, 11, 32, 99, 40, 61, 55, 51], "output": [32, 99, 88, 61]}]}, "test": [{"input": [25, 72, 79, 96, 19], "output": [79]}, {"input": [26, 43, 7, 88, 13, 78, 89], "output": [7, 88, 13]}, {"input": [91, 21, 99, 67, 48, 27], "output": [99, 67]}, {"input": [90, 97, 98, 69, 53], "output": [98]}, {"input": [54, 28, 45, 86, 74, 13], "output": [45, 86]}, {"input": [41, 0, 49, 43, 86, 7, 25, 35], "output": [49, 43, 86, 7]}, {"input": [17, 59, 15, 99, 90, 68, 4], "output": [15, 99, 90]}, {"input": [86, 31, 52, 1, 93, 51], "output": [52, 1]}, {"input": [46, 85, 88, 73, 4, 87], "output": [88, 73]}, {"input": [41, 65, 19, 99, 43], "output": [19]}]}
{"id": "c067", "function": "def c067(x):\n    # swap the first and last element\n    x[0], x[-1] = x[-1], x[0]\n    return x\n\n", "train": {"normal": [{"input": [87, 63, 61], "output": [61, 63, 87]}, {"input": [94, 85, 43, 21, 43, 37], "output": [37, 85, 43, 21, 43, 94]}, {"input": [80, 40, 43, 59, 48, 54], "output": [54, 40, 43, 59, 48, 80]}, {"input": [0, 74, 90], "output": [90, 74, 0]}, {"input": [77, 29, 21, 88, 87, 67, 47], "output": [47, 29, 21, 88, 87, 67, 77]}, {"input": [79, 25, 92], "output": [92, 25, 79]}, {"input": [60, 4, 91, 65], "output": [65, 4, 91, 60]}, {"input": [20, 37, 59, 72, 45], "output": [45, 37, 59, 72, 20]}, {"input": [33, 78, 87, 34, 83], "output": [83, 78, 87, 34, 33]}, {"input": [85, 53, 45, 0], "output": [0, 53, 45, 85]}], "ood": [], "noise": [{"input": [47, 22, 22, 62], "output": [62, 34, 22, 24]}, {"input": [5, 51, 69, 85, 38, 8, 51], "output": [51, 51, 8, 85, 38, 8, 5]}, {"input": [42, 88, 9, 94, 0, 25], "output": [25, 37, 9, 45, 15, 42]}, {"input": [4, 40, 70, 91, 42], "output": [58, 40, 70, 91, 4]}, {"input": [80, 6, 84, 44, 49, 89], "output": [89, 78, 19, 44, 70, 80]}]}, "test": [{"input": [99, 92, 32], "output": [32, 92, 99]}, {"input": [47, 38, 50, 12, 36, 84], "output": [84, 38, 50, 12, 36, 47]}, {"input": [33, 88, 61, 10, 53, 18], "output": [18, 88, 61, 10, 53, 33]}, {"input": [21, 71, 12, 81, 14, 44], "output": [44, 71, 12, 81, 14, 21]}, {"input": [29, 62, 72, 58, 40], "output": [40, 62, 72, 58, 29]}, {"input": [16, 62, 46], "output": [46, 62, 16]}, {"input": [21, 27, 81, 54, 63], "output": [63, 27, 81, 54, 21]}, {"input": [17, 15, 24, 59], "output": [59, 15, 24, 17]}, {"input": [21, 12, 51, 85, 15, 83, 95], "output": [95, 12, 51, 85, 15, 83, 21]}, {"input": [99, 65, 82, 64, 61], "output": [61, 65, 82, 64, 99]}]}
{"id": "c112", "function": "def c112(x):\n    # count from 1 to the last element\n    return list(range(1, x[-1]+1))\n\n", "train": {"normal": [{"input": [91, 45, 8], "output": [1, 2, 3, 4, 5, 6, 7, 8]}, {"input": [48, 52, 23, 12, 8], "output": [1, 2, 3, 4, 5, 6, 7, 8]}, {"input": [14, 19, 70, 13], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]}, {"input": [49, 20, 50, 3], "output": [1, 2, 3]}, {"input": [89, 14, 89, 13], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]}, {"input": [16, 57, 26, 14, 33, 13], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]}, {"input": [12, 59, 96, 45, 58, 85, 10], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, {"input": [69, 87, 41, 97, 74, 3], "output": [1, 2, 3]}, {"input": [58, 25, 12, 85, 9], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9]}, {"input": [92, 33, 34, 64, 34, 99, 3], "output": [1, 2, 3]}], "ood": [], "noise": [{"input": [34, 84, 50, 9, 7], "output": [1, 2, 3, 4, 1, 6, 1]}, {"input": [51, 77, 92, 58, 12], "output": [7, 1, 11, 4, 5, 8, 7, 8, 9, 2, 11, 12]}, {"input": [24, 35, 51, 53, 13], "output": [1, 11, 9, 4, 5, 6, 7, 8, 9, 10, 3, 12, 13]}, {"input": [80, 53, 83, 68, 52, 57, 9], "output": [4, 6, 3, 4, 5, 6, 7, 8, 9]}, {"input": [68, 1, 75, 98, 77, 4], "output": [1, 2, 2, 4]}]}, "test": [{"input": [45, 65, 59, 17, 11], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]}, {"input": [17, 0, 74, 10], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, {"input": [91, 55, 4], "output": [1, 2, 3, 4]}, {"input": [5, 9, 96, 54, 8], "output": [1, 2, 3, 4, 5, 6, 7, 8]}, {"input": [15, 30, 90, 42, 9], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9]}, {"input": [68, 25, 13, 46, 15, 3], "output": [1, 2, 3]}, {"input": [66, 10, 0, 46, 3], "output": [1, 2, 3]}, {"input": [14, 53, 67, 8], "output": [1, 2, 3, 4, 5, 6, 7, 8]}, {"input": [41, 99, 13, 77, 92, 3], "output": [1, 2, 3]}, {"input": [1, 33, 0, 7], "output": [1, 2, 3, 4, 5, 6, 7]}]}
{"id": "c030", "function": "def c030(x):\n    # remove the last 2 elements\n    return x[:-2]\n\n", "train": {"normal": [{"input": [33, 43, 23, 70, 73, 33, 40], "output": [33, 43, 23, 70, 73]}, {"input": [33, 60, 33, 76], "output": [33, 60]}, {"input": [77, 26, 74, 48, 45, 73], "output": [77, 26, 74, 48]}, {"input": [62, 91, 74, 28, 66], "output": [62, 91, 74]}, {"input": [13, 41, 78, 95, 63, 56], "output": [13, 41, 78, 95]}, {"input": [41, 17, 37, 77, 21, 99], "output": [41, 17, 37, 77]}, {"input": [15, 32, 78, 75], "output": [15, 32]}, {"input": [32, 54, 31, 50], "output": [32, 54]}, {"input": [51, 75, 75, 87, 93], "output": [51, 75, 75]}, {"input": [54, 60, 21], "output": [54]}], "ood": [], "noise": [{"input": [74, 3, 56, 45, 21, 37], "output": [38, 3, 56, 37]}, {"input": [87, 25, 83], "output": [88]}, {"input": [54, 47, 40, 32, 70], "output": [54, 42, 40]}, {"input": [82, 12, 18, 10, 67], "output": [25, 81, 18]}, {"input": [7, 58, 22, 37, 0], "output": [56, 58, 38]}]}, "test": [{"input": [71, 16, 54, 25, 66, 20, 71], "output": [71, 16, 54, 25, 66]}, {"input": [25, 11, 77], "output": [25]}, {"input": [54, 26, 30], "output": [54]}, {"input": [78, 28, 21, 60, 50, 93, 1], "output": [78, 28, 21, 60, 50]}, {"input": [17, 12, 89, 94], "output": [17, 12]}, {"input": [22, 2, 55, 90, 24], "output": [22, 2, 55]}, {"input": [37, 63, 24], "output": [37]}, {"input": [3, 0, 70, 68, 93, 74, 39], "output": [3, 0, 70, 68, 93]}, {"input": [8, 33, 18, 69, 78, 47], "output": [8, 33, 18, 69]}, {"input": [8, 16, 34], "output": [8]}]}
{"id": "c149", "function": "def c149(x):\n    # replace each element, M with M * first element; remove the first element\n    return [i*x[0] for i in x[1:]]\n\n", "train": {"normal": [{"input": [4, 18, 13, 11, 16], "output": [72, 52, 44, 64]}, {"input": [17, 3, 19, 20, 19, 19], "output": [51, 323, 340, 323, 323]}, {"input": [12, 11, 16, 11, 17, 11, 11], "output": [132, 192, 132, 204, 132, 132]}, {"input": [8, 8, 11, 1], "output": [64, 88, 8]}, {"input": [12, 19, 9], "output": [228, 108]}, {"input": [18, 8, 8], "output": [144, 144]}, {"input": [14, 15, 7, 12, 18], "output": [210, 98, 168, 252]}, {"input": [1, 6, 15, 17, 15, 16], "output": [6, 15, 17, 15, 16]}, {"input": [20, 12, 6, 5, 0, 20, 3], "output": [240, 120, 100, 0, 400, 60]}, {"input": [18, 16, 18, 18, 20, 10], "output": [288, 324, 324, 360, 180]}], "ood": [], "noise": [{"input": [0, 18, 3, 0, 2, 7, 13], "output": [0, 0, 0, 1, 0, 0]}, {"input": [17, 6, 9, 3, 11, 16], "output": [171, 153, 51, 187, 272]}, {"input": [9, 17, 4, 3, 17, 15, 6], "output": [153, 28, 27, 153, 37, 51]}, {"input": [8, 14, 1], "output": [29, 8]}, {"input": [10, 7, 8, 15, 17, 5], "output": [70, 80, 150, 89, 50]}]}, "test": [{"input": [20, 10, 10, 14, 13, 2], "output": [200, 200, 280, 260, 40]}, {"input": [13, 11, 4, 10], "output": [143, 52, 130]}, {"input": [2, 18, 12, 2, 19, 2, 6], "output": [36, 24, 4, 38, 4, 12]}, {"input": [15, 6, 15, 17, 8, 15], "output": [90, 225, 255, 120, 225]}, {"input": [20, 16, 16, 14, 14, 10, 4], "output": [320, 320, 280, 280, 200, 80]}, {"input": [14, 18, 15, 9], "output": [252, 210, 126]}, {"input": [5, 17, 1, 8], "output": [85, 5, 40]}, {"input": [13, 12, 10], "output": [156, 130]}, {"input": [3, 3, 1, 7], "output": [9, 3, 21]}, {"input": [0, 15, 8, 0, 20, 8, 12], "output": [0, 0, 0, 0, 0, 0]}]}
{"id": "c148", "function": "def c148(x):\n    # count from 1 to each element\n    res = []\n    for i in x:\n        res += list(range(1, i+1))\n    return res\n\n", "train": {"normal": [{"input": [1, 4, 1], "output": [1, 1, 2, 3, 4, 1]}, {"input": [2, 1, 2], "output": [1, 2, 1, 1, 2]}, {"input": [3, 4, 3, 4], "output": [1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 1, 2, 3, 4]}, {"input": [0, 5, 4, 2, 2, 2], "output": [1, 2, 3, 4, 5, 1, 2, 3, 4, 1, 2, 1, 2, 1, 2]}, {"input": [5, 4, 4, 5, 2], "output": [1, 2, 3, 4, 5, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 5, 1, 2]}, {"input": [0, 1, 4, 1, 4], "output": [1, 1, 2, 3, 4, 1, 1, 2, 3, 4]}, {"input": [0, 3, 2, 0, 2], "output": [1, 2, 3, 1, 2, 1, 2]}, {"input": [4, 2, 4], "output": [1, 2, 3, 4, 1, 2, 1, 2, 3, 4]}, {"input": [3, 1, 3, 5], "output": [1, 2, 3, 1, 1, 2, 3, 1, 2, 3, 4, 5]}, {"input": [2, 0, 4, 1, 1, 3], "output": [1, 2, 1, 2, 3, 4, 1, 1, 1, 2, 3]}], "ood": [], "noise": [{"input": [4, 4, 0], "output": [1, 2, 1, 4, 1, 2, 3, 4]}, {"input": [4, 4, 1], "output": [1, 3, 4, 3, 1, 2, 3, 4, 1]}, {"input": [1, 4, 3], "output": [1, 1, 2, 3, 1, 1, 2, 4]}, {"input": [0, 0, 3, 3, 2, 1], "output": [1, 3, 2, 1, 2, 3, 3, 2, 1]}, {"input": [1, 4, 3, 4, 1, 2], "output": [1, 2, 2, 3, 4, 3, 2, 3, 1, 2, 2, 4, 1, 1, 1]}]}, "test": [{"input": [5, 5, 3, 0, 1, 2], "output": [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 1, 1, 2]}, {"input": [4, 4, 1, 1, 1, 4], "output": [1, 2, 3, 4, 1, 2, 3, 4, 1, 1, 1, 1, 2, 3, 4]}, {"input": [4, 4, 2, 2], "output": [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 1, 2]}, {"input": [5, 4, 0, 3], "output": [1, 2, 3, 4, 5, 1, 2, 3, 4, 1, 2, 3]}, {"input": [0, 5, 2, 0, 3, 5], "output": [1, 2, 3, 4, 5, 1, 2, 1, 2, 3, 1, 2, 3, 4, 5]}, {"input": [3, 2, 3, 3, 3], "output": [1, 2, 3, 1, 2, 1, 2, 3, 1, 2, 3, 1, 2, 3]}, {"input": [2, 0, 5, 3, 5], "output": [1, 2, 1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5]}, {"input": [0, 3, 0], "output": [1, 2, 3]}, {"input": [0, 5, 4, 2, 3], "output": [1, 2, 3, 4, 5, 1, 2, 3, 4, 1, 2, 1, 2, 3]}, {"input": [3, 4, 2], "output": [1, 2, 3, 1, 2, 3, 4, 1, 2]}]}
{"id": "c017", "function": "def c017(x):\n    # replace x[1] with 8\n    x[1] = 8\n    return x\n\n", "train": {"normal": [{"input": [79, 23, 23, 29, 29, 77, 37], "output": [79, 8, 23, 29, 29, 77, 37]}, {"input": [37, 91, 17, 95, 83, 42], "output": [37, 8, 17, 95, 83, 42]}, {"input": [32, 55, 96, 37, 87], "output": [32, 8, 96, 37, 87]}, {"input": [87, 1, 21, 27, 96], "output": [87, 8, 21, 27, 96]}, {"input": [19, 21, 99, 86, 9, 33], "output": [19, 8, 99, 86, 9, 33]}, {"input": [53, 63, 0, 93, 27, 14], "output": [53, 8, 0, 93, 27, 14]}, {"input": [88, 16, 60], "output": [88, 8, 60]}, {"input": [22, 19, 4, 94, 30, 81], "output": [22, 8, 4, 94, 30, 81]}, {"input": [56, 37, 39, 42, 39], "output": [56, 8, 39, 42, 39]}, {"input": [24, 68, 66], "output": [24, 8, 66]}], "ood": [], "noise": [{"input": [46, 33, 89, 3, 15], "output": [46, 8, 89, 30, 15]}, {"input": [63, 95, 55, 68, 35, 10], "output": [63, 8, 59, 68, 60, 50]}, {"input": [1, 56, 3, 51], "output": [1, 28, 3, 51]}, {"input": [70, 20, 85], "output": [70, 8, 23]}, {"input": [49, 54, 62, 38, 87, 84], "output": [49, 8, 48, 80, 87, 72]}]}, "test": [{"input": [96, 10, 47, 79, 57, 10, 67], "output": [96, 8, 47, 79, 57, 10, 67]}, {"input": [78, 70, 8, 24, 33, 32], "output": [78, 8, 8, 24, 33, 32]}, {"input": [97, 3, 68, 63], "output": [97, 8, 68, 63]}, {"input": [70, 28, 69], "output": [70, 8, 69]}, {"input": [33, 40, 41, 56, 59], "output": [33, 8, 41, 56, 59]}, {"input": [98, 26, 2], "output": [98, 8, 2]}, {"input": [98, 19, 65, 36, 45, 35, 24], "output": [98, 8, 65, 36, 45, 35, 24]}, {"input": [43, 10, 19], "output": [43, 8, 19]}, {"input": [6, 69, 45, 92, 56], "output": [6, 8, 45, 92, 56]}, {"input": [49, 63, 12, 30, 83, 85, 32], "output": [49, 8, 12, 30, 83, 85, 32]}]}
{"id": "c092", "function": "def c092(x):\n    # concatenate 92, 63, 34, 18, 55\n    return x + [92, 63, 34, 18, 55]\n\n", "train": {"normal": [{"input": [21, 97, 54, 9], "output": [21, 97, 54, 9, 92, 63, 34, 18, 55]}, {"input": [25, 59, 11, 66, 52], "output": [25, 59, 11, 66, 52, 92, 63, 34, 18, 55]}, {"input": [64, 80, 42, 37, 90], "output": [64, 80, 42, 37, 90, 92, 63, 34, 18, 55]}, {"input": [83, 1, 90, 62], "output": [83, 1, 90, 62, 92, 63, 34, 18, 55]}, {"input": [71, 79, 93, 33, 22], "output": [71, 79, 93, 33, 22, 92, 63, 34, 18, 55]}, {"input": [90, 56, 37, 40, 12, 95], "output": [90, 56, 37, 40, 12, 95, 92, 63, 34, 18, 55]}, {"input": [85, 28, 52], "output": [85, 28, 52, 92, 63, 34, 18, 55]}, {"input": [56, 92, 45, 59, 46], "output": [56, 92, 45, 59, 46, 92, 63, 34, 18, 55]}, {"input": [80, 85, 89, 97, 5, 90], "output": [80, 85, 89, 97, 5, 90, 92, 63, 34, 18, 55]}, {"input": [6, 96, 6], "output": [6, 96, 6, 92, 63, 34, 18, 55]}], "ood": [], "noise": [{"input": [66, 43, 33, 34], "output": [66, 43, 33, 34, 92, 20, 48, 18, 55]}, {"input": [48, 80, 9, 31, 68, 46], "output": [48, 80, 9, 31, 68, 83, 92, 63, 34, 18, 55]}, {"input": [43, 97, 52, 94], "output": [43, 97, 42, 94, 92, 63, 34, 18, 55]}, {"input": [93, 3, 47, 94, 87, 59], "output": [74, 3, 47, 94, 87, 80, 92, 63, 34, 18, 55]}, {"input": [41, 87, 86], "output": [41, 87, 79, 92, 63, 34, 18, 35]}]}, "test": [{"input": [51, 49, 47, 89, 40], "output": [51, 49, 47, 89, 40, 92, 63, 34, 18, 55]}, {"input": [68, 27, 2, 26], "output": [68, 27, 2, 26, 92, 63, 34, 18, 55]}, {"input": [66, 86, 7, 65, 34, 7], "output": [66, 86, 7, 65, 34, 7, 92, 63, 34, 18, 55]}, {"input": [85, 41, 61, 79, 42, 99], "output": [85, 41, 61, 79, 42, 99, 92, 63, 34, 18, 55]}, {"input": [21, 58, 85, 2, 40], "output": [21, 58, 85, 2, 40, 92, 63, 34, 18, 55]}, {"input": [68, 7, 47, 74, 47], "output": [68, 7, 47, 74, 47, 92, 63, 34, 18, 55]}, {"input": [69, 84, 83, 21, 7], "output": [69, 84, 83, 21, 7, 92, 63, 34, 18, 55]}, {"input": [16, 65, 83, 33], "output": [16, 65, 83, 33, 92, 63, 34, 18, 55]}, {"input": [94, 21, 77, 25, 86], "output": [94, 21, 77, 25, 86, 92, 63, 34, 18, 55]}, {"input": [59, 81, 84, 12, 21], "output": [59, 81, 84, 12, 21, 92, 63, 34, 18, 55]}]}
{"id": "c077", "function": "def c077(x):\n    # input length\n    return [len(x)]\n\n", "train": {"normal": [{"input": [34, 62, 35, 90, 53, 28, 95], "output": [7]}, {"input": [17, 53, 80, 40, 4, 9], "output": [6]}, {"input": [4, 12, 92, 33, 18, 26], "output": [6]}, {"input": [33, 5, 29, 81, 14], "output": [5]}, {"input": [72, 57, 4, 33, 7], "output": [5]}, {"input": [98, 82, 21, 95, 64, 16, 76], "output": [7]}, {"input": [92, 19, 41, 76, 70, 35], "output": [6]}, {"input": [59, 14, 3, 21, 73, 78, 65], "output": [7]}, {"input": [56, 84, 52, 95, 34, 49], "output": [6]}, {"input": [29, 0, 21, 77, 60, 37, 43], "output": [7]}], "ood": [], "noise": [{"input": [98, 55, 78, 89, 1, 72, 48], "output": [8]}, {"input": [2, 98, 20], "output": [4]}, {"input": [93, 43, 23, 16, 68, 40], "output": [7]}, {"input": [53, 51, 41], "output": [4]}, {"input": [21, 94, 19, 33, 9, 4, 97], "output": [8]}]}, "test": [{"input": [32, 59, 45, 41, 83], "output": [5]}, {"input": [21, 17, 36, 2], "output": [4]}, {"input": [26, 17, 9, 2, 66], "output": [5]}, {"input": [8, 60, 64, 90, 25], "output": [5]}, {"input": [80, 5, 72, 13], "output": [4]}, {"input": [19, 79, 14, 2], "output": [4]}, {"input": [5, 55, 36, 53, 83, 75, 39], "output": [7]}, {"input": [67, 40, 70, 8], "output": [4]}, {"input": [5, 14, 98, 38, 20], "output": [5]}, {"input": [23, 88, 48, 98, 76, 83, 11], "output": [7]}]}
{"id": "c248", "function": "def c248(x):\n    # elements after the first 0\n    return x[x.index(0)+1:]\n\n", "train": {"normal": [{"input": [18, 91, 89, 21, 0, 53, 40, 93], "output": [53, 40, 93]}, {"input": [43, 47, 41, 83, 0, 22], "output": [22]}, {"input": [76, 0, 7, 46, 60, 98, 23], "output": [7, 46, 60, 98, 23]}, {"input": [81, 18, 0, 41, 0, 89], "output": [41, 0, 89]}, {"input": [57, 82, 0, 77, 16, 11], "output": [77, 16, 11]}, {"input": [63, 0, 53, 49, 37], "output": [53, 49, 37]}, {"input": [0, 95, 3, 22, 50, 70], "output": [95, 3, 22, 50, 70]}, {"input": [90, 39, 51, 0, 93, 84, 82], "output": [93, 84, 82]}, {"input": [20, 89, 0, 53, 73], "output": [53, 73]}, {"input": [0, 73, 55, 22, 59, 9], "output": [73, 55, 22, 59, 9]}], "ood": [], "noise": [{"input": [0, 27, 96, 55, 9], "output": [27, 96, 26, 9]}, {"input": [24, 71, 36, 60, 0, 19, 56, 43], "output": [46, 52, 43]}, {"input": [29, 29, 9, 0, 53], "output": [54]}, {"input": [26, 12, 29, 45, 76, 15, 0, 79], "output": [80]}, {"input": [85, 42, 20, 35, 0, 19, 90], "output": [55, 90]}]}, "test": [{"input": [27, 77, 96, 90, 36, 0, 48], "output": [48]}, {"input": [9, 37, 55, 84, 0, 25, 88], "output": [25, 88]}, {"input": [34, 77, 14, 21, 43, 70, 0, 44], "output": [44]}, {"input": [64, 37, 42, 13, 21, 7, 0, 24], "output": [24]}, {"input": [80, 90, 90, 45, 14, 0, 60, 11], "output": [60, 11]}, {"input": [8, 0, 78, 89, 10, 6], "output": [78, 89, 10, 6]}, {"input": [58, 0, 68, 36, 40, 34, 67, 38], "output": [68, 36, 40, 34, 67, 38]}, {"input": [33, 21, 48, 89, 34, 0, 0, 25], "output": [0, 25]}, {"input": [20, 0, 77, 75, 35, 81, 4, 29], "output": [77, 75, 35, 81, 4, 29]}, {"input": [40, 94, 50, 0, 99, 15, 53], "output": [99, 15, 53]}]}
{"id": "c199", "function": "def c199(x):\n    # elements in ascending order, each preceded by its rank\n    res = []\n    for i, v in enumerate(sorted(x)):\n        res.append(i+1)\n        res.append(v)\n    return res\n\n", "train": {"normal": [{"input": [91, 77, 62, 83, 5, 96, 98], "output": [1, 5, 2, 62, 3, 77, 4, 83, 5, 91, 6, 96, 7, 98]}, {"input": [55, 58, 18, 51, 42, 83, 66], "output": [1, 18, 2, 42, 3, 51, 4, 55, 5, 58, 6, 66, 7, 83]}, {"input": [52, 20, 77, 62, 7], "output": [1, 7, 2, 20, 3, 52, 4, 62, 5, 77]}, {"input": [55, 82, 15, 46, 17], "output": [1, 15, 2, 17, 3, 46, 4, 55, 5, 82]}, {"input": [84, 99, 35, 55, 85, 46], "output": [1, 35, 2, 46, 3, 55, 4, 84, 5, 85, 6, 99]}, {"input": [27, 14, 8, 85, 23, 60], "output": [1, 8, 2, 14, 3, 23, 4, 27, 5, 60, 6, 85]}, {"input": [18, 69, 97, 44, 12, 71], "output": [1, 12, 2, 18, 3, 44, 4, 69, 5, 71, 6, 97]}, {"input": [13, 47, 33, 88, 74, 74], "output": [1, 13, 2, 33, 3, 47, 4, 74, 5, 74, 6, 88]}, {"input": [97, 92, 1], "output": [1, 1, 2, 92, 3, 97]}, {"input": [41, 74, 13, 49, 10, 13, 51], "output": [1, 10, 2, 13, 3, 13, 4, 41, 5, 49, 6, 51, 7, 74]}], "ood": [], "noise": [{"input": [34, 68, 42, 82, 16, 40], "output": [1, 16, 10, 34, 64, 40, 4, 42, 5, 68, 63, 82]}, {"input": [15, 48, 76, 40, 8, 67, 34], "output": [24, 8, 2, 53, 3, 34, 53, 40, 74, 48, 6, 67, 7, 46]}, {"input": [98, 56, 50, 16, 29, 26], "output": [1, 39, 2, 36, 3, 29, 4, 50, 5, 56, 6, 98]}, {"input": [4, 98, 49, 28, 59], "output": [1, 5, 2, 26, 3, 49, 69, 59, 73, 98]}, {"input": [68, 33, 15, 39, 43, 11, 5], "output": [1, 5, 2, 11, 3, 15, 4, 33, 5, 39, 6, 34, 7, 68]}]}, "test": [{"input": [18, 33, 56, 83, 75], "output": [1, 18, 2, 33, 3, 56, 4, 75, 5, 83]}, {"input": [28, 29, 31, 48, 87, 25], "output": [1, 25, 2, 28, 3, 29, 4, 31, 5, 48, 6, 87]}, {"input": [90, 92, 45, 12], "output": [1, 12, 2, 45, 3, 90, 4, 92]}, {"input": [89, 70, 33, 68, 0, 84, 93], "output": [1, 0, 2, 33, 3, 68, 4, 70, 5, 84, 6, 89, 7, 93]}, {"input": [6, 42, 35, 10, 5], "output": [1, 5, 2, 6, 3, 10, 4, 35, 5, 42]}, {"input": [42, 41, 6, 83, 20, 24, 36], "output": [1, 6, 2, 20, 3, 24, 4, 36, 5, 41, 6, 42, 7, 83]}, {"input": [10, 81, 12, 13, 78], "output": [1, 10, 2, 12, 3, 13, 4, 78, 5, 81]}, {"input": [58, 74, 31, 58], "output": [1, 31, 2, 58, 3, 58, 4, 74]}, {"input": [51, 56, 86, 77, 56, 89], "output": [1, 51, 2, 56, 3, 56, 4, 77, 5, 86, 6, 89]}, {"input": [59, 73, 60, 57], "output": [1, 57, 2, 59, 3, 60, 4, 73]}]}
{"id": "c007", "function": "def c007(x):\n    # remove all but the first 2 elements\n    return x[:2]\n\n", "train": {"normal": [{"input": [8, 53, 21, 37, 52], "output": [8, 53]}, {"input": [41, 2, 49], "output": [41, 2]}, {"input": [93, 31, 19, 22, 40], "output": [93, 31]}, {"input": [57, 79, 49, 45, 68], "output": [57, 79]}, {"input": [64, 44, 27, 15, 74, 2], "output": [64, 44]}, {"input": [67, 42, 45, 63, 53, 89], "output": [67, 42]}, {"input": [71, 89, 15], "output": [71, 89]}, {"input": [99, 77, 50], "output": [99, 77]}, {"input": [96, 96, 58], "output": [96, 96]}, {"input": [10, 5, 69, 85, 21, 0], "output": [10, 5]}], "ood": [], "noise": [{"input": [91, 62, 89, 67], "output": [80, 62]}, {"input": [99, 71, 85, 31, 88], "output": [99, 86]}, {"input": [48, 47, 96, 65, 92], "output": [48, 48]}, {"input": [82, 80, 67, 27, 12, 97, 80], "output": [82, 82]}, {"input": [52, 86, 84, 88, 27, 6, 8], "output": [68, 86]}]}, "test": [{"input": [95, 29, 28, 56], "output": [95, 29]}, {"input": [76, 97, 75], "output": [76, 97]}, {"input": [35, 46, 86], "output": [35, 46]}, {"input": [73, 29, 96, 52, 90], "output": [73, 29]}, {"input": [47, 97, 65, 49, 39, 0], "output": [47, 97]}, {"input": [77, 88, 88], "output": [77, 88]}, {"input": [42, 99, 94], "output": [42, 99]}, {"input": [34, 21, 22, 63, 2, 71, 34], "output": [34, 21]}, {"input": [75, 25, 57, 23, 51, 19], "output": [75, 25]}, {"input": [32, 27, 97, 26, 57, 23], "output": [32, 27]}]}
{"id": "c176", "function": "def c176(x):\n    # sum of each consecutive pair of elements\n    return [x[i] + x[i+1] for i in range(0, len(x)-1)]\n\n", "train": {"normal": [{"input": [57, 60, 55, 14, 39, 16], "output": [117, 115, 69, 53, 55]}, {"input": [61, 70, 18, 31, 90, 66, 60], "output": [131, 88, 49, 121, 156, 126]}, {"input": [13, 95, 73, 10], "output": [108, 168, 83]}, {"input": [31, 17, 60, 15, 42], "output": [48, 77, 75, 57]}, {"input": [53, 21, 70], "output": [74, 91]}, {"input": [33, 22, 25, 33, 69, 16, 53], "output": [55, 47, 58, 102, 85, 69]}, {"input": [2, 79, 0], "output": [81, 79]}, {"input": [82, 18, 83, 65, 66, 34, 49], "output": [100, 101, 148, 131, 100, 83]}, {"input": [68, 90, 69, 99, 11, 36, 72], "output": [158, 159, 168, 110, 47, 108]}, {"input": [47, 67, 78, 32, 34, 89], "output": [114, 145, 110, 66, 123]}], "ood": [], "noise": [{"input": [21, 13, 17, 64, 70, 66], "output": [34, 30, 81, 134, 47]}, {"input": [58, 40, 99, 42, 50, 18, 96], "output": [98, 138, 141, 135, 141, 114]}, {"input": [59, 52, 36], "output": [111, 107]}, {"input": [17, 85, 45], "output": [102, 102]}, {"input": [4, 63, 64], "output": [117, 127]}]}, "test": [{"input": [80, 17, 13, 92], "output": [97, 30, 105]}, {"input": [35, 95, 3], "output": [130, 98]}, {"input": [17, 39, 7, 61, 65, 80, 64], "output": [56, 46, 68, 126, 145, 144]}, {"input": [89, 97, 31, 29], "output": [186, 128, 60]}, {"input": [9, 50, 23, 44, 63, 40], "output": [59, 73, 67, 107, 103]}, {"input": [3, 81, 32, 37, 41], "output": [84, 113, 69, 78]}, {"input": [67, 13, 5], "output": [80, 18]}, {"input": [2, 59, 67, 31, 91, 97, 5, 30], "output": [61, 126, 98, 122, 188, 102, 35]}, {"input": [57, 87, 27, 15, 66, 6, 0, 22], "output": [144, 114, 42, 81, 72, 6, 22]}, {"input": [79, 56, 54, 64, 62, 28, 39, 75], "output": [135, 110, 118, 126, 90, 67, 114]}]}
{"id": "c066", "function": "def c066(x):\n    # left rotate the list by 1\n    return x[1:] + x[:1]\n\n", "train": {"normal": [{"input": [21, 98, 15], "output": [98, 15, 21]}, {"input": [44, 90, 78, 42], "output": [90, 78, 42, 44]}, {"input": [47, 83, 43], "output": [83, 43, 47]}, {"input": [61, 65, 63, 39, 63, 45], "output": [65, 63, 39, 63, 45, 61]}, {"input": [87, 78, 58, 20, 38, 20], "output": [78, 58, 20, 38, 20, 87]}, {"input": [61, 68, 82, 96], "output": [68, 82, 96, 61]}, {"input": [85, 26, 60, 95, 51, 18, 25], "output": [26, 60, 95, 51, 18, 25, 85]}, {"input": [49, 44, 9], "output": [44, 9, 49]}, {"input": [46, 45, 18, 30], "output": [45, 18, 30, 46]}, {"input": [13, 34, 56, 6, 23], "output": [34, 56, 6, 23, 13]}], "ood": [], "noise": [{"input": [57, 37, 6, 21, 35, 71], "output": [37, 6, 38, 24, 71, 53]}, {"input": [14, 98, 95, 21, 74, 6], "output": [98, 37, 79, 74, 7, 14]}, {"input": [29, 35, 13, 33], "output": [34, 13, 33, 31]}, {"input": [12, 8, 33, 74, 96, 48], "output": [8, 33, 60, 96, 68, 12]}, {"input": [56, 89, 77, 43, 10, 87, 23], "output": [89, 77, 27, 86, 87, 23, 78]}]}, "test": [{"input": [81, 16, 81, 72, 4, 78], "output": [16, 81, 72, 4, 78, 81]}, {"input": [35, 90, 71, 51, 60, 65], "output": [90, 71, 51, 60, 65, 35]}, {"input": [61, 20, 18], "output": [20, 18, 61]}, {"input": [76, 83, 91, 65, 32, 41], "output": [83, 91, 65, 32, 41, 76]}, {"input": [68, 99, 98, 14, 60, 71], "output": [99, 98, 14, 60, 71, 68]}, {"input": [23, 54, 84, 74], "output": [54, 84, 74, 23]}, {"input": [31, 89, 37], "output": [89, 37, 31]}, {"input": [49, 91, 78, 25], "output": [91, 78, 25, 49]}, {"input": [6, 1, 84, 90, 16], "output": [1, 84, 90, 16, 6]}, {"input": [28, 23, 59], "output": [23, 59, 28]}]}
{"id": "c053", "function": "def c053(x):\n    # replace x[1] with x[0]\n    x[1] = x[0]\n    return x\n\n", "train": {"normal": [{"input": [6, 71, 80], "output": [6, 6, 80]}, {"input": [90, 63, 82, 38], "output": [90, 90, 82, 38]}, {"input": [25, 59, 63, 38, 42, 31], "output": [25, 25, 63, 38, 42, 31]}, {"input": [94, 39, 41], "output": [94, 94, 41]}, {"input": [95, 52, 6], "output": [95, 95, 6]}, {"input": [4, 31, 8], "output": [4, 4, 8]}, {"input": [99, 66, 45, 12, 55], "output": [99, 99, 45, 12, 55]}, {"input": [65, 96, 6, 56, 96, 54, 53], "output": [65, 65, 6, 56, 96, 54, 53]}, {"input": [76, 99, 83, 39, 86, 18, 3], "output": [76, 76, 83, 39, 86, 18, 3]}, {"input": [44, 16, 47, 84, 70], "output": [44, 44, 47, 84, 70]}], "ood": [], "noise": [{"input": [78, 44, 32, 25, 43], "output": [78, 78, 73, 25, 43]}, {"input": [24, 50, 16, 26, 30], "output": [21, 24, 16, 26, 19]}, {"input": [82, 73, 12, 71, 55, 35], "output": [44, 82, 35, 71, 55, 35]}, {"input": [61, 26, 17], "output": [61, 61, 26]}, {"input": [51, 73, 0, 18, 1, 63, 73], "output": [51, 51, 25, 18, 12, 63, 73]}]}, "test": [{"input": [83, 61, 15, 70, 22, 31, 64], "output": [83, 83, 15, 70, 22, 31, 64]}, {"input": [58, 47, 16], "output": [58, 58, 16]}, {"input": [48, 94, 41, 51, 42, 9], "output": [48, 48, 41, 51, 42, 9]}, {"input": [57, 28, 51, 15], "output": [57, 57, 51, 15]}, {"input": [5, 94, 50], "output": [5, 5, 50]}, {"input": [95, 43, 13, 86, 16, 38, 37], "output": [95, 95, 13, 86, 16, 38, 37]}, {"input": [18, 40, 2], "output": [18, 18, 2]}, {"input": [74, 17, 47], "output": [74, 74, 47]}, {"input": [62, 52, 76, 24], "output": [62, 62, 76, 24]}, {"input": [52, 92, 83], "output": [52, 52, 83]}]}
{"id": "c047", "function": "def c047(x):\n    # concatenate 9, 6, 3, 8, 5\n    return [9, 6, 3, 8, 5] + x\n\n", "train": {"normal": [{"input": [45, 12, 68, 54], "output": [9, 6, 3, 8, 5, 45, 12, 68, 54]}, {"input": [13, 46, 62, 71, 59, 73, 45], "output": [9, 6, 3, 8, 5, 13, 46, 62, 71, 59, 73, 45]}, {"input": [40, 54, 15, 97, 35, 2, 70], "output": [9, 6, 3, 8, 5, 40, 54, 15, 97, 35, 2, 70]}, {"input": [19, 16, 83, 46], "output": [9, 6, 3, 8, 5, 19, 16, 83, 46]}, {"input": [98, 65, 93, 42, 64, 65], "output": [9, 6, 3, 8, 5, 98, 65, 93, 42, 64, 65]}, {"input": [34, 62, 72, 69], "output": [9, 6, 3, 8, 5, 34, 62, 72, 69]}, {"input": [42, 71, 14, 96], "output": [9, 6, 3, 8, 5, 42, 71, 14, 96]}, {"input": [27, 30, 72, 58, 8, 7], "output": [9, 6, 3, 8, 5, 27, 30, 72, 58, 8, 7]}, {"input": [7, 81, 22, 1], "output": [9, 6, 3, 8, 5, 7, 81, 22, 1]}, {"input": [81, 49, 59, 20, 60, 24, 89], "output": [9, 6, 3, 8, 5, 81, 49, 59, 20, 60, 24, 89]}], "ood": [], "noise": [{"input": [98, 53, 11, 61, 64, 80], "output": [9, 6, 10, 60, 5, 98, 53, 11, 61, 76, 80]}, {"input": [75, 63, 10, 19, 21], "output": [59, 53, 7, 8, 5, 75, 63, 10, 19, 23]}, {"input": [99, 98, 41, 57, 87, 45], "output": [34, 47, 3, 8, 79, 99, 98, 41, 57, 87, 45]}, {"input": [7, 9, 93, 79, 58, 21], "output": [9, 6, 3, 8, 5, 7, 36, 93, 79, 58, 21]}, {"input": [73, 92, 29, 67, 43], "output": [9, 42, 71, 8, 5, 76, 92, 29, 67, 62]}]}, "test": [{"input": [69, 48, 99, 86], "output": [9, 6, 3, 8, 5, 69, 48, 99, 86]}, {"input": [80, 93, 37], "output": [9, 6, 3, 8, 5, 80, 93, 37]}, {"input": [82, 5, 45, 54], "output": [9, 6, 3, 8, 5, 82, 5, 45, 54]}, {"input": [52, 66, 94, 45, 32, 15], "output": [9, 6, 3, 8, 5, 52, 66, 94, 45, 32, 15]}, {"input": [63, 36, 53, 79], "output": [9, 6, 3, 8, 5, 63, 36, 53, 79]}, {"input": [67, 41, 43], "output": [9, 6, 3, 8, 5, 67, 41, 43]}, {"input": [76, 7, 0, 75, 17, 55], "output": [9, 6, 3, 8, 5, 76, 7, 0, 75, 17, 55]}, {"input": [39, 41, 95, 7], "output": [9, 6, 3, 8, 5, 39, 41, 95, 7]}, {"input": [61, 34, 61, 77, 38], "output": [9, 6, 3, 8, 5, 61, 34, 61, 77, 38]}, {"input": [40, 34, 52, 25, 88, 76], "output": [9, 6, 3, 8, 5, 40, 34, 52, 25, 88, 76]}]}
{"id": "c064", "function": "def c064(x):\n    # remove the first and last element\n    return x[1:-1]\n\n", "train": {"normal": [{"input": [57, 96, 34, 4, 39], "output": [96, 34, 4]}, {"input": [53, 90, 14], "output": [90]}, {"input": [29, 45, 5, 39, 74, 26, 40], "output": [45, 5, 39, 74, 26]}, {"input": [94, 62, 61], "output": [62]}, {"input": [26, 63, 69, 42], "output": [63, 69]}, {"input": [89, 34, 10, 75, 15, 26, 43], "output": [34, 10, 75, 15, 26]}, {"input": [40, 77, 96, 88, 9], "output": [77, 96, 88]}, {"input": [80, 86, 38], "output": [86]}, {"input": [62, 69, 40], "output": [69]}, {"input": [48, 15, 83, 54], "output": [15, 83]}], "ood": [], "noise": [{"input": [11, 9, 42, 29, 40, 11], "output": [9, 42, 29, 27]}, {"input": [36, 45, 87, 55, 86, 14, 98], "output": [45, 85, 32, 86, 14]}, {"input": [73, 54, 42, 62], "output": [49, 42]}, {"input": [76, 13, 1, 51, 29], "output": [25, 3, 51]}, {"input": [87, 11, 92, 71], "output": [35, 92]}]}, "test": [{"input": [58, 78, 96, 53], "output": [78, 96]}, {"input": [37, 88, 88, 89, 7, 98, 21], "output": [88, 88, 89, 7, 98]}, {"input": [80, 43, 90], "output": [43]}, {"input": [17, 40, 50, 33], "output": [40, 50]}, {"input": [4, 36, 66, 12, 65], "output": [36, 66, 12]}, {"input": [55, 6, 41, 41, 10, 74], "output": [6, 41, 41, 10]}, {"input": [3, 82, 58, 30, 87, 39], "output": [82, 58, 30, 87]}, {"input": [77, 77, 34], "output": [77]}, {"input": [64, 72, 60], "output": [72]}, {"input": [41, 92, 36, 34, 69], "output": [92, 36, 34]}]}
{"id": "c078", "function": "def c078(x):\n    # maximum element\n    return [max(x)]\n\n", "train": {"normal": [{"input": [71, 43, 47], "output": [71]}, {"input": [99, 25, 48, 93, 41], "output": [99]}, {"input": [63, 46, 34], "output": [63]}, {"input": [16, 21, 44, 14, 8, 20], "output": [44]}, {"input": [69, 90, 86, 70], "output": [90]}, {"input": [60, 24, 57, 34, 61, 26], "output": [61]}, {"input": [26, 30, 23, 12], "output": [30]}, {"input": [88, 94, 69, 75, 98, 4], "output": [98]}, {"input": [70, 80, 17, 86, 70, 87, 84], "output": [87]}, {"input": [29, 81, 29, 37, 55, 84], "output": [84]}], "ood": [], "noise": [{"input": [43, 46, 61], "output": [62]}, {"input": [74, 10, 75, 19], "output": [76]}, {"input": [45, 68, 50, 75, 56, 77, 23], "output": [78]}, {"input": [83, 1, 82, 24], "output": [84]}, {"input": [79, 84, 28, 80, 81, 66, 44], "output": [85]}]}, "test": [{"input": [1, 96, 54, 85, 6], "output": [96]}, {"input": [73, 62, 95, 65], "output": [95]}, {"input": [71, 65, 19, 30, 41, 1, 83], "output": [83]}, {"input": [26, 87, 0, 85], "output": [87]}, {"input": [36, 62, 2, 85], "output": [85]}, {"input": [0, 85, 84, 95], "output": [95]}, {"input": [98, 92, 29, 91], "output": [98]}, {"input": [25, 25, 68, 0, 62], "output": [68]}, {"input": [46, 91, 48, 80], "output": [91]}, {"input": [63, 24, 79, 61, 93], "output": [93]}]}
{"id": "c119", "function": "def c119(x):\n    # make the list begin and ends with 8\n    if x[0] != 8:\n        x = [8] + x\n    if x[-1] != 8:\n        x = x + [8]\n    return x\n\n", "train": {"normal": [{"input": [65, 50, 20, 54], "output": [8, 65, 50, 20, 54, 8]}, {"input": [57, 73, 72], "output": [8, 57, 73, 72, 8]}, {"input": [17, 95, 22], "output": [8, 17, 95, 22, 8]}, {"input": [57, 81, 14, 22, 15], "output": [8, 57, 81, 14, 22, 15, 8]}, {"input": [2, 72, 93, 1], "output": [8, 2, 72, 93, 1, 8]}, {"input": [18, 68, 89], "output": [8, 18, 68, 89, 8]}, {"input": [62, 0, 11, 71, 18, 99], "output": [8, 62, 0, 11, 71, 18, 99, 8]}, {"input": [92, 33, 47, 84, 77], "output": [8, 92, 33, 47, 84, 77, 8]}, {"input": [86, 30, 59, 26, 42, 63], "output": [8, 86, 30, 59, 26, 42, 63, 8]}, {"input": [57, 9, 66, 99, 25], "output": [8, 57, 9, 66, 99, 25, 8]}], "ood": [], "noise": [{"input": [0, 75, 57], "output": [8, 25, 17, 57, 8]}, {"input": [16, 55, 51], "output": [44, 16, 55, 51, 8]}, {"input": [39, 30, 47], "output": [8, 39, 35, 47, 8]}, {"input": [87, 21, 52, 13, 40], "output": [21, 87, 21, 77, 13, 40, 8]}, {"input": [29, 51, 14, 98, 6], "output": [8, 34, 51, 14, 98, 6, 8]}]}, "test": [{"input": [91, 48, 26], "output": [8, 91, 48, 26, 8]}, {"input": [24, 19, 70, 74], "output": [8, 24, 19, 70, 74, 8]}, {"input": [24, 68, 83, 56, 29], "output": [8, 24, 68, 83, 56, 29, 8]}, {"input": [94, 31, 37, 9], "output": [8, 94, 31, 37, 9, 8]}, {"input": [9, 27, 27, 35, 24, 78], "output": [8, 9, 27, 27, 35, 24, 78, 8]}, {"input": [60, 55, 89], "output": [8, 60, 55, 89, 8]}, {"input": [52, 51, 46, 49], "output": [8, 52, 51, 46, 49, 8]}, {"input": [34, 2, 12, 48, 64, 6, 92], "output": [8, 34, 2, 12, 48, 64, 6, 92, 8]}, {"input": [71, 50, 48, 85, 47], "output": [8, 71, 50, 48, 85, 47, 8]}, {"input": [81, 88, 2, 99, 62, 67], "output": [8, 81, 88, 2, 99, 62, 67, 8]}]}
{"id": "c135", "function": "def c135(x):\n    # remove the first 7\n    x.remove(7)\n    return x\n\n", "train": {"normal": [{"input": [7, 5, 6, 9, 7, 9, 6], "output": [5, 6, 9, 7, 9, 6]}, {"input": [3, 9, 3, 5, 7, 3], "output": [3, 9, 3, 5, 3]}, {"input": [6, 7, 0, 8, 4, 7], "output": [6, 0, 8, 4, 7]}, {"input": [4, 7, 7, 8, 1, 7, 5, 2], "output": [4, 7, 8, 1, 7, 5, 2]}, {"input": [1, 7, 9, 7, 2], "output": [1, 9, 7, 2]}, {"input": [8, 1, 5, 5, 7], "output": [8, 1, 5, 5]}, {"input": [4, 4, 7, 9, 7, 7, 7, 0], "output": [4, 4, 9, 7, 7, 7, 0]}, {"input": [3, 7, 5, 2, 7, 7], "output": [3, 5, 2, 7, 7]}, {"input": [1, 8, 6, 3, 7], "output": [1, 8, 6, 3]}, {"input": [5, 7, 6, 5, 5, 7], "output": [5, 6, 5, 5, 7]}], "ood": [], "noise": [{"input": [0, 6, 7, 5, 7, 5, 9, 3, 1], "output": [0, 6, 5, 3, 5, 9, 7, 1]}, {"input": [4, 9, 4, 7], "output": [4, 9, 6]}, {"input": [3, 1, 7, 4, 2, 7, 6, 0], "output": [3, 0, 4, 1, 7, 6, 6]}, {"input": [6, 8, 5, 0, 2, 2, 7], "output": [6, 8, 2, 0, 2, 8]}, {"input": [5, 7, 7, 7, 7], "output": [6, 7, 7, 7]}]}, "test": [{"input": [1, 7, 7, 0, 1, 7, 8], "output": [1, 7, 0, 1, 7, 8]}, {"input": [6, 2, 7, 7, 3, 1, 4], "output": [6, 2, 7, 3, 1, 4]}, {"input": [5, 6, 3, 7, 2, 7, 7], "output": [5, 6, 3, 2, 7, 7]}, {"input": [7, 9, 7, 0, 2], "output": [9, 7, 0, 2]}, {"input": [6, 2, 9, 0, 7, 7], "output": [6, 2, 9, 0, 7]}, {"input": [9, 2, 7, 3, 6], "output": [9, 2, 3, 6]}, {"input": [2, 1, 2, 8, 2, 7, 1, 7, 1], "output": [2, 1, 2, 8, 2, 1, 7, 1]}, {"input": [7, 1, 6, 6], "output": [1, 6, 6]}, {"input": [6, 0, 7, 0, 7, 7], "output": [6, 0, 0, 7, 7]}, {"input": [7, 7, 0, 5, 3], "output": [7, 0, 5, 3]}]}
{"id": "c198", "function": "def c198(x):\n    # unique elements in descending order\n    res = set(x)\n    return sorted(res, reverse=True)\n\n", "train": {"normal": [{"input": [31, 84, 59, 12, 65, 65, 61, 9, 59], "output": [84, 65, 61, 59, 31, 12, 9]}, {"input": [12, 85, 75, 12, 86, 70, 10, 44, 85], "output": [86, 85, 75, 70, 44, 12, 10]}, {"input": [28, 27, 28, 28, 53, 73], "output": [73, 53, 28, 27]}, {"input": [51, 87, 42, 70, 87], "output": [87, 70, 51, 42]}, {"input": [35, 27, 88, 85, 85, 88], "output": [88, 85, 35, 27]}, {"input": [83, 10, 44, 10], "output": [83, 44, 10]}, {"input": [20, 47, 20, 17, 74], "output": [74, 47, 20, 17]}, {"input": [67, 91, 92, 84, 92, 48, 23, 60], "output": [92, 91, 84, 67, 60, 48, 23]}, {"input": [56, 10, 70, 78, 56], "output": [78, 70, 56, 10]}, {"input": [24, 71, 71, 16], "output": [71, 24, 16]}], "ood": [], "noise": [{"input": [42, 17, 32, 55, 36, 42, 44, 95], "output": [55, 55, 51, 42, 36, 32, 18]}, {"input": [40, 64, 12, 40, 63], "output": [18, 63, 27, 12]}, {"input": [85, 58, 71, 58, 96, 58, 40, 24], "output": [96, 85, 71, 58, 41, 86]}, {"input": [20, 33, 95, 28, 20, 83], "output": [95, 83, 28, 28, 20]}, {"input": [0, 6, 86, 86, 0, 79, 68], "output": [86, 59, 51, 6, 0]}]}, "test": [{"input": [9, 99, 20, 74, 16, 26, 58, 26], "output": [99, 74, 58, 26, 20, 16, 9]}, {"input": [58, 45, 75, 23, 99, 51, 58, 23, 24], "output": [99, 75, 58, 51, 45, 24, 23]}, {"input": [55, 33, 85, 80, 85, 33], "output": [85, 80, 55, 33]}, {"input": [65, 10, 41, 50, 50, 41, 54, 77], "output": [77, 65, 54, 50, 41, 10]}, {"input": [14, 61, 11, 72, 62, 72, 36, 18, 18], "output": [72, 62, 61, 36, 18, 14, 11]}, {"input": [3, 95, 95, 98, 95, 47, 46], "output": [98, 95, 47, 46, 3]}, {"input": [98, 87, 97, 48, 78, 9, 6, 87], "output": [98, 97, 87, 78, 48, 9, 6]}, {"input": [88, 88, 48, 53, 88, 45], "output": [88, 53, 48, 45]}, {"input": [96, 6, 96, 97, 28, 16, 6, 80], "output": [97, 96, 80, 28, 16, 6]}, {"input": [18, 59, 80, 80, 66, 4, 85, 85], "output": [85, 80, 66, 59, 18, 4]}]}
{"id": "c219", "function": "def c219(x):\n    # keep only every other element\n    return x[::2]\n\n", "train": {"normal": [{"input": [2, 69, 67, 26, 12, 98, 37], "output": [2, 67, 12, 37]}, {"input": [81, 36, 34, 39, 45], "output": [81, 34, 45]}, {"input": [22, 99, 67, 34, 82, 3, 13, 65], "output": [22, 67, 82, 13]}, {"input": [63, 91, 5, 50, 65, 74, 27, 54, 5], "output": [63, 5, 65, 27, 5]}, {"input": [9, 22, 71, 8, 98], "output": [9, 71, 98]}, {"input": [77, 73, 32, 75, 25, 67], "output": [77, 32, 25]}, {"input": [40, 43, 71, 63], "output": [40, 71]}, {"input": [84, 94, 88, 6, 35, 62, 64, 25, 28], "output": [84, 88, 35, 64, 28]}, {"input": [38, 45, 43, 15], "output": [38, 43]}, {"input": [21, 97, 50, 18, 28, 44], "output": [21, 50, 28]}], "ood": [], "noise": [{"input": [32, 23, 75, 58, 98, 81, 38, 95], "output": [94, 45, 98, 38]}, {"input": [66, 8, 2, 97], "output": [57, 2]}, {"input": [12, 43, 79, 24, 92], "output": [17, 86, 92]}, {"input": [97, 77, 69, 90, 61, 89, 16, 36], "output": [63, 34, 61, 16]}, {"input": [0, 10, 87, 71], "output": [26, 87]}]}, "test": [{"input": [76, 14, 35, 94, 52], "output": [76, 35, 52]}, {"input": [37, 3, 11, 6, 98, 63, 75], "output": [37, 11, 98, 75]}, {"input": [31, 51, 9, 55, 92, 51], "output": [31, 9, 92]}, {"input": [62, 85, 21, 36], "output": [62, 21]}, {"input": [14, 26, 83, 93], "output": [14, 83]}, {"input": [75, 40, 18, 86, 46, 71, 4], "output": [75, 18, 46, 4]}, {"input": [22, 10, 76, 11, 73, 58], "output": [22, 76, 73]}, {"input": [54, 3, 54, 5], "output": [54, 54]}, {"input": [7, 80, 28, 73, 35], "output": [7, 28, 35]}, {"input": [95, 59, 11, 72, 40, 16, 36, 82], "output": [95, 11, 40, 36]}]}
{"id": "c075", "function": "def c075(x):\n    # remove even index\n    return x[1::2]\n\n", "train": {"normal": [{"input": [31, 83, 54, 81, 71], "output": [83, 81]}, {"input": [74, 25, 6, 89, 81, 81], "output": [25, 89, 81]}, {"input": [86, 73, 39, 3, 78, 18, 6, 26, 36], "output": [73, 3, 18, 26]}, {"input": [79, 97, 77, 52], "output": [97, 52]}, {"input": [69, 81, 99, 29, 20, 23, 87], "output": [81, 29, 23]}, {"input": [14, 96, 71, 86, 56, 11, 7], "output": [96, 86, 11]}, {"input": [97, 96, 81, 89], "output": [96, 89]}, {"input": [39, 32, 68, 0, 33, 75], "output": [32, 0, 75]}, {"input": [34, 57, 38, 47], "output": [57, 47]}, {"input": [0, 84, 80, 46, 87, 94, 77, 82], "output": [84, 46, 94, 82]}], "ood": [], "noise": [{"input": [63, 61, 47, 27, 56, 87, 18], "output": [61, 40, 87]}, {"input": [30, 80, 28, 82, 40, 12], "output": [81, 82, 17]}, {"input": [37, 64, 3, 28, 96, 11, 8, 19, 85], "output": [44, 28, 11, 61]}, {"input": [85, 2, 31, 98, 35], "output": [2, 26]}, {"input": [13, 30, 12, 44, 92, 43, 87], "output": [44, 44, 34]}]}, "test": [{"input": [47, 84, 91, 53, 64, 16], "output": [84, 53, 16]}, {"input": [41, 5, 59, 30, 34], "output": [5, 30]}, {"input": [68, 44, 6, 10, 20], "output": [44, 10]}, {"input": [3, 95, 81, 74], "output": [95, 74]}, {"input": [72, 27, 22, 54, 22, 16, 56], "output": [27, 54, 16]}, {"input": [26, 11, 91, 28, 44], "output": [11, 28]}, {"input": [25, 67, 14, 37, 14, 68], "output": [67, 37, 68]}, {"input": [70, 78, 32, 19, 44, 58, 20, 35], "output": [78, 19, 58, 35]}, {"input": [49, 94, 81, 85, 46, 2, 4, 56, 3], "output": [94, 85, 2, 56]}, {"input": [77, 16, 67, 44, 30], "output": [16, 44]}]}
{"id": "c177", "function": "def c177(x):\n    # interleave the input and the reversed input\n    return [i for pair in zip(x, x[::-1]) for i in pair]\n\n", "train": {"normal": [{"input": [58, 23, 6, 43, 93, 7, 1], "output": [58, 1, 23, 7, 6, 93, 43, 43, 93, 6, 7, 23, 1, 58]}, {"input": [76, 66, 60], "output": [76, 60, 66, 66, 60, 76]}, {"input": [92, 4, 96, 42, 61], "output": [92, 61, 4, 42, 96, 96, 42, 4, 61, 92]}, {"input": [45, 92, 75, 46, 7, 95, 32], "output": [45, 32, 92, 95, 75, 7, 46, 46, 7, 75, 95, 92, 32, 45]}, {"input": [10, 3, 68, 78, 17, 35, 35], "output": [10, 35, 3, 35, 68, 17, 78, 78, 17, 68, 35, 3, 35, 10]}, {"input": [41, 21, 13, 22, 81, 81], "output": [41, 81, 21, 81, 13, 22, 22, 13, 81, 21, 81, 41]}, {"input": [34, 54, 56], "output": [34, 56, 54, 54, 56, 34]}, {"input": [86, 74, 2, 75, 74], "output": [86, 74, 74, 75, 2, 2, 75, 74, 74, 86]}, {"input": [89, 50, 38, 76, 36, 62, 2], "output": [89, 2, 50, 62, 38, 36, 76, 76, 36, 38, 62, 50, 2, 89]}, {"input": [52, 23, 42, 65, 99, 15], "output": [52, 15, 23, 99, 42, 65, 65, 42, 99, 23, 15, 52]}], "ood": [], "noise": [{"input": [86, 81, 92, 45, 59, 15, 99], "output": [95, 99, 81, 15, 92, 96, 45, 45, 59, 92, 15, 81, 94, 86]}, {"input": [73, 72, 12], "output": [58, 12, 65, 44, 12, 73]}, {"input": [71, 69, 80], "output": [79, 80, 69, 69, 80, 69]}, {"input": [42, 20, 7, 67, 37, 18], "output": [42, 38, 20, 37, 7, 67, 67, 7, 37, 20, 18, 42]}, {"input": [89, 8, 57, 77, 33], "output": [89, 33, 8, 71, 38, 57, 77, 8, 33, 89]}]}, "test": [{"input": [75, 4, 50, 42], "output": [75, 42, 4, 50, 50, 4, 42, 75]}, {"input": [9, 36, 88, 5, 81, 5], "output": [9, 5, 36, 81, 88, 5, 5, 88, 81, 36, 5, 9]}, {"input": [82, 58, 97, 84], "output": [82, 84, 58, 97, 97, 58, 84, 82]}, {"input": [39, 68, 39, 90, 46], "output": [39, 46, 68, 90, 39, 39, 90, 68, 46, 39]}, {"input": [89, 84, 42, 56, 45], "output": [89, 45, 84, 56, 42, 42, 56, 84, 45, 89]}, {"input": [11, 46, 90, 53], "output": [11, 53, 46, 90, 90, 46, 53, 11]}, {"input": [61, 39, 82, 43, 43], "output": [61, 43, 39, 43, 82, 82, 43, 39, 43, 61]}, {"input": [73, 13, 91, 98], "output": [73, 98, 13, 91, 91, 13, 98, 73]}, {"input": [99, 55, 31, 22, 51, 69], "output": [99, 69, 55, 51, 31, 22, 22, 31, 51, 55, 69, 99]}, {"input": [7, 4, 83, 72, 67, 78, 39], "output": [7, 39, 4, 78, 83, 67, 72, 72, 67, 83, 78, 4, 39, 7]}]}
{"id": "c025", "function": "def c025(x):\n    # remove element 1\n    return x[:1] + x[2:]\n\n", "train": {"normal": [{"input": [24, 95, 59, 82, 28, 68, 54], "output": [24, 59, 82, 28, 68, 54]}, {"input": [35, 48, 45, 10], "output": [35, 45, 10]}, {"input": [21, 97, 11, 34, 36, 85], "output": [21, 11, 34, 36, 85]}, {"input": [97, 98, 8, 5, 81, 9], "output": [97, 8, 5, 81, 9]}, {"input": [32, 80, 30, 12], "output": [32, 30, 12]}, {"input": [1, 95, 38], "output": [1, 38]}, {"input": [68, 72, 83, 9, 16], "output": [68, 83, 9, 16]}, {"input": [28, 34, 54], "output": [28, 54]}, {"input": [1, 38, 42, 3, 56, 46, 42], "output": [1, 42, 3, 56, 46, 42]}, {"input": [61, 54, 89, 43, 25, 8], "output": [61, 89, 43, 25, 8]}], "ood": [], "noise": [{"input": [75, 1, 10, 69, 92, 77, 88], "output": [75, 16, 18, 92, 77, 82]}, {"input": [33, 33, 2, 53, 56], "output": [52, 2, 53, 56]}, {"input": [51, 88, 20, 17], "output": [26, 24, 17]}, {"input": [35, 98, 33], "output": [33, 33]}, {"input": [91, 17, 58, 4, 58, 8], "output": [91, 13, 4, 58, 8]}]}, "test": [{"input": [85, 74, 49, 83], "output": [85, 49, 83]}, {"input": [86, 13, 9, 67], "output": [86, 9, 67]}, {"input": [16, 57, 32, 24], "output": [16, 32, 24]}, {"input": [58, 65, 68, 27, 36, 8, 26], "output": [58, 68, 27, 36, 8, 26]}, {"input": [33, 42, 15, 87], "output": [33, 15, 87]}, {"input": [9, 75, 58, 16, 10], "output": [9, 58, 16, 10]}, {"input": [22, 8, 96, 70, 0, 63, 12], "output": [22, 96, 70, 0, 63, 12]}, {"input": [80, 99, 92, 5, 9, 50], "output": [80, 92, 5, 9, 50]}, {"input": [19, 77, 23, 93], "output": [19, 23, 93]}, {"input": [88, 29, 4, 49, 17], "output": [88, 4, 49, 17]}]}
{"id": "c125", "function": "def c125(x):\n    # keep only elements whose tens digit equals the tens digit of the first element\n    return [i for i in x if len(str(i)) > 1 and str(i)[-2] == str(x[0])[-2]]\n\n", "train": {"normal": [{"input": [70, 65, 72, 56, 70, 13, 96, 75, 67], "output": [70, 72, 70, 75]}, {"input": [23, 25, 48, 31, 10, 97, 35, 97], "output": [23, 25]}, {"input": [96, 102, 104, 1, 105, 78, 97, 39], "output": [96, 97]}, {"input": [80, 4, 19, 85, 11, 85, 92, 67, 88], "output": [80, 85, 85, 88]}, {"input": [94, 20, 61, 94, 83, 101, 98, 102, 71], "output": [94, 94, 98]}, {"input": [97, 40, 33, 83, 79, 106, 88, 101, 101], "output": [97]}, {"input": [93, 97, 34, 74, 31, 84, 68], "output": [93, 97]}, {"input": [87, 61, 95, 4, 45], "output": [87]}, {"input": [25, 27, 47, 84, 26, 29, 47, 1], "output": [25, 27, 26, 29]}, {"input": [31, 31, 12, 17, 78, 63, 37], "output": [31, 31, 37]}], "ood": [], "noise": [{"input": [15, 22, 17, 6, 86, 80], "output": [17, 17]}, {"input": [78, 85, 31, 19, 64, 47, 84], "output": [79]}, {"input": [23, 12, 23, 61, 7, 1, 28, 73, 31, 30, 32], "output": [23, 28, 26]}, {"input": [81, 83, 58, 84, 96, 41, 82, 81, 88, 98, 82], "output": [81, 83, 84, 82, 84, 87, 82]}, {"input": [54, 55, 46, 60, 27, 56, 57, 63, 96, 51], "output": [54, 56, 56, 57, 52]}]}, "test": [{"input": [39, 73, 89, 58, 48, 39, 42, 45, 45, 79], "output": [39, 39]}, {"input": [12, 21, 18, 15, 16, 19, 12, 6, 98], "output": [12, 18, 15, 16, 19, 12]}, {"input": [87, 67, 94, 12, 61, 87], "output": [87, 87]}, {"input": [97, 22, 98, 100, 100, 30, 27], "output": [97, 98]}, {"input": [55, 76, 41, 81, 68, 56, 63, 56], "output": [55, 56, 56]}, {"input": [37, 42, 45, 39, 16, 46, 57, 52, 40], "output": [37, 39]}, {"input": [66, 68, 69, 39, 29, 81, 89, 77, 67, 72], "output": [66, 68, 69, 67]}, {"input": [96, 75, 103, 105, 56, 97, 55, 13, 99, 103], "output": [96, 97, 99]}, {"input": [62, 69, 15, 67, 20, 68, 14, 86, 67, 62, 63], "output": [62, 69, 67, 68, 67, 62, 63]}, {"input": [93, 95, 52, 101, 35, 4, 73, 94], "output": [93, 95, 94]}]}
{"id": "c087", "function": "def c087(x):\n    # swap second and third element\n    x[1], x[2] = x[2], x[1]\n    return x\n\n", "train": {"normal": [{"input": [77, 23, 65, 55, 67, 80, 36], "output": [77, 65, 23, 55, 67, 80, 36]}, {"input": [19, 47, 72, 70, 36], "output": [19, 72, 47, 70, 36]}, {"input": [47, 91, 7, 39], "output": [47, 7, 91, 39]}, {"input": [21, 82, 64, 66, 51, 68], "output": [21, 64, 82, 66, 51, 68]}, {"input": [0, 43, 51, 33, 49, 84, 68], "output": [0, 51, 43, 33, 49, 84, 68]}, {"input": [65, 79, 23], "output": [65, 23, 79]}, {"input": [37, 44, 19, 71], "output": [37, 19, 44, 71]}, {"input": [91, 90, 59, 76], "output": [91, 59, 90, 76]}, {"input": [99, 15, 25, 25, 29, 94], "output": [99, 25, 15, 25, 29, 94]}, {"input": [69, 22, 54, 38], "output": [69, 54, 22, 38]}], "ood": [], "noise": [{"input": [40, 89, 98, 42], "output": [58, 98, 89, 42]}, {"input": [1, 78, 98, 20, 24, 85], "output": [1, 73, 26, 20, 59, 85]}, {"input": [45, 67, 47, 0, 59], "output": [45, 47, 0, 0, 59]}, {"input": [89, 74, 97], "output": [89, 80, 78]}, {"input": [92, 11, 88, 22, 5, 27, 54], "output": [92, 88, 11, 22, 5, 27, 11]}]}, "test": [{"input": [73, 79, 11, 3, 14, 9], "output": [73, 11, 79, 3, 14, 9]}, {"input": [26, 98, 85, 60, 4, 81], "output": [26, 85, 98, 60, 4, 81]}, {"input": [70, 8, 43, 28, 96, 86, 84], "output": [70, 43, 8, 28, 96, 86, 84]}, {"input": [40, 13, 32, 69, 68, 24, 39], "output": [40, 32, 13, 69, 68, 24, 39]}, {"input": [62, 53, 7], "output": [62, 7, 53]}, {"input": [45, 80, 99, 12, 33], "output": [45, 99, 80, 12, 33]}, {"input": [57, 94, 48, 80], "output": [57, 48, 94, 80]}, {"input": [29, 78, 98, 17, 7, 70], "output": [29, 98, 78, 17, 7, 70]}, {"input": [11, 48, 50], "output": [11, 50, 48]}, {"input": [18, 46, 28, 45, 40, 59], "output": [18, 28, 46, 45, 40, 59]}]}
{"id": "c013", "function": "def c013(x):\n    # element 2 through 6\n    return x[2:6]\n\n", "train": {"normal": [{"input": [44, 58, 86, 17, 82, 28, 26], "output": [86, 17, 82, 28]}, {"input": [83, 26, 43, 97, 86, 91, 25, 74, 47], "output": [43, 97, 86, 91]}, {"input": [71, 49, 22, 56, 80, 22, 54], "output": [22, 56, 80, 22]}, {"input": [49, 83, 33, 99, 64, 80, 49, 20, 28], "output": [33, 99, 64, 80]}, {"input": [89, 57, 65, 0, 84, 77, 0], "output": [65, 0, 84, 77]}, {"input": [65, 93, 15, 18, 25, 39, 5, 92], "output": [15, 18, 25, 39]}, {"input": [68, 65, 99, 84, 99, 61], "output": [99, 84, 99, 61]}, {"input": [92, 72, 15, 34, 14, 31, 27, 51, 80], "output": [15, 34, 14, 31]}, {"input": [16, 19, 25, 27, 52, 89], "output": [25, 27, 52, 89]}, {"input": [28, 3, 29, 8, 9, 71, 31, 67], "output": [29, 8, 9, 71]}], "ood": [], "noise": [{"input": [36, 67, 12, 60, 89, 50, 53], "output": [70, 60, 89, 62]}, {"input": [45, 44, 43, 89, 20, 42], "output": [40, 20, 20, 42]}, {"input": [94, 68, 24, 29, 54, 71], "output": [35, 29, 54, 33]}, {"input": [51, 85, 17, 82, 12, 50, 82, 59], "output": [70, 82, 12, 50]}, {"input": [9, 71, 40, 90, 23, 64, 1, 89, 81], "output": [40, 90, 35, 57]}]}, "test": [{"input": [17, 51, 59, 24, 5, 44], "output": [59, 24, 5, 44]}, {"input": [49, 49, 85, 72, 37, 31, 58, 75, 95], "output": [85, 72, 37, 31]}, {"input": [27, 35, 66, 80, 82, 37, 29, 24], "output": [66, 80, 82, 37]}, {"input": [84, 15, 57, 70, 67], "output": [57, 70, 67]}, {"input": [28, 69, 82, 25, 79, 25, 99, 70], "output": [82, 25, 79, 25]}, {"input": [44, 30, 7, 26, 56, 2], "output": [7, 26, 56, 2]}, {"input": [85, 46, 34, 46, 24], "output": [34, 46, 24]}, {"input": [7, 10, 98, 78, 85, 41, 52, 26], "output": [98, 78, 85, 41]}, {"input": [77, 31, 98, 67, 61, 1], "output": [98, 67, 61, 1]}, {"input": [44, 36, 35, 14, 32, 1, 37, 32], "output": [35, 14, 32, 1]}]}
{"id": "c069", "function": "def c069(x):\n    # 9,3,4,0, input, 7,2,9,1\n    return [9,3,4,0] + x + [7,2,9,1]\n\n", "train": {"normal": [{"input": [99, 79, 71, 74], "output": [9, 3, 4, 0, 99, 79, 71, 74, 7, 2, 9, 1]}, {"input": [64, 12, 98], "output": [9, 3, 4, 0, 64, 12, 98, 7, 2, 9, 1]}, {"input": [15, 44, 85, 54, 12, 80], "output": [9, 3, 4, 0, 15, 44, 85, 54, 12, 80, 7, 2, 9, 1]}, {"input": [45, 18, 10, 30, 30], "output": [9, 3, 4, 0, 45, 18, 10, 30, 30, 7, 2, 9, 1]}, {"input": [12, 42, 69, 41, 42], "output": [9, 3, 4, 0, 12, 42, 69, 41, 42, 7, 2, 9, 1]}, {"input": [99, 92, 78, 2], "output": [9, 3, 4, 0, 99, 92, 78, 2, 7, 2, 9, 1]}, {"input": [21, 93, 75, 29], "output": [9, 3, 4, 0, 21, 93, 75, 29, 7, 2, 9, 1]}, {"input": [65, 20, 68], "output": [9, 3, 4, 0, 65, 20, 68, 7, 2, 9, 1]}, {"input": [16, 98, 84, 58], "output": [9, 3, 4, 0, 16, 98, 84, 58, 7, 2, 9, 1]}, {"input": [0, 84, 63, 52], "output": [9, 3, 4, 0, 0, 84, 63, 52, 7, 2, 9, 1]}], "ood": [], "noise": [{"input": [32, 18, 86, 97, 74], "output": [9, 73, 32, 0, 32, 18, 26, 0, 74, 7, 28, 9, 1]}, {"input": [45, 82, 2, 19, 9], "output": [9, 3, 4, 0, 19, 82, 2, 80, 41, 7, 9, 9, 1]}, {"input": [67, 98, 43, 66, 16, 87], "output": [9, 3, 93, 0, 39, 56, 43, 66, 16, 13, 7, 27, 9, 1]}, {"input": [81, 22, 99, 24, 22], "output": [9, 3, 4, 0, 81, 70, 99, 24, 22, 7, 2, 9, 73]}, {"input": [11, 40, 78], "output": [40, 3, 4, 0, 11, 40, 78, 7, 2, 9, 4]}]}, "test": [{"input": [9, 50, 16, 57, 33], "output": [9, 3, 4, 0, 9, 50, 16, 57, 33, 7, 2, 9, 1]}, {"input": [38, 17, 7, 67], "output": [9, 3, 4, 0, 38, 17, 7, 67, 7, 2, 9, 1]}, {"input": [48, 48, 32, 65], "output": [9, 3, 4, 0, 48, 48, 32, 65, 7, 2, 9, 1]}, {"input": [94, 67, 30], "output": [9, 3, 4, 0, 94, 67, 30, 7, 2, 9, 1]}, {"input": [64, 0, 78, 43, 8], "output": [9, 3, 4, 0, 64, 0, 78, 43, 8, 7, 2, 9, 1]}, {"input": [56, 76, 25, 96], "output": [9, 3, 4, 0, 56, 76, 25, 96, 7, 2, 9, 1]}, {"input": [41, 83, 97], "output": [9, 3, 4, 0, 41, 83, 97, 7, 2, 9, 1]}, {"input": [40, 13, 91, 35, 16, 0], "output": [9, 3, 4, 0, 40, 13, 91, 35, 16, 0, 7, 2, 9, 1]}, {"input": [49, 65, 64, 42, 69], "output": [9, 3, 4, 0, 49, 65, 64, 42, 69, 7, 2, 9, 1]}, {"input": [50, 35, 77, 63, 13, 91], "output": [9, 3, 4, 0, 50, 35, 77, 63, 13, 91, 7, 2, 9, 1]}]}
{"id": "c117", "function": "def c117(x):\n    # left rotate by 3\n    return x[3:] + x[:3]\n\n", "train": {"normal": [{"input": [97, 57, 68, 72, 32, 27], "output": [72, 32, 27, 97, 57, 68]}, {"input": [50, 30, 32], "output": [50, 30, 32]}, {"input": [42, 25, 69, 36, 65, 49], "output": [36, 65, 49, 42, 25, 69]}, {"input": [75, 12, 79, 41], "output": [41, 75, 12, 79]}, {"input": [95, 45, 70, 19], "output": [19, 95, 45, 70]}, {"input": [71, 89, 92, 10, 70], "output": [10, 70, 71, 89, 92]}, {"input": [83, 52, 86, 34], "output": [34, 83, 52, 86]}, {"input": [53, 53, 93, 40, 23], "output": [40, 23, 53, 53, 93]}, {"input": [27, 26, 47, 73, 9, 26], "output": [73, 9, 26, 27, 26, 47]}, {"input": [42, 8, 94, 13, 40], "output": [13, 40, 42, 8, 94]}], "ood": [], "noise": [{"input": [52, 24, 75, 61], "output": [45, 52, 24, 74]}, {"input": [96, 39, 25, 3], "output": [3, 96, 39, 53]}, {"input": [69, 4, 13], "output": [69, 4, 31]}, {"input": [23, 49, 86, 23], "output": [23, 23, 47, 25]}, {"input": [50, 10, 72, 35, 27], "output": [35, 27, 50, 10, 71]}]}, "test": [{"input": [58, 82, 57, 96], "output": [96, 58, 82, 57]}, {"input": [94, 39, 75, 28], "output": [28, 94, 39, 75]}, {"input": [62, 85, 93, 4, 91], "output": [4, 91, 62, 85, 93]}, {"input": [2, 12, 95, 99, 93], "output": [99, 93, 2, 12, 95]}, {"input": [98, 99, 60, 89], "output": [89, 98, 99, 60]}, {"input": [89, 74, 80, 1, 16, 86], "output": [1, 16, 86, 89, 74, 80]}, {"input": [90, 70, 49, 54, 37], "output": [54, 37, 90, 70, 49]}, {"input": [54, 69, 51, 2, 27], "output": [2, 27, 54, 69, 51]}, {"input": [68, 87, 49, 10, 53, 35], "output": [10, 53, 35, 68, 87, 49]}, {"input": [37, 70, 11], "output": [37, 70, 11]}]}
{"id": "c228", "function": "def c228(x):\n    # replace each element with the number of occurrences of that element so far\n    res = {}\n    out = []\n    for i in x:\n        if i not in res:\n            res[i] = 0\n        res[i] += 1\n        out.append(res[i])\n    return out\n\n", "train": {"normal": [{"input": [6, 6, 42, 62, 23, 9, 77, 6], "output": [1, 2, 1, 1, 1, 1, 1, 3]}, {"input": [73, 34, 10, 73, 10, 70], "output": [1, 1, 1, 2, 2, 1]}, {"input": [21, 20, 64, 65, 21, 20], "output": [1, 1, 1, 1, 2, 2]}, {"input": [43, 80, 56, 43, 43, 8], "output": [1, 1, 1, 2, 3, 1]}, {"input": [60, 45, 38, 9, 6, 38], "output": [1, 1, 1, 1, 1, 2]}, {"input": [74, 27, 27, 8, 91, 6], "output": [1, 1, 2, 1, 1, 1]}, {"input": [92, 92, 69, 54, 98, 92], "output": [1, 2, 1, 1, 1, 3]}, {"input": [8, 66, 16, 90, 96, 50, 68, 8, 67], "output": [1, 1, 1, 1, 1, 1, 1, 2, 1]}, {"input": [81, 81, 81, 24, 13], "output": [1, 2, 3, 1, 1]}, {"input": [49, 68, 92, 22, 93, 65, 93, 34, 80], "output": [1, 1, 1, 1, 1, 1, 2, 1, 1]}], "ood": [], "noise": [{"input": [88, 45, 10, 47, 65, 54, 10], "output": [1, 2, 1, 2, 1, 1, 2]}, {"input": [35, 35, 66, 13, 51], "output": [1, 2, 2, 1, 1]}, {"input": [85, 56, 55, 78, 0, 88, 22, 80, 80, 56], "output": [1, 1, 1, 1, 1, 1, 1, 1, 2, 1]}, {"input": [92, 7, 24, 69, 69, 91, 49, 3], "output": [1, 2, 1, 2, 1, 1, 1, 1]}, {"input": [39, 93, 96, 93, 86, 36, 39, 63], "output": [2, 2, 1, 2, 1, 1, 2, 1]}]}, "test": [{"input": [58, 27, 67, 57, 27, 76], "output": [1, 1, 1, 1, 2, 1]}, {"input": [23, 7, 36, 32, 78, 51, 26, 23, 80], "output": [1, 1, 1, 1, 1, 1, 1, 2, 1]}, {"input": [45, 97, 8, 8, 56, 81, 56, 10], "output": [1, 1, 1, 2, 1, 1, 2, 1]}, {"input": [51, 19, 15, 19, 19, 0], "output": [1, 1, 1, 2, 3, 1]}, {"input": [22, 49, 84, 22, 98, 2, 20, 16], "output": [1, 1, 1, 2, 1, 1, 1, 1]}, {"input": [23, 23, 97, 97, 68, 1], "output": [1, 2, 1, 2, 1, 1]}, {"input": [24, 91, 82, 37, 53, 82, 16, 90], "output": [1, 1, 1, 1, 1, 2, 1, 1]}, {"input": [94, 29, 12, 77, 23, 12, 40, 40], "output": [1, 1, 1, 1, 1, 2, 1, 2]}, {"input": [1, 1, 30, 98, 98, 27], "output": [1, 2, 1, 1, 2, 1]}, {"input": [58, 58, 92, 10, 80, 3, 3, 59], "output": [1, 2, 1, 1, 1, 1, 2, 1]}]}
{"id": "c197", "function": "def c197(x):\n    # replace each element with the number of occurrences of that element\n    res = {}\n    out = []\n    for i in x:\n        if i not in res:\n            res[i] = 0\n        res[i] += 1\n    for i in x:\n        out.append(res[i])\n    return out\n\n", "train": {"normal": [{"input": [79, 43, 79, 37, 79, 54], "output": [3, 1, 3, 1, 3, 1]}, {"input": [49, 24, 44, 56, 49, 69, 65], "output": [2, 1, 1, 1, 2, 1, 1]}, {"input": [60, 25, 3, 62, 39, 60, 39], "output": [2, 1, 1, 1, 2, 2, 2]}, {"input": [63, 14, 3, 14, 40, 3], "output": [1, 2, 2, 2, 1, 2]}, {"input": [87, 25, 31, 53, 46, 55, 53, 29], "output": [1, 1, 1, 2, 1, 1, 2, 1]}, {"input": [9, 71, 28, 71, 85], "output": [1, 2, 1, 2, 1]}, {"input": [87, 26, 76, 50, 87, 15, 67, 15], "output": [2, 1, 1, 1, 2, 2, 1, 2]}, {"input": [71, 80, 68, 50, 50, 69, 47, 61], "output": [1, 1, 1, 2, 2, 1, 1, 1]}, {"input": [60, 26, 51, 32, 53, 39, 39], "output": [1, 1, 1, 1, 1, 2, 2]}, {"input": [40, 60, 60, 84, 67, 40], "output": [2, 2, 2, 1, 1, 2]}], "ood": [], "noise": [{"input": [82, 89, 17, 45, 17], "output": [1, 2, 2, 1, 2]}, {"input": [41, 42, 87, 17, 94, 94], "output": [1, 1, 1, 1, 2, 1]}, {"input": [8, 61, 54, 8, 8, 30, 11], "output": [2, 1, 1, 3, 3, 1, 2]}, {"input": [97, 2, 27, 49, 33, 72, 4, 73, 73], "output": [1, 1, 2, 2, 1, 2, 1, 2, 2]}, {"input": [88, 84, 31, 82, 70, 57, 88], "output": [2, 1, 2, 1, 1, 2, 2]}]}, "test": [{"input": [33, 76, 18, 60, 29, 33], "output": [2, 1, 1, 1, 1, 2]}, {"input": [10, 56, 54, 9, 18, 44, 44, 37], "output": [1, 1, 1, 1, 1, 2, 2, 1]}, {"input": [0, 53, 90, 91, 19, 84, 26, 0, 17], "output": [2, 1, 1, 1, 1, 1, 1, 2, 1]}, {"input": [98, 82, 48, 98, 93, 22, 82, 8], "output": [2, 2, 1, 2, 1, 1, 2, 1]}, {"input": [63, 32, 63, 58, 65, 65], "output": [2, 1, 2, 1, 2, 2]}, {"input": [11, 98, 11, 67, 98], "output": [2, 2, 2, 1, 2]}, {"input": [48, 56, 38, 69, 72, 10, 49, 48, 1], "output": [2, 1, 1, 1, 1, 1, 1, 2, 1]}, {"input": [0, 22, 68, 17, 8, 90, 50, 90, 11], "output": [1, 1, 1, 1, 1, 2, 1, 2, 1]}, {"input": [14, 70, 68, 70, 42, 70], "output": [1, 3, 1, 3, 1, 3]}, {"input": [28, 13, 23, 53, 95, 95, 13, 83, 13], "output": [1, 3, 1, 1, 2, 2, 3, 1, 3]}]}
{"id": "c065", "function": "def c065(x):\n    # prepend 9 and append 7\n    return [9] + x + [7]\n\n", "train": {"normal": [{"input": [6, 38, 79, 36, 31, 58], "output": [9, 6, 38, 79, 36, 31, 58, 7]}, {"input": [66, 92, 35, 11, 52], "output": [9, 66, 92, 35, 11, 52, 7]}, {"input": [54, 2, 85], "output": [9, 54, 2, 85, 7]}, {"input": [80, 93, 5, 54, 83, 89], "output": [9, 80, 93, 5, 54, 83, 89, 7]}, {"input": [76, 44, 18, 36, 4, 26, 19], "output": [9, 76, 44, 18, 36, 4, 26, 19, 7]}, {"input": [10, 53, 34, 77], "output": [9, 10, 53, 34, 77, 7]}, {"input": [43, 66, 68], "output": [9, 43, 66, 68, 7]}, {"input": [23, 37, 43, 91, 37, 86], "output": [9, 23, 37, 43, 91, 37, 86, 7]}, {"input": [33, 44, 10, 50, 79], "output": [9, 33, 44, 10, 50, 79, 7]}, {"input": [75, 13, 86, 19], "output": [9, 75, 13, 86, 19, 7]}], "ood": [], "noise": [{"input": [16, 99, 38, 9, 93, 82, 7], "output": [9, 16, 99, 38, 79, 93, 82, 7, 7]}, {"input": [13, 13, 89, 46, 62], "output": [57, 13, 13, 89, 46, 62, 7]}, {"input": [78, 85, 32, 40, 24, 55, 2], "output": [9, 78, 85, 34, 60, 70, 55, 15, 7]}, {"input": [13, 91, 51, 49, 9, 7], "output": [9, 13, 30, 51, 49, 9, 7, 36]}, {"input": [40, 67, 48], "output": [53, 40, 67, 48, 7]}]}, "test": [{"input": [90, 12, 72, 21, 35], "output": [9, 90, 12, 72, 21, 35, 7]}, {"input": [87, 6, 35, 41, 29], "output": [9, 87, 6, 35, 41, 29, 7]}, {"input": [73, 3, 50, 89, 10, 55], "output": [9, 73, 3, 50, 89, 10, 55, 7]}, {"input": [60, 3, 92, 80, 27, 85, 19], "output": [9, 60, 3, 92, 80, 27, 85, 19, 7]}, {"input": [86, 54, 60], "output": [9, 86, 54, 60, 7]}, {"input": [33, 84, 32, 38], "output": [9, 33, 84, 32, 38, 7]}, {"input": [58, 9, 29, 91, 67], "output": [9, 58, 9, 29, 91, 67, 7]}, {"input": [26, 22, 15, 75], "output": [9, 26, 22, 15, 75, 7]}, {"input": [98, 34, 9], "output": [9, 98, 34, 9, 7]}, {"input": [92, 3, 53, 6], "output": [9, 92, 3, 53, 6, 7]}]}
{"id": "c156", "function": "def c156(x):\n    # reverse the input and add each element to its new index\n    x = x[::-1]\n    return [i+j for j, i in enumerate(x)]\n\n", "train": {"normal": [{"input": [63, 97, 42], "output": [42, 98, 65]}, {"input": [2, 14, 17, 64], "output": [64, 18, 16, 5]}, {"input": [38, 84, 94], "output": [94, 85, 40]}, {"input": [14, 1, 21, 30, 46], "output": [46, 31, 23, 4, 18]}, {"input": [72, 80, 14, 76, 76, 33], "output": [33, 77, 78, 17, 84, 77]}, {"input": [6, 7, 34], "output": [34, 8, 8]}, {"input": [71, 32, 99, 42], "output": [42, 100, 34, 74]}, {"input": [52, 54, 74, 22, 43], "output": [43, 23, 76, 57, 56]}, {"input": [66, 10, 94, 92, 73, 10], "output": [10, 74, 94, 97, 14, 71]}, {"input": [80, 61, 21, 56], "output": [56, 22, 63, 83]}], "ood": [], "noise": [{"input": [66, 19, 13], "output": [25, 55, 68]}, {"input": [17, 22, 26, 10, 15, 64, 52], "output": [22, 65, 52, 48, 30, 27, 23]}, {"input": [46, 32, 41, 43], "output": [43, 42, 34, 37]}, {"input": [67, 12, 82, 90, 9], "output": [9, 91, 75, 15, 55]}, {"input": [43, 22, 40, 7, 3, 4, 6], "output": [40, 5, 5, 10, 44, 27, 49]}]}, "test": [{"input": [60, 38, 67, 13, 87, 46], "output": [46, 88, 15, 70, 42, 65]}, {"input": [95, 36, 59, 71, 97, 47, 76], "output": [76, 48, 99, 74, 63, 41, 101]}, {"input": [5, 28, 78, 30, 90, 78, 86], "output": [86, 79, 92, 33, 82, 33, 11]}, {"input": [12, 39, 78, 62, 73, 42, 22], "output": [22, 43, 75, 65, 82, 44, 18]}, {"input": [47, 86, 31, 22, 21, 20, 24], "output": [24, 21, 23, 25, 35, 91, 53]}, {"input": [60, 79, 81, 60, 59, 56], "output": [56, 60, 62, 84, 83, 65]}, {"input": [47, 59, 50, 67], "output": [67, 51, 61, 50]}, {"input": [26, 43, 26, 46, 17, 80], "output": [80, 18, 48, 29, 47, 31]}, {"input": [13, 79, 22, 32], "output": [32, 23, 81, 16]}, {"input": [80, 62, 58, 34], "output": [34, 59, 64, 83]}]}
{"id": "c110", "function": "def c110(x):\n    # three largest elements in descending order\n    return sorted(x, reverse=True)[:3]\n\n", "train": {"normal": [{"input": [25, 67, 78, 51, 92, 6, 91], "output": [92, 91, 78]}, {"input": [67, 53, 58, 9], "output": [67, 58, 53]}, {"input": [79, 65, 55, 34, 3, 78, 8], "output": [79, 78, 65]}, {"input": [32, 40, 39, 57, 48, 96], "output": [96, 57, 48]}, {"input": [95, 17, 59, 7, 89, 33], "output": [95, 89, 59]}, {"input": [94, 29, 52], "output": [94, 52, 29]}, {"input": [4, 56, 86, 47, 29, 43, 45], "output": [86, 56, 47]}, {"input": [99, 12, 23, 69, 85, 47, 99], "output": [99, 99, 85]}, {"input": [42, 22, 29, 19, 81, 97, 5], "output": [97, 81, 42]}, {"input": [9, 64, 2, 91], "output": [91, 64, 9]}], "ood": [], "noise": [{"input": [55, 54, 71, 85, 29], "output": [68, 71, 55]}, {"input": [1, 20, 65, 64, 93, 93, 22], "output": [65, 93, 65]}, {"input": [60, 19, 17, 71, 55, 81], "output": [81, 66, 63]}, {"input": [80, 81, 63, 94, 43, 4, 83], "output": [94, 90, 81]}, {"input": [25, 32, 36, 93, 9, 35, 79], "output": [93, 76, 36]}]}, "test": [{"input": [26, 84, 16], "output": [84, 26, 16]}, {"input": [46, 93, 35, 20, 94], "output": [94, 93, 46]}, {"input": [5, 68, 1, 43, 93], "output": [93, 68, 43]}, {"input": [65, 93, 72], "output": [93, 72, 65]}, {"input": [55, 72, 61], "output": [72, 61, 55]}, {"input": [28, 54, 18, 13, 29, 0], "output": [54, 29, 28]}, {"input": [1, 40, 64], "output": [64, 40, 1]}, {"input": [91, 3, 68, 54, 48, 60], "output": [91, 68, 60]}, {"input": [11, 33, 95, 26, 24, 74], "output": [95, 74, 33]}, {"input": [80, 5, 56, 49], "output": [80, 56, 49]}]}
{"id": "c233", "function": "def c233(x):\n    # number of occurrences of each unique element, in order of appearance\n    numbers = []\n    res = []\n    for i in x:\n        if i not in numbers:\n            numbers.append(i)\n            res.append(x.count(i))\n    return res\n\n", "train": {"normal": [{"input": [0, 8, 3, 9, 9, 0, 9, 8], "output": [2, 2, 1, 3]}, {"input": [0, 5, 2, 9, 10, 0, 1, 10], "output": [2, 1, 1, 1, 2, 1]}, {"input": [7, 9, 3, 8, 3, 3, 0, 9, 6], "output": [1, 2, 3, 1, 1, 1]}, {"input": [9, 9, 8, 5, 4, 4, 2], "output": [2, 1, 1, 2, 1]}, {"input": [8, 4, 4, 3, 1, 0, 8, 8, 3], "output": [3, 2, 2, 1, 1]}, {"input": [0, 3, 1, 3, 0, 2, 1, 10], "output": [2, 2, 2, 1, 1]}, {"input": [7, 6, 8, 2, 8], "output": [1, 1, 2, 1]}, {"input": [10, 4, 10, 4, 8, 4, 2], "output": [2, 3, 1, 1]}, {"input": [4, 6, 4, 7, 2], "output": [2, 1, 1, 1]}, {"input": [3, 6, 4, 8, 3, 6], "output": [2, 2, 1, 1]}], "ood": [], "noise": [{"input": [3, 3, 3, 4, 6], "output": [3, 2, 1]}, {"input": [9, 5, 1, 5, 5, 7], "output": [3, 3, 1, 2]}, {"input": [7, 5, 9, 10, 9, 9], "output": [1, 2, 3, 1]}, {"input": [0, 3, 3, 1, 10], "output": [1, 1, 1, 1]}, {"input": [4, 2, 8, 5, 10, 4, 8], "output": [1, 1, 2, 1, 2]}]}, "test": [{"input": [2, 9, 4, 6, 2, 0, 5], "output": [2, 1, 1, 1, 1, 1]}, {"input": [9, 8, 5, 7, 4, 5, 7], "output": [1, 1, 2, 2, 1]}, {"input": [4, 9, 9, 2, 9, 7], "output": [1, 3, 1, 1]}, {"input": [7, 9, 2, 8, 6, 2, 0, 5, 0], "output": [1, 1, 2, 1, 1, 2, 1]}, {"input": [8, 9, 8, 9, 2, 8], "output": [3, 2, 1]}, {"input": [10, 5, 2, 6, 5, 6, 10], "output": [2, 2, 1, 2]}, {"input": [3, 7, 8, 5, 4, 4, 4, 10], "output": [1, 1, 1, 1, 3, 1]}, {"input": [8, 7, 1, 7, 0, 0, 8, 10, 10], "output": [2, 2, 1, 2, 2]}, {"input": [3, 3, 8, 0, 3], "output": [3, 1, 1]}, {"input": [10, 4, 5, 9, 5, 4], "output": [1, 2, 2, 1]}]}
{"id": "c003", "function": "def c003(x):\n    # remove all but seventh element\n    return [x[6]]\n\n", "train": {"normal": [{"input": [85, 62, 68, 9, 98, 25, 21, 91, 0, 23], "output": [21]}, {"input": [58, 52, 38, 19, 11, 26, 12, 61], "output": [12]}, {"input": [75, 96, 3, 99, 13, 93, 18, 30, 93], "output": [18]}, {"input": [45, 36, 76, 21, 96, 91, 53, 27], "output": [53]}, {"input": [80, 12, 31, 77, 11, 24, 1, 7, 6], "output": [1]}, {"input": [35, 65, 26, 21, 94, 38, 57, 41, 84, 67], "output": [57]}, {"input": [51, 68, 51, 97, 88, 47, 88, 38, 97, 57], "output": [88]}, {"input": [78, 97, 27, 10, 95, 16, 63, 81], "output": [63]}, {"input": [25, 91, 15, 16, 65, 80, 84, 60, 15], "output": [84]}, {"input": [94, 58, 46, 63, 73, 66, 83, 60], "output": [83]}], "ood": [], "noise": [{"input": [40, 43, 87, 72, 34, 88, 88, 1, 26], "output": [89]}, {"input": [65, 6, 66, 15, 17, 51, 73, 18], "output": [74]}, {"input": [57, 30, 98, 40, 77, 20, 62, 55, 35], "output": [63]}, {"input": [3, 59, 63, 48, 35, 76, 41, 55], "output": [42]}, {"input": [69, 62, 76, 54, 77, 77, 98, 67, 69], "output": [99]}]}, "test": [{"input": [91, 24, 27, 56, 14, 48, 70, 92, 81, 35], "output": [70]}, {"input": [39, 81, 30, 10, 98, 75, 97, 41, 8], "output": [97]}, {"input": [77, 26, 26, 90, 6, 82, 67, 45, 96, 45], "output": [67]}, {"input": [96, 66, 21, 96, 12, 31, 18, 54], "output": [18]}, {"input": [97, 70, 59, 6, 57, 24, 61, 9, 34, 31], "output": [61]}, {"input": [58, 60, 41, 86, 82, 25, 93, 57, 36], "output": [93]}, {"input": [13, 40, 40, 46, 75, 21, 88, 42, 38], "output": [88]}, {"input": [76, 90, 0, 9, 48, 81, 38, 80, 4, 58], "output": [38]}, {"input": [42, 88, 20, 38, 2, 88, 32, 35, 75], "output": [32]}, {"input": [14, 74, 23, 86, 97, 99, 61, 8, 17], "output": [61]}]}
{"id": "c230", "function": "def c230(x):\n    # count by 2 from the smallest element to the largest element\n    return list(range(min(x), max(x)+1, 2))\n\n", "train": {"normal": [{"input": [39, 40, 22], "output": [22, 24, 26, 28, 30, 32, 34, 36, 38, 40]}, {"input": [61, 61, 77], "output": [61, 63, 65, 67, 69, 71, 73, 75, 77]}, {"input": [43, 42, 30], "output": [30, 32, 34, 36, 38, 40, 42]}, {"input": [60, 52, 59], "output": [52, 54, 56, 58, 60]}, {"input": [11, 15, 4], "output": [4, 6, 8, 10, 12, 14]}, {"input": [79, 84, 73], "output": [73, 75, 77, 79, 81, 83]}, {"input": [25, 9, 19], "output": [9, 11, 13, 15, 17, 19, 21, 23, 25]}, {"input": [54, 59, 56], "output": [54, 56, 58]}, {"input": [49, 45, 37, 52], "output": [37, 39, 41, 43, 45, 47, 49, 51]}, {"input": [69, 88, 71], "output": [69, 71, 73, 75, 77, 79, 81, 83, 85, 87]}], "ood": [], "noise": [{"input": [71, 85, 82, 87, 69], "output": [74, 71, 73, 79, 77, 79, 81, 83, 85, 87]}, {"input": [33, 16, 17], "output": [26, 32, 20, 22, 24, 26, 24, 24, 32]}, {"input": [56, 40, 49], "output": [41, 42, 44, 46, 48, 50, 52, 54, 44]}, {"input": [8, 3, 20, 3], "output": [3, 5, 13, 7, 11, 13, 15, 5, 19]}, {"input": [24, 32, 30, 31], "output": [24, 26, 28, 30, 24]}]}, "test": [{"input": [62, 61, 52, 49, 50], "output": [49, 51, 53, 55, 57, 59, 61]}, {"input": [95, 86, 93], "output": [86, 88, 90, 92, 94]}, {"input": [12, 8, 2], "output": [2, 4, 6, 8, 10, 12]}, {"input": [19, 29, 11], "output": [11, 13, 15, 17, 19, 21, 23, 25, 27, 29]}, {"input": [83, 71, 77], "output": [71, 73, 75, 77, 79, 81, 83]}, {"input": [38, 38, 54], "output": [38, 40, 42, 44, 46, 48, 50, 52, 54]}, {"input": [69, 54, 59, 64], "output": [54, 56, 58, 60, 62, 64, 66, 68]}, {"input": [19, 1, 2], "output": [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]}, {"input": [2, 6, 14], "output": [2, 4, 6, 8, 10, 12, 14]}, {"input": [24, 7, 13, 11], "output": [7, 9, 11, 13, 15, 17, 19, 21, 23]}]}
{"id": "c122", "function": "def c122(x):\n    # remove all but penultimate element\n    return [x[-2]]\n\n", "train": {"normal": [{"input": [92, 53, 6, 68, 18, 79, 88], "output": [79]}, {"input": [7, 44, 41, 69, 51, 80], "output": [51]}, {"input": [29, 42, 39, 99, 50, 84], "output": [50]}, {"input": [47, 97, 4, 55, 13, 6], "output": [13]}, {"input": [37, 15, 60, 70, 41, 56, 2], "output": [56]}, {"input": [49, 88, 41], "output": [88]}, {"input": [91, 25, 31, 61, 61, 94, 89], "output": [94]}, {"input": [93, 49, 86], "output": [49]}, {"input": [22, 35, 52, 55], "output": [52]}, {"input": [61, 61, 37, 71, 17, 16, 61], "output": [16]}], "ood": [], "noise": [{"input": [81, 20, 55], "output": [21]}, {"input": [13, 94, 78, 26], "output": [79]}, {"input": [2, 43, 50, 94, 39, 79], "output": [40]}, {"input": [54, 60, 14, 36, 5, 32], "output": [6]}, {"input": [26, 77, 90, 19, 60, 97, 5], "output": [98]}]}, "test": [{"input": [5, 12, 44, 0], "output": [44]}, {"input": [68, 26, 93, 45], "output": [93]}, {"input": [31, 17, 60, 98, 27, 90, 45], "output": [90]}, {"input": [0, 15, 15, 75, 98, 90], "output": [98]}, {"input": [57, 72, 55, 39, 6, 83, 47], "output": [83]}, {"input": [76, 98, 97, 80, 47, 37, 75], "output": [37]}, {"input": [63, 90, 54, 33], "output": [54]}, {"input": [67, 7, 94], "output": [7]}, {"input": [4, 22, 7, 69, 46], "output": [69]}, {"input": [52, 53, 5, 83, 0, 97], "output": [0]}]}
{"id": "c020", "function": "def c020(x):\n    # replace the first element with the last element\n    x[0] = x[-1]\n    return x\n\n", "train": {"normal": [{"input": [5, 64, 38, 7, 96, 70], "output": [70, 64, 38, 7, 96, 70]}, {"input": [93, 21, 21, 28], "output": [28, 21, 21, 28]}, {"input": [87, 67, 49, 62], "output": [62, 67, 49, 62]}, {"input": [57, 23, 46, 62, 4], "output": [4, 23, 46, 62, 4]}, {"input": [64, 81, 1, 11], "output": [11, 81, 1, 11]}, {"input": [73, 0, 22, 78, 93, 35], "output": [35, 0, 22, 78, 93, 35]}, {"input": [85, 3, 92, 53, 74, 46], "output": [46, 3, 92, 53, 74, 46]}, {"input": [6, 68, 76], "output": [76, 68, 76]}, {"input": [90, 2, 90, 79, 18, 13, 93], "output": [93, 2, 90, 79, 18, 13, 93]}, {"input": [81, 43, 72, 58, 32, 13, 56], "output": [56, 43, 72, 58, 32, 13, 56]}], "ood": [], "noise": [{"input": [99, 18, 25, 38, 91, 10], "output": [36, 18, 25, 38, 91, 10]}, {"input": [12, 18, 50, 86], "output": [27, 18, 50, 86]}, {"input": [60, 92, 19], "output": [19, 67, 19]}, {"input": [54, 61, 22, 64, 46], "output": [46, 61, 22, 26, 31]}, {"input": [38, 44, 30, 69, 65, 45], "output": [45, 44, 30, 51, 65, 45]}]}, "test": [{"input": [45, 13, 8, 34, 59], "output": [59, 13, 8, 34, 59]}, {"input": [32, 29, 18, 76], "output": [76, 29, 18, 76]}, {"input": [93, 58, 79], "output": [79, 58, 79]}, {"input": [97, 45, 59], "output": [59, 45, 59]}, {"input": [69, 60, 92, 59, 0], "output": [0, 60, 92, 59, 0]}, {"input": [96, 36, 24, 50, 67, 21, 45], "output": [45, 36, 24, 50, 67, 21, 45]}, {"input": [85, 83, 51], "output": [51, 83, 51]}, {"input": [80, 99, 21], "output": [21, 99, 21]}, {"input": [49, 90, 53, 78, 41], "output": [41, 90, 53, 78, 41]}, {"input": [66, 43, 65, 7, 75, 34], "output": [34, 43, 65, 7, 75, 34]}]}
{"id": "c235", "function": "def c235(x):\n    # count up and down between elements\n    res = []\n    for i in range(len(x)-1):\n        if x[i] < x[i+1]:\n            res += list(range(x[i], x[i+1]+1))\n        else:\n            res += list(range(x[i], x[i+1]-1, -1))\n    return res\n\n", "train": {"normal": [{"input": [66, 66, 64], "output": [66, 66, 65, 64]}, {"input": [22, 23, 20], "output": [22, 23, 23, 22, 21, 20]}, {"input": [9, 13, 14], "output": [9, 10, 11, 12, 13, 13, 14]}, {"input": [48, 45, 48], "output": [48, 47, 46, 45, 45, 46, 47, 48]}, {"input": [57, 56, 60], "output": [57, 56, 56, 57, 58, 59, 60]}, {"input": [65, 67, 70], "output": [65, 66, 67, 67, 68, 69, 70]}, {"input": [95, 90, 91], "output": [95, 94, 93, 92, 91, 90, 90, 91]}, {"input": [32, 35, 34], "output": [32, 33, 34, 35, 35, 34]}, {"input": [41, 43, 44], "output": [41, 42, 43, 43, 44]}, {"input": [66, 65, 66], "output": [66, 65, 65, 66]}], "ood": [], "noise": [{"input": [62, 61, 57], "output": [62, 59, 61, 60, 62, 58, 57]}, {"input": [87, 83, 88], "output": [87, 86, 85, 88, 83, 83, 84, 87, 86, 87, 88]}, {"input": [5, 0, 5], "output": [5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 4]}, {"input": [85, 82, 80], "output": [85, 80, 83, 82, 82, 80, 83]}, {"input": [81, 77, 80], "output": [81, 80, 79, 78, 77, 77, 77, 79, 80]}]}, "test": [{"input": [21, 21, 21], "output": [21, 21]}, {"input": [74, 76, 74], "output": [74, 75, 76, 76, 75, 74]}, {"input": [90, 94, 90, 92, 89], "output": [90, 91, 92, 93, 94, 94, 93, 92, 91, 90, 90, 91, 92, 92, 91, 90, 89]}, {"input": [60, 59, 62], "output": [60, 59, 59, 60, 61, 62]}, {"input": [42, 37, 41], "output": [42, 41, 40, 39, 38, 37, 37, 38, 39, 40, 41]}, {"input": [90, 93, 95], "output": [90, 91, 92, 93, 93, 94, 95]}, {"input": [52, 56, 54, 54], "output": [52, 53, 54, 55, 56, 56, 55, 54, 54]}, {"input": [58, 61, 60], "output": [58, 59, 60, 61, 61, 60]}, {"input": [64, 59, 64], "output": [64, 63, 62, 61, 60, 59, 59, 60, 61, 62, 63, 64]}, {"input": [87, 88, 89], "output": [87, 88, 88, 89]}]}
{"id": "c157", "function": "def c157(x):\n    # each element followed by 0 if even, 1 if odd\n    res = []\n    for i in x:\n        res.append(i)\n        res.append(i % 2)\n    return res\n\n", "train": {"normal": [{"input": [41, 42, 56, 95, 3], "output": [41, 1, 42, 0, 56, 0, 95, 1, 3, 1]}, {"input": [47, 17, 13, 21, 19, 22], "output": [47, 1, 17, 1, 13, 1, 21, 1, 19, 1, 22, 0]}, {"input": [27, 80, 22, 81], "output": [27, 1, 80, 0, 22, 0, 81, 1]}, {"input": [19, 71, 33, 32, 7, 62], "output": [19, 1, 71, 1, 33, 1, 32, 0, 7, 1, 62, 0]}, {"input": [78, 4, 43, 45, 36, 7], "output": [78, 0, 4, 0, 43, 1, 45, 1, 36, 0, 7, 1]}, {"input": [53, 29, 72, 84, 67], "output": [53, 1, 29, 1, 72, 0, 84, 0, 67, 1]}, {"input": [60, 9, 51, 96, 59, 29, 45], "output": [60, 0, 9, 1, 51, 1, 96, 0, 59, 1, 29, 1, 45, 1]}, {"input": [45, 17, 86, 73], "output": [45, 1, 17, 1, 86, 0, 73, 1]}, {"input": [91, 39, 77, 6, 60, 55], "output": [91, 1, 39, 1, 77, 1, 6, 0, 60, 0, 55, 1]}, {"input": [4, 11, 92], "output": [4, 0, 11, 1, 92, 0]}], "ood": [], "noise": [{"input": [33, 52, 34], "output": [33, 1, 33, 0, 7, 0]}, {"input": [47, 16, 97], "output": [47, 1, 16, 13, 50, 1]}, {"input": [57, 63, 76, 13, 50, 49], "output": [57, 37, 63, 1, 74, 0, 12, 1, 2, 0, 49, 24]}, {"input": [6, 92, 75, 29, 56, 99, 70], "output": [6, 7, 21, 0, 75, 1, 29, 1, 56, 76, 85, 1, 64, 0]}, {"input": [53, 88, 35], "output": [53, 76, 88, 86, 35, 22]}]}, "test": [{"input": [9, 27, 42, 10, 65, 44], "output": [9, 1, 27, 1, 42, 0, 10, 0, 65, 1, 44, 0]}, {"input": [6, 65, 91, 22, 18, 29, 0], "output": [6, 0, 65, 1, 91, 1, 22, 0, 18, 0, 29, 1, 0, 0]}, {"input": [0, 26, 60], "output": [0, 0, 26, 0, 60, 0]}, {"input": [61, 56, 20], "output": [61, 1, 56, 0, 20, 0]}, {"input": [33, 1, 90], "output": [33, 1, 1, 1, 90, 0]}, {"input": [37, 82, 51, 91], "output": [37, 1, 82, 0, 51, 1, 91, 1]}, {"input": [10, 61, 96, 81, 30], "output": [10, 0, 61, 1, 96, 0, 81, 1, 30, 0]}, {"input": [77, 26, 75, 93, 28], "output": [77, 1, 26, 0, 75, 1, 93, 1, 28, 0]}, {"input": [2, 85, 83, 74, 34], "output": [2, 0, 85, 1, 83, 1, 74, 0, 34, 0]}, {"input": [3, 66, 65, 97, 41, 17], "output": [3, 1, 66, 0, 65, 1, 97, 1, 41, 1, 17, 1]}]}
{"id": "c185", "function": "def c185(x):\n    # replace the sublist between the first and last with its sum\n    return x[:1] + [sum(x[1:-1])] + x[-1:]\n\n", "train": {"normal": [{"input": [15, 13, 3, 17, 4, 20, 9], "output": [15, 57, 9]}, {"input": [10, 0, 17, 17, 16, 13], "output": [10, 50, 13]}, {"input": [2, 16, 5], "output": [2, 16, 5]}, {"input": [6, 18, 2, 15], "output": [6, 20, 15]}, {"input": [3, 0, 3, 12], "output": [3, 3, 12]}, {"input": [13, 8, 11, 16], "output": [13, 19, 16]}, {"input": [18, 18, 2, 19, 8], "output": [18, 39, 8]}, {"input": [6, 4, 9, 5], "output": [6, 13, 5]}, {"input": [5, 17, 12, 7, 20, 11], "output": [5, 56, 11]}, {"input": [7, 1, 19, 20], "output": [7, 20, 20]}], "ood": [], "noise": [{"input": [13, 17, 2, 18, 1, 9], "output": [13, 38, 14]}, {"input": [6, 10, 13, 10, 1], "output": [6, 25, 21]}, {"input": [3, 16, 14, 2, 20], "output": [3, 5, 20]}, {"input": [1, 8, 14, 0, 19], "output": [12, 18, 19]}, {"input": [18, 5, 0, 5, 8, 17], "output": [18, 19, 18]}]}, "test": [{"input": [12, 15, 4, 15, 6, 8, 12], "output": [12, 48, 12]}, {"input": [4, 20, 9, 5, 18, 14, 17], "output": [4, 66, 17]}, {"input": [16, 18, 8, 18, 10, 4], "output": [16, 54, 4]}, {"input": [7, 17, 0, 19, 7, 17, 16], "output": [7, 60, 16]}, {"input": [16, 5, 18, 12, 9, 18, 7], "output": [16, 62, 7]}, {"input": [1, 9, 5, 2, 1, 19], "output": [1, 17, 19]}, {"input": [4, 18, 15, 15, 1, 16], "output": [4, 49, 16]}, {"input": [8, 0, 14, 13, 19, 5, 20], "output": [8, 51, 20]}, {"input": [10, 12, 15, 13, 9, 9, 9], "output": [10, 58, 9]}, {"input": [19, 6, 18, 4, 15, 9, 19], "output": [19, 52, 19]}]}
{"id": "c213", "function": "def c213(x):\n    # three smallest elements in ascending order\n    return sorted(x)[:3]\n\n", "train": {"normal": [{"input": [63, 57, 21, 39, 54], "output": [21, 39, 54]}, {"input": [4, 13, 14, 39, 47], "output": [4, 13, 14]}, {"input": [59, 42, 44, 74], "output": [42, 44, 59]}, {"input": [22, 48, 28, 80, 93, 70], "output": [22, 28, 48]}, {"input": [64, 89, 25, 66, 95, 52], "output": [25, 52, 64]}, {"input": [99, 11, 86, 51, 85], "output": [11, 51, 85]}, {"input": [8, 55, 39], "output": [8, 39, 55]}, {"input": [43, 86, 38], "output": [38, 43, 86]}, {"input": [22, 93, 92, 97, 55, 39], "output": [22, 39, 55]}, {"input": [4, 15, 14, 65], "output": [4, 14, 15]}], "ood": [], "noise": [{"input": [38, 82, 78, 47, 80], "output": [57, 56, 78]}, {"input": [17, 10, 34, 40, 27, 34], "output": [10, 18, 15]}, {"input": [15, 63, 71], "output": [38, 71, 71]}, {"input": [71, 56, 11, 24], "output": [11, 29, 39]}, {"input": [59, 52, 87, 46, 87, 21, 30], "output": [21, 30, 22]}]}, "test": [{"input": [89, 92, 58, 64, 69, 3, 83], "output": [3, 58, 64]}, {"input": [49, 11, 74], "output": [11, 49, 74]}, {"input": [86, 10, 81, 9, 90, 7, 67], "output": [7, 9, 10]}, {"input": [42, 13, 42], "output": [13, 42, 42]}, {"input": [1, 78, 14, 34], "output": [1, 14, 34]}, {"input": [91, 3, 77, 4, 56, 30], "output": [3, 4, 30]}, {"input": [55, 21, 86, 95, 6], "output": [6, 21, 55]}, {"input": [63, 26, 11], "output": [11, 26, 63]}, {"input": [47, 9, 39, 27, 85], "output": [9, 27, 39]}, {"input": [84, 37, 80, 61, 9, 23, 12], "output": [9, 12, 23]}]}
{"id": "c184", "function": "def c184(x):\n    # keep only odd elements with an even index\n    return [i for i in x if i % 2 == 1 and x.index(i) % 2 == 0]\n\n", "train": {"normal": [{"input": [11, 2, 63, 32, 13, 98, 13, 37, 31, 36], "output": [11, 63, 13, 13, 31]}, {"input": [56, 81, 80, 35, 68, 82, 77, 49], "output": [77]}, {"input": [7, 49, 28, 53, 80, 57, 40, 4], "output": [7]}, {"input": [80, 7, 88, 77, 47, 18, 57], "output": [47, 57]}, {"input": [3, 55, 61, 83, 80, 27, 18], "output": [3, 61]}, {"input": [22, 39, 92, 54, 81, 40, 78, 74, 37, 86], "output": [81, 37]}, {"input": [99, 40, 5, 66, 72, 57, 53, 71], "output": [99, 5, 53]}, {"input": [99, 28, 41, 20, 41, 19, 60, 14], "output": [99, 41, 41]}, {"input": [45, 4, 18, 72, 80, 63, 85, 6], "output": [45, 85]}, {"input": [55, 15, 17, 79, 47, 75, 40], "output": [55, 17, 47]}], "ood": [], "noise": [{"input": [55, 24, 82, 53, 69, 25, 96], "output": [55, 65]}, {"input": [90, 3, 20, 39, 65, 63, 96], "output": [66]}, {"input": [73, 54, 37, 35, 49, 51, 27], "output": [73, 73, 68, 27]}, {"input": [79, 30, 87, 42, 92, 47, 18, 47, 82], "output": [84, 87]}, {"input": [94, 90, 70, 75, 98, 32, 78, 30, 33], "output": [34]}]}, "test": [{"input": [17, 84, 15, 28, 24, 41, 64, 97], "output": [17, 15]}, {"input": [65, 73, 58, 99, 62, 9, 2, 64], "output": [65]}, {"input": [17, 15, 92, 91, 45, 93, 41, 86, 3, 2], "output": [17, 45, 41, 3]}, {"input": [89, 33, 74, 92, 90, 96, 74, 83, 9, 67], "output": [89, 9]}, {"input": [14, 69, 82, 52, 96, 64, 24], "output": []}, {"input": [92, 6, 2, 65, 86, 30, 18, 7, 73], "output": [73]}, {"input": [70, 57, 99, 78, 54, 5, 64], "output": [99]}, {"input": [43, 62, 45, 31, 17, 83, 61, 23, 42, 34], "output": [43, 45, 17, 61]}, {"input": [82, 14, 75, 31, 55, 45, 62, 37, 18], "output": [75, 55]}, {"input": [21, 7, 29, 26, 13, 56, 30], "output": [21, 29, 13]}]}
{"id": "c155", "function": "def c155(x):\n    # multiply each element by its index\n    return [i*j for j, i in enumerate(x)]\n\n", "train": {"normal": [{"input": [78, 69, 68], "output": [0, 69, 136]}, {"input": [4, 9, 19, 86, 53], "output": [0, 9, 38, 258, 212]}, {"input": [11, 70, 19, 18], "output": [0, 70, 38, 54]}, {"input": [19, 28, 84, 6], "output": [0, 28, 168, 18]}, {"input": [99, 49, 26, 10], "output": [0, 49, 52, 30]}, {"input": [89, 49, 82], "output": [0, 49, 164]}, {"input": [20, 31, 11], "output": [0, 31, 22]}, {"input": [83, 5, 40], "output": [0, 5, 80]}, {"input": [9, 14, 32, 68], "output": [0, 14, 64, 204]}, {"input": [79, 51, 36, 80], "output": [0, 51, 72, 240]}], "ood": [], "noise": [{"input": [84, 1, 28, 28, 87], "output": [336, 1, 56, 84, 348]}, {"input": [41, 66, 93, 14, 30, 14], "output": [0, 39, 32, 42, 120, 70]}, {"input": [74, 33, 67, 52], "output": [0, 143, 134, 156]}, {"input": [86, 5, 43, 63], "output": [0, 23, 86, 145]}, {"input": [23, 15, 75, 89, 80, 78, 98], "output": [0, 15, 150, 267, 224, 390, 588]}]}, "test": [{"input": [51, 87, 81, 97, 30, 78, 47], "output": [0, 87, 162, 291, 120, 390, 282]}, {"input": [75, 34, 65, 37, 80], "output": [0, 34, 130, 111, 320]}, {"input": [94, 3, 54, 71, 31, 19, 70], "output": [0, 3, 108, 213, 124, 95, 420]}, {"input": [35, 12, 29, 68, 37, 26, 40], "output": [0, 12, 58, 204, 148, 130, 240]}, {"input": [19, 51, 21], "output": [0, 51, 42]}, {"input": [43, 69, 71], "output": [0, 69, 142]}, {"input": [90, 98, 87, 3, 29], "output": [0, 98, 174, 9, 116]}, {"input": [67, 96, 7], "output": [0, 96, 14]}, {"input": [57, 39, 93, 79, 11, 77, 55], "output": [0, 39, 186, 237, 44, 385, 330]}, {"input": [66, 75, 30, 16], "output": [0, 75, 60, 48]}]}
{"id": "c082", "function": "def c082(x):\n    # remove all but element 2\n    return [x[2]]\n\n", "train": {"normal": [{"input": [27, 78, 8], "output": [8]}, {"input": [22, 59, 15], "output": [15]}, {"input": [12, 96, 54, 92, 3, 47, 16], "output": [54]}, {"input": [48, 90, 36], "output": [36]}, {"input": [98, 62, 96, 24, 49], "output": [96]}, {"input": [58, 2, 18, 4, 15, 55, 3], "output": [18]}, {"input": [66, 12, 90, 11, 39], "output": [90]}, {"input": [93, 47, 98, 10, 95, 95, 14], "output": [98]}, {"input": [57, 40, 16, 3, 19, 0, 63], "output": [16]}, {"input": [69, 50, 42, 96], "output": [42]}], "ood": [], "noise": [{"input": [39, 42, 39, 99, 61, 90], "output": [40]}, {"input": [2, 16, 86, 91, 89], "output": [87]}, {"input": [55, 19, 4], "output": [5]}, {"input": [18, 52, 60, 6, 26, 7, 15], "output": [61]}, {"input": [3, 87, 93, 87], "output": [94]}]}, "test": [{"input": [25, 24, 61, 58, 73], "output": [61]}, {"input": [39, 98, 37], "output": [37]}, {"input": [24, 60, 76, 30, 32], "output": [76]}, {"input": [39, 62, 21, 78, 58, 87], "output": [21]}, {"input": [81, 73, 31], "output": [31]}, {"input": [57, 63, 3, 6, 93, 15, 46], "output": [3]}, {"input": [91, 1, 39, 22, 78], "output": [39]}, {"input": [3, 73, 19, 28, 48, 31, 44], "output": [19]}, {"input": [82, 50, 52, 67], "output": [52]}, {"input": [32, 63, 78, 5], "output": [78]}]}
{"id": "c231", "function": "def c231(x):\n    # the number of occurrences of each unique element in ascending order\n    res = {}\n    for i in x:\n        if i not in res:\n            res[i] = 0\n        res[i] += 1\n    return sorted(res.values())\n\n", "train": {"normal": [{"input": [3, 1, 3, 7, 1, 3, 8, 3, 5], "output": [1, 1, 1, 2, 4]}, {"input": [9, 5, 9, 4, 5, 1, 5, 5, 4, 5, 5], "output": [1, 2, 2, 6]}, {"input": [5, 7, 4, 10, 4, 5, 5, 6, 7], "output": [1, 1, 2, 2, 3]}, {"input": [0, 0, 9, 5, 0, 0, 0, 0], "output": [1, 1, 6]}, {"input": [4, 7, 3, 9, 9, 9, 5, 4, 5, 9, 4], "output": [1, 1, 2, 3, 4]}, {"input": [9, 1, 10, 9, 10, 10, 10, 8, 10], "output": [1, 1, 2, 5]}, {"input": [8, 6, 7, 10, 10, 2, 8, 7, 7], "output": [1, 1, 2, 2, 3]}, {"input": [8, 8, 5, 5, 8, 5, 8], "output": [3, 4]}, {"input": [6, 6, 10, 5, 5, 5, 6, 5, 10], "output": [2, 3, 4]}, {"input": [6, 5, 7, 9, 8, 5, 6, 7, 3, 5], "output": [1, 1, 1, 2, 2, 3]}], "ood": [], "noise": [{"input": [4, 7, 1, 7, 4, 4, 4, 1, 0], "output": [2, 3, 2, 4]}, {"input": [4, 1, 1, 4, 0, 4], "output": [2, 2, 2]}, {"input": [6, 5, 1, 5, 6, 1, 1, 3, 3, 3], "output": [2, 3, 2, 3]}, {"input": [2, 1, 4, 3, 4, 2, 4], "output": [1, 2, 2, 2]}, {"input": [8, 0, 5, 5, 8, 8, 5, 5, 5, 1, 4], "output": [1, 1, 2, 3, 5]}]}, "test": [{"input": [2, 2, 8, 7, 4, 7, 2, 4, 7, 8, 4], "output": [2, 3, 3, 3]}, {"input": [0, 4, 1, 4, 4, 4], "output": [1, 1, 4]}, {"input": [4, 8, 8, 8, 4, 4, 4, 3, 4], "output": [1, 3, 5]}, {"input": [3, 10, 7, 10, 10, 10, 3, 10], "output": [1, 2, 5]}, {"input": [9, 8, 8, 8, 8, 8, 9, 8], "output": [2, 6]}, {"input": [0, 8, 3, 8, 8, 8], "output": [1, 1, 4]}, {"input": [2, 9, 9, 9, 8, 9], "output": [1, 1, 4]}, {"input": [9, 9, 9, 7, 9, 10], "output": [1, 1, 4]}, {"input": [6, 2, 4, 5, 4, 4, 10, 2, 4], "output": [1, 1, 1, 2, 4]}, {"input": [3, 4, 4, 4, 3, 4, 3, 4], "output": [3, 5]}]}
{"id": "c099", "function": "def c099(x):\n    # remove the lower half of the list\n    median = sorted(x)[len(x)//2]\n    return [i for i in x if i >= median]\n\n", "train": {"normal": [{"input": [97, 22, 73, 90, 7, 72, 4, 44, 48], "output": [97, 73, 90, 72, 48]}, {"input": [32, 12, 29, 17, 48], "output": [32, 29, 48]}, {"input": [64, 25, 12, 10, 58, 80, 81, 91, 9], "output": [64, 58, 80, 81, 91]}, {"input": [72, 14, 15, 81, 29, 1, 86], "output": [72, 81, 29, 86]}, {"input": [22, 91, 39, 76, 25, 54], "output": [91, 76, 54]}, {"input": [1, 73, 64, 98, 23], "output": [73, 64, 98]}, {"input": [61, 92, 75, 45, 32, 60], "output": [61, 92, 75]}, {"input": [93, 36, 68, 88, 54, 21], "output": [93, 68, 88]}, {"input": [67, 53, 38, 24, 77, 38], "output": [67, 53, 77]}, {"input": [11, 10, 54, 45, 85, 46, 7], "output": [54, 45, 85, 46]}], "ood": [], "noise": [{"input": [51, 28, 52, 7, 24, 96, 21], "output": [51, 28, 87, 96]}, {"input": [49, 78, 90, 81, 29], "output": [84, 90, 88]}, {"input": [33, 9, 89, 81, 53, 70, 12, 24, 0], "output": [33, 72, 81, 53, 70]}, {"input": [37, 44, 42, 75, 10, 37, 42], "output": [70, 42, 75, 42]}, {"input": [43, 84, 50, 5, 30, 18], "output": [43, 75, 50]}]}, "test": [{"input": [52, 6, 46, 90, 32], "output": [52, 46, 90]}, {"input": [95, 61, 1, 49], "output": [95, 61]}, {"input": [3, 45, 27, 96, 16, 89], "output": [45, 96, 89]}, {"input": [94, 42, 3, 0, 40, 84, 68, 10], "output": [94, 42, 84, 68]}, {"input": [76, 0, 98, 92, 14, 16, 99, 14], "output": [76, 98, 92, 99]}, {"input": [8, 52, 35, 52, 17, 62], "output": [52, 52, 62]}, {"input": [95, 82, 76, 49, 9, 45, 23, 88], "output": [95, 82, 76, 88]}, {"input": [18, 59, 96, 76], "output": [96, 76]}, {"input": [17, 15, 58, 87, 32, 44, 5, 6, 59], "output": [58, 87, 32, 44, 59]}, {"input": [91, 45, 96, 96], "output": [96, 96]}]}
{"id": "c247", "function": "def c247(x):\n    # elements before the first 0\n    return x[:x.index(0)]\n\n", "train": {"normal": [{"input": [5, 0, 11, 0, 85, 0, 0, 66], "output": [5]}, {"input": [59, 11, 0, 0, 39, 0, 27], "output": [59, 11]}, {"input": [17, 29, 0, 0, 22, 95, 31], "output": [17, 29]}, {"input": [62, 44, 0, 0, 13, 72, 26, 99, 0], "output": [62, 44]}, {"input": [59, 0, 41, 0, 66, 81, 66], "output": [59]}, {"input": [53, 0, 44, 0, 2, 35], "output": [53]}, {"input": [69, 49, 53, 0, 96, 0], "output": [69, 49, 53]}, {"input": [70, 0, 0, 0, 36, 74, 69], "output": [70]}, {"input": [68, 90, 94, 0, 6, 0, 93], "output": [68, 90, 94]}, {"input": [27, 19, 74, 17, 0, 0, 42], "output": [27, 19, 74, 17]}], "ood": [], "noise": [{"input": [19, 58, 0, 0, 50], "output": [53, 58]}, {"input": [31, 0, 29, 86, 98, 3, 0, 0, 69], "output": [32]}, {"input": [43, 0, 63, 62, 0, 0, 0], "output": [44]}, {"input": [49, 27, 0, 0, 21], "output": [49, 33]}, {"input": [68, 0, 0, 0, 65, 91, 13, 2, 0, 5], "output": [69]}]}, "test": [{"input": [15, 0, 69, 0, 0, 79, 62, 0, 21], "output": [15]}, {"input": [36, 91, 0, 48, 88, 0, 0], "output": [36, 91]}, {"input": [70, 0, 0, 79, 87, 23], "output": [70]}, {"input": [56, 10, 35, 21, 0, 98, 0, 90, 0, 0], "output": [56, 10, 35, 21]}, {"input": [43, 0, 91, 59, 0, 69, 0], "output": [43]}, {"input": [79, 0, 0, 47, 51, 58, 61, 0, 0], "output": [79]}, {"input": [33, 0, 0, 63, 0, 55, 92], "output": [33]}, {"input": [27, 0, 15, 0, 0, 61, 79, 71], "output": [27]}, {"input": [27, 80, 45, 35, 0, 43, 0, 0, 5, 0], "output": [27, 80, 45, 35]}, {"input": [71, 0, 8, 84, 0, 0], "output": [71]}]}
{"id": "c008", "function": "def c008(x):\n    # the first 5 elements\n    return x[:5]\n\n", "train": {"normal": [{"input": [85, 38, 44, 56, 99, 21], "output": [85, 38, 44, 56, 99]}, {"input": [6, 71, 30, 81, 52, 70], "output": [6, 71, 30, 81, 52]}, {"input": [93, 2, 69, 68, 19, 54, 89], "output": [93, 2, 69, 68, 19]}, {"input": [10, 34, 16, 4, 78], "output": [10, 34, 16, 4, 78]}, {"input": [79, 55, 76, 90, 63, 89, 72, 59], "output": [79, 55, 76, 90, 63]}, {"input": [18, 86, 64, 33, 88, 80, 13, 57], "output": [18, 86, 64, 33, 88]}, {"input": [12, 19, 92, 16, 41], "output": [12, 19, 92, 16, 41]}, {"input": [14, 29, 76, 13, 61], "output": [14, 29, 76, 13, 61]}, {"input": [52, 63, 14, 91, 96, 83], "output": [52, 63, 14, 91, 96]}, {"input": [39, 41, 52, 44, 62, 7, 10, 85], "output": [39, 41, 52, 44, 62]}], "ood": [], "noise": [{"input": [29, 26, 9, 12, 66, 19], "output": [46, 26, 29, 12, 66]}, {"input": [75, 57, 32, 68, 35, 27, 13], "output": [38, 57, 32, 67, 35]}, {"input": [41, 99, 77, 54, 59, 80, 39], "output": [41, 99, 77, 58, 59]}, {"input": [13, 59, 15, 20, 35, 44, 28], "output": [56, 59, 15, 20, 35]}, {"input": [17, 0, 77, 8, 72], "output": [17, 0, 18, 8, 72]}]}, "test": [{"input": [55, 44, 26, 0, 32, 63], "output": [55, 44, 26, 0, 32]}, {"input": [53, 54, 81, 63, 12, 51, 12], "output": [53, 54, 81, 63, 12]}, {"input": [2, 91, 76, 33, 82], "output": [2, 91, 76, 33, 82]}, {"input": [81, 10, 17, 18, 71, 98, 56], "output": [81, 10, 17, 18, 71]}, {"input": [62, 40, 77, 6, 84], "output": [62, 40, 77, 6, 84]}, {"input": [66, 71, 66, 44, 68, 46, 63], "output": [66, 71, 66, 44, 68]}, {"input": [87, 38, 68, 83, 22, 25, 65, 75], "output": [87, 38, 68, 83, 22]}, {"input": [65, 43, 40, 87, 51, 97], "output": [65, 43, 40, 87, 51]}, {"input": [18, 64, 85, 28, 70, 43], "output": [18, 64, 85, 28, 70]}, {"input": [20, 70, 26, 93, 73], "output": [20, 70, 26, 93, 73]}]}
{"id": "c055", "function": "def c055(x):\n    # swap x[0], x[2] and x[1], x[3]\n    x[0], x[2] = x[2], x[0]\n    x[1], x[3] = x[3], x[1]\n    return x\n\n", "train": {"normal": [{"input": [77, 84, 60, 37, 0], "output": [60, 37, 77, 84, 0]}, {"input": [8, 1, 77, 32], "output": [77, 32, 8, 1]}, {"input": [94, 3, 94, 55], "output": [94, 55, 94, 3]}, {"input": [99, 9, 82, 78, 5], "output": [82, 78, 99, 9, 5]}, {"input": [36, 79, 16, 64, 46, 35], "output": [16, 64, 36, 79, 46, 35]}, {"input": [57, 36, 59, 85], "output": [59, 85, 57, 36]}, {"input": [12, 35, 4, 79, 72], "output": [4, 79, 12, 35, 72]}, {"input": [71, 53, 10, 37, 33, 75, 98], "output": [10, 37, 71, 53, 33, 75, 98]}, {"input": [29, 74, 40, 78], "output": [40, 78, 29, 74]}, {"input": [48, 72, 31, 25, 55], "output": [31, 25, 48, 72, 55]}], "ood": [], "noise": [{"input": [69, 55, 92, 43], "output": [92, 43, 45, 55]}, {"input": [74, 94, 63, 36], "output": [63, 82, 74, 94]}, {"input": [87, 74, 69, 7, 55], "output": [69, 49, 87, 74, 55]}, {"input": [39, 6, 45, 51], "output": [9, 51, 11, 6]}, {"input": [76, 45, 62, 28, 74, 38, 46], "output": [68, 38, 76, 45, 74, 38, 43]}]}, "test": [{"input": [29, 85, 19, 79, 0, 20], "output": [19, 79, 29, 85, 0, 20]}, {"input": [15, 83, 79, 49, 63, 24, 82], "output": [79, 49, 15, 83, 63, 24, 82]}, {"input": [46, 77, 82, 24, 46, 43], "output": [82, 24, 46, 77, 46, 43]}, {"input": [74, 57, 93, 85, 46, 97, 45], "output": [93, 85, 74, 57, 46, 97, 45]}, {"input": [37, 97, 35, 79, 29, 2], "output": [35, 79, 37, 97, 29, 2]}, {"input": [9, 49, 39, 52, 73], "output": [39, 52, 9, 49, 73]}, {"input": [70, 41, 5, 70], "output": [5, 70, 70, 41]}, {"input": [35, 68, 17, 8], "output": [17, 8, 35, 68]}, {"input": [2, 12, 56, 18], "output": [56, 18, 2, 12]}, {"input": [97, 82, 12, 70], "output": [12, 70, 97, 82]}]}
{"id": "c029", "function": "def c029(x):\n    # remove the first 2 elements\n    return x[2:]\n\n", "train": {"normal": [{"input": [3, 91, 95, 26, 26, 8, 7], "output": [95, 26, 26, 8, 7]}, {"input": [57, 35, 32, 31, 50], "output": [32, 31, 50]}, {"input": [16, 22, 30, 57, 77, 42], "output": [30, 57, 77, 42]}, {"input": [49, 79, 45, 30, 4, 14], "output": [45, 30, 4, 14]}, {"input": [17, 9, 23, 42], "output": [23, 42]}, {"input": [1, 97, 29, 25, 29, 62], "output": [29, 25, 29, 62]}, {"input": [83, 20, 26, 51, 95], "output": [26, 51, 95]}, {"input": [83, 30, 74, 50, 79], "output": [74, 50, 79]}, {"input": [88, 10, 62, 25], "output": [62, 25]}, {"input": [29, 69, 93, 52, 65, 74], "output": [93, 52, 65, 74]}], "ood": [], "noise": [{"input": [1, 53, 51, 68], "output": [68, 68]}, {"input": [99, 25, 80, 30, 9, 18, 99], "output": [65, 30, 9, 18, 38]}, {"input": [30, 90, 71], "output": [72]}, {"input": [21, 41, 22, 28, 29], "output": [28, 28, 29]}, {"input": [32, 23, 77, 91], "output": [78, 91]}]}, "test": [{"input": [32, 70, 31, 32, 66, 44, 79], "output": [31, 32, 66, 44, 79]}, {"input": [30, 99, 70, 15], "output": [70, 15]}, {"input": [14, 21, 40, 37, 81, 58, 33], "output": [40, 37, 81, 58, 33]}, {"input": [52, 84, 34, 15, 22, 46, 72], "output": [34, 15, 22, 46, 72]}, {"input": [12, 8, 2, 4, 92, 78, 83], "output": [2, 4, 92, 78, 83]}, {"input": [1, 44, 39, 39], "output": [39, 39]}, {"input": [59, 17, 56], "output": [56]}, {"input": [39, 26, 90, 16, 17, 24], "output": [90, 16, 17, 24]}, {"input": [53, 46, 48], "output": [48]}, {"input": [94, 22, 3, 77, 25], "output": [3, 77, 25]}]}
{"id": "c168", "function": "def c168(x):\n    # count from 1 to 10, skipping the length of the input\n    return [i for i in range(1, 11) if i != len(x)]\n\n", "train": {"normal": [{"input": [39, 34, 72, 58], "output": [1, 2, 3, 5, 6, 7, 8, 9, 10]}, {"input": [40, 76, 24, 64], "output": [1, 2, 3, 5, 6, 7, 8, 9, 10]}, {"input": [36, 93, 5, 6, 19], "output": [1, 2, 3, 4, 6, 7, 8, 9, 10]}, {"input": [64, 30, 15, 8, 79], "output": [1, 2, 3, 4, 6, 7, 8, 9, 10]}, {"input": [79, 44, 78], "output": [1, 2, 4, 5, 6, 7, 8, 9, 10]}, {"input": [46, 92, 52, 48, 0, 34], "output": [1, 2, 3, 4, 5, 7, 8, 9, 10]}, {"input": [68, 84, 64, 88, 1, 39, 15], "output": [1, 2, 3, 4, 5, 6, 8, 9, 10]}, {"input": [8, 86, 17, 6, 69], "output": [1, 2, 3, 4, 6, 7, 8, 9, 10]}, {"input": [2, 62, 33], "output": [1, 2, 4, 5, 6, 7, 8, 9, 10]}, {"input": [89, 58, 25, 49, 5], "output": [1, 2, 3, 4, 6, 7, 8, 9, 10]}], "ood": [], "noise": [{"input": [77, 65, 57, 29], "output": [1, 2, 4, 5, 6, 7, 8, 9, 10]}, {"input": [59, 27, 92, 98, 57, 83], "output": [1, 2, 3, 4, 5, 7, 10, 8, 10]}, {"input": [40, 52, 98, 81, 43, 47, 46], "output": [1, 6, 3, 6, 3, 6, 8, 5, 10]}, {"input": [37, 60, 53, 3, 28], "output": [1, 2, 3, 4, 9, 7, 8, 9, 10]}, {"input": [55, 94, 40, 41, 73, 89], "output": [1, 2, 10, 4, 1, 7, 8, 9, 10]}]}, "test": [{"input": [21, 43, 77, 17, 77], "output": [1, 2, 3, 4, 6, 7, 8, 9, 10]}, {"input": [23, 41, 59], "output": [1, 2, 4, 5, 6, 7, 8, 9, 10]}, {"input": [60, 77, 28], "output": [1, 2, 4, 5, 6, 7, 8, 9, 10]}, {"input": [27, 68, 44, 90, 59, 64], "output": [1, 2, 3, 4, 5, 7, 8, 9, 10]}, {"input": [81, 89, 83, 87, 93, 94], "output": [1, 2, 3, 4, 5, 7, 8, 9, 10]}, {"input": [81, 42, 36, 35, 46, 47], "output": [1, 2, 3, 4, 5, 7, 8, 9, 10]}, {"input": [47, 26, 23], "output": [1, 2, 4, 5, 6, 7, 8, 9, 10]}, {"input": [5, 90, 79, 49, 60], "output": [1, 2, 3, 4, 6, 7, 8, 9, 10]}, {"input": [99, 84, 48], "output": [1, 2, 4, 5, 6, 7, 8, 9, 10]}, {"input": [19, 37, 49, 77], "output": [1, 2, 3, 5, 6, 7, 8, 9, 10]}]}
{"id": "c009", "function": "def c009(x):\n    # remove all but the first 3 elements\n    return x[:3]\n\n", "train": {"normal": [{"input": [18, 44, 53, 17], "output": [18, 44, 53]}, {"input": [43, 31, 20, 28, 28, 95, 94], "output": [43, 31, 20]}, {"input": [43, 41, 80, 67, 85, 64, 20], "output": [43, 41, 80]}, {"input": [26, 88, 79, 5], "output": [26, 88, 79]}, {"input": [95, 33, 71, 90, 60, 58, 82], "output": [95, 33, 71]}, {"input": [23, 37, 21, 57, 19], "output": [23, 37, 21]}, {"input": [18, 33, 42, 80, 40, 84, 63], "output": [18, 33, 42]}, {"input": [64, 68, 16, 6, 16], "output": [64, 68, 16]}, {"input": [78, 46, 99, 82], "output": [78, 46, 99]}, {"input": [18, 32, 64, 76, 95], "output": [18, 32, 64]}], "ood": [], "noise": [{"input": [78, 5, 66, 7], "output": [78, 5, 36]}, {"input": [14, 10, 15, 64], "output": [14, 15, 15]}, {"input": [72, 57, 59, 11], "output": [71, 57, 71]}, {"input": [47, 91, 88, 81], "output": [47, 91, 48]}, {"input": [33, 55, 43], "output": [33, 50, 43]}]}, "test": [{"input": [6, 16, 46], "output": [6, 16, 46]}, {"input": [27, 42, 29, 10, 32, 21, 76], "output": [27, 42, 29]}, {"input": [22, 68, 54, 64, 33], "output": [22, 68, 54]}, {"input": [2, 79, 11, 78, 99, 57, 93], "output": [2, 79, 11]}, {"input": [92, 40, 89, 24], "output": [92, 40, 89]}, {"input": [89, 12, 69, 96, 52, 1], "output": [89, 12, 69]}, {"input": [47, 80, 19], "output": [47, 80, 19]}, {"input": [11, 58, 22, 63, 81], "output": [11, 58, 22]}, {"input": [42, 13, 78, 39, 69, 98], "output": [42, 13, 78]}, {"input": [8, 59, 30, 17], "output": [8, 59, 30]}]}
{"id": "c133", "function": "def c133(x):\n    # remove elements 1 through 4\n    return x[:1] + x[5:]\n\n", "train": {"normal": [{"input": [8, 3, 20, 91, 97, 58, 15, 38], "output": [8, 58, 15, 38]}, {"input": [36, 64, 70, 89, 58], "output": [36]}, {"input": [47, 24, 32, 26, 64, 31], "output": [47, 31]}, {"input": [40, 76, 67, 73, 73], "output": [40]}, {"input": [40, 2, 9, 20, 49, 65, 83, 67], "output": [40, 65, 83, 67]}, {"input": [38, 30, 64, 51, 6, 4], "output": [38, 4]}, {"input": [68, 27, 60, 70, 31, 97], "output": [68, 97]}, {"input": [63, 7, 11, 62, 32, 52, 41, 4], "output": [63, 52, 41, 4]}, {"input": [90, 60, 50, 79, 87, 15, 91, 37], "output": [90, 15, 91, 37]}, {"input": [2, 71, 94, 62, 16, 52, 16], "output": [2, 52, 16]}], "ood": [], "noise": [{"input": [69, 93, 78, 62, 50, 0], "output": [1, 0]}, {"input": [6, 88, 72, 93, 32, 69, 62, 50], "output": [6, 36, 62, 50]}, {"input": [10, 18, 28, 69, 38, 63], "output": [24, 63]}, {"input": [66, 54, 17, 57, 45, 40, 62, 97], "output": [66, 40, 94, 97]}, {"input": [95, 59, 58, 40, 9, 14, 78, 71], "output": [91, 14, 48, 71]}]}, "test": [{"input": [12, 5, 91, 65, 20, 67, 82], "output": [12, 67, 82]}, {"input": [28, 66, 42, 89, 7, 18, 41, 56], "output": [28, 18, 41, 56]}, {"input": [36, 69, 66, 47, 70, 43, 19, 68], "output": [36, 43, 19, 68]}, {"input": [34, 72, 2, 55, 23, 59, 56, 62], "output": [34, 59, 56, 62]}, {"input": [11, 0, 46, 21, 26, 48], "output": [11, 48]}, {"input": [94, 31, 84, 18, 41], "output": [94]}, {"input": [27, 46, 26, 61, 7, 19], "output": [27, 19]}, {"input": [99, 78, 16, 53, 2, 56], "output": [99, 56]}, {"input": [51, 61, 71, 84, 82, 64, 28], "output": [51, 64, 28]}, {"input": [51, 60, 14, 60, 71], "output": [51]}]}
{"id": "c146", "function": "def c146(x):\n    # absolute difference between each consecutive pair of elements\n    return [abs(x[i] - x[i+1]) for i in range(len(x)-1)]\n\n", "train": {"normal": [{"input": [64, 41, 72, 43, 84, 36, 51], "output": [23, 31, 29, 41, 48, 15]}, {"input": [73, 88, 26, 23, 11], "output": [15, 62, 3, 12]}, {"input": [73, 81, 44, 31, 67, 71, 4, 33], "output": [8, 37, 13, 36, 4, 67, 29]}, {"input": [99, 57, 9, 75, 26, 25, 69, 34, 63], "output": [42, 48, 66, 49, 1, 44, 35, 29]}, {"input": [8, 59, 9, 22, 68, 95, 42, 0], "output": [51, 50, 13, 46, 27, 53, 42]}, {"input": [1, 43, 40, 53, 87, 74, 63], "output": [42, 3, 13, 34, 13, 11]}, {"input": [79, 14, 36, 89, 13, 42, 46, 26], "output": [65, 22, 53, 76, 29, 4, 20]}, {"input": [8, 61, 43, 91, 99], "output": [53, 18, 48, 8]}, {"input": [24, 82, 87, 6, 80], "output": [58, 5, 81, 74]}, {"input": [12, 50, 92, 94, 72, 10, 63, 12, 48], "output": [38, 42, 2, 22, 62, 53, 51, 36]}], "ood": [], "noise": [{"input": [36, 80, 43, 64, 91, 63, 77], "output": [44, 23, 43, 39, 28, 14]}, {"input": [91, 34, 23, 66, 98, 40, 18], "output": [57, 11, 43, 17, 58, 22]}, {"input": [6, 77, 77, 87, 85], "output": [71, 0, 54, 2]}, {"input": [45, 36, 99, 85, 1], "output": [9, 63, 14, 40]}, {"input": [42, 30, 85, 29, 63, 99, 40, 30], "output": [12, 21, 56, 34, 36, 59, 10]}]}, "test": [{"input": [52, 19, 91, 78, 59, 10], "output": [33, 72, 13, 19, 49]}, {"input": [84, 83, 17, 56, 79, 5, 39, 13], "output": [1, 66, 39, 23, 74, 34, 26]}, {"input": [60, 93, 92, 28, 98, 76, 66, 50, 37], "output": [33, 1, 64, 70, 22, 10, 16, 13]}, {"input": [31, 87, 83, 86, 60, 22], "output": [56, 4, 3, 26, 38]}, {"input": [19, 89, 66, 7, 44], "output": [70, 23, 59, 37]}, {"input": [57, 93, 83, 70, 6, 36, 59], "output": [36, 10, 13, 64, 30, 23]}, {"input": [9, 50, 25, 78, 17, 16, 37, 2, 9], "output": [41, 25, 53, 61, 1, 21, 35, 7]}, {"input": [22, 56, 88, 51, 35, 74, 44, 11], "output": [34, 32, 37, 16, 39, 30, 33]}, {"input": [85, 58, 61, 22, 1], "output": [27, 3, 39, 21]}, {"input": [54, 62, 37, 90, 55, 70, 84], "output": [8, 25, 53, 35, 15, 14]}]}
{"id": "c004", "function": "def c004(x):\n    # remove all but element 3\n    return [x[2]]\n\n", "train": {"normal": [{"input": [95, 90, 97, 10, 40, 35, 2], "output": [97]}, {"input": [54, 36, 76], "output": [76]}, {"input": [0, 71, 93, 7, 59, 66, 40], "output": [93]}, {"input": [27, 19, 45, 9], "output": [45]}, {"input": [3, 56, 82, 27, 52, 90], "output": [82]}, {"input": [37, 7, 82, 90], "output": [82]}, {"input": [45, 19, 3], "output": [3]}, {"input": [39, 68, 99, 7, 21, 54, 5], "output": [99]}, {"input": [65, 68, 17, 36, 52], "output": [17]}, {"input": [29, 0, 29], "output": [29]}], "ood": [], "noise": [{"input": [89, 21, 57, 71, 36, 35], "output": [58]}, {"input": [21, 82, 71], "output": [72]}, {"input": [63, 28, 36, 38, 8, 32, 27], "output": [37]}, {"input": [23, 60, 11, 25, 72, 35], "output": [12]}, {"input": [20, 40, 71], "output": [72]}]}, "test": [{"input": [92, 30, 88, 90, 68, 34], "output": [88]}, {"input": [3, 92, 69], "output": [69]}, {"input": [1, 55, 54], "output": [54]}, {"input": [18, 19, 40, 39, 25], "output": [40]}, {"input": [11, 1, 40, 52, 29, 23, 51], "output": [40]}, {"input": [34, 92, 78, 64], "output": [78]}, {"input": [11, 38, 60], "output": [60]}, {"input": [9, 81, 36, 27, 78], "output": [36]}, {"input": [67, 89, 18, 7, 64, 79, 81], "output": [18]}, {"input": [52, 82, 8, 62, 53], "output": [8]}]}
{"id": "c240", "function": "def c240(x):\n    # number of elements equal to the input length\n    return [x.count(len(x))]\n\n", "train": {"normal": [{"input": [71, 3, 8, 96, 8, 8, 92, 77], "output": [3]}, {"input": [88, 21, 34, 46, 48, 9, 9, 9, 68], "output": [3]}, {"input": [13, 6, 6, 90, 35, 94], "output": [2]}, {"input": [27, 4, 31, 9], "output": [1]}, {"input": [53, 42, 83, 86, 33, 5, 13, 8], "output": [1]}, {"input": [30, 7, 10, 10, 91, 10, 85, 61, 10, 37], "output": [4]}, {"input": [56, 4, 39, 5, 89], "output": [1]}, {"input": [6, 3, 67, 60, 9, 9], "output": [1]}, {"input": [8, 80, 8, 20, 8, 39, 33, 8], "output": [4]}, {"input": [8, 11, 86, 87, 21, 47, 8, 8], "output": [3]}], "ood": [], "noise": [{"input": [77, 97, 42, 5, 5], "output": [3]}, {"input": [43, 80, 59, 5, 5], "output": [3]}, {"input": [5, 54, 74, 91, 86, 29, 7], "output": [2]}, {"input": [45, 76, 4, 60], "output": [2]}, {"input": [11, 94, 17, 11, 78, 82, 11, 58, 11, 22, 11], "output": [6]}]}, "test": [{"input": [8, 20, 92, 8, 8, 79, 37, 33], "output": [3]}, {"input": [85, 52, 13, 7, 11, 31, 44], "output": [1]}, {"input": [10, 33, 10, 10, 24, 34, 10, 8, 62, 85], "output": [4]}, {"input": [70, 43, 6, 6, 91, 78], "output": [2]}, {"input": [4, 51, 53, 20], "output": [1]}, {"input": [13, 11, 63, 11, 11, 60, 88, 45, 2, 11, 3], "output": [4]}, {"input": [28, 8, 1, 38, 24, 21, 8, 42], "output": [2]}, {"input": [76, 47, 36, 79, 6, 69], "output": [1]}, {"input": [7, 69, 37, 37, 7, 91, 48], "output": [2]}, {"input": [7, 7, 7, 67, 7, 80, 46], "output": [4]}]}
{"id": "c239", "function": "def c239(x):\n    # number of repetitions in the input\n    res = {}\n    out = 0\n    for i in x:\n        if i not in res:\n            res[i] = 0\n        res[i] += 1\n    for i in res:\n        if res[i] > 1:\n            out += 1\n    return [out]\n\n", "train": {"normal": [{"input": [7, 5, 7, 8, 7, 8, 6], "output": [2]}, {"input": [0, 10, 6, 6, 6, 5, 5, 0], "output": [3]}, {"input": [10, 0, 7, 1, 9, 1, 8, 10, 10], "output": [2]}, {"input": [1, 1, 2, 3, 2, 8, 8], "output": [3]}, {"input": [5, 5, 4, 5, 5, 5], "output": [1]}, {"input": [3, 1, 3, 0, 5, 10, 10, 3, 5], "output": [3]}, {"input": [4, 0, 0, 0, 8, 10, 10, 0, 0], "output": [2]}, {"input": [7, 10, 5, 10, 9, 10, 9, 2, 9, 10], "output": [2]}, {"input": [7, 5, 5, 9, 9, 3, 9, 1, 3, 2, 2], "output": [4]}, {"input": [7, 6, 4, 6, 0, 4, 7, 4], "output": [3]}], "ood": [], "noise": [{"input": [8, 8, 8, 0, 9, 9, 8, 3, 8], "output": [3]}, {"input": [6, 6, 10, 6, 6, 1, 6, 6, 0, 7, 2], "output": [2]}, {"input": [6, 1, 8, 7, 0, 1, 6, 6, 1, 0], "output": [4]}, {"input": [6, 8, 8, 10, 3, 8, 0, 10], "output": [3]}, {"input": [5, 8, 9, 4, 5, 4, 5, 4, 6, 4], "output": [3]}]}, "test": [{"input": [3, 2, 6, 7, 10, 2, 6, 6], "output": [2]}, {"input": [1, 6, 0, 1, 6, 6, 6, 6, 5], "output": [2]}, {"input": [4, 1, 1, 0, 6, 1, 10, 5, 7, 4], "output": [2]}, {"input": [1, 9, 9, 9, 10, 10, 2, 1, 10], "output": [3]}, {"input": [1, 10, 7, 10, 6, 1, 5, 8, 7], "output": [3]}, {"input": [9, 9, 9, 9, 8, 0, 9], "output": [1]}, {"input": [10, 10, 0, 10, 10, 10, 6, 10, 6, 1], "output": [2]}, {"input": [0, 9, 0, 9, 6, 6, 0, 6, 6, 9], "output": [3]}, {"input": [8, 3, 7, 2, 6, 4, 6, 2, 4, 4, 8], "output": [4]}, {"input": [5, 7, 8, 10, 8, 1, 8, 7, 8, 8, 7], "output": [2]}]}
{"id": "c246", "function": "def c246(x):\n    # number of unique elements\n    return [len(set(x))]\n\n", "train": {"normal": [{"input": [47, 26, 94, 55, 59, 94, 81, 55, 59, 8], "output": [7]}, {"input": [51, 80, 50, 79, 57, 72, 79, 72, 94, 80], "output": [7]}, {"input": [52, 69, 69, 42, 52, 69, 69, 5], "output": [4]}, {"input": [2, 55, 32, 27, 46, 32, 11, 32], "output": [6]}, {"input": [70, 55, 92, 96, 96, 99, 70, 96, 70, 7], "output": [6]}, {"input": [54, 1, 54, 13, 1, 60], "output": [4]}, {"input": [19, 84, 45, 55, 42, 55, 42, 84, 15], "output": [6]}, {"input": [36, 14, 84, 76, 84, 53, 36, 85, 93, 53], "output": [7]}, {"input": [24, 46, 68, 24, 24, 68, 89, 24, 29, 24], "output": [5]}, {"input": [26, 94, 80, 26, 6, 94, 6], "output": [4]}], "ood": [], "noise": [{"input": [16, 91, 2, 23, 50, 50, 91, 50, 50, 91, 92, 0], "output": [8]}, {"input": [67, 23, 5, 5, 92, 23, 23, 75, 75, 26], "output": [7]}, {"input": [98, 24, 44, 44, 26, 77, 44, 31, 67, 92], "output": [9]}, {"input": [51, 15, 15, 29, 29, 22, 79, 15, 73], "output": [7]}, {"input": [61, 67, 40, 40, 67, 61, 13, 40], "output": [5]}]}, "test": [{"input": [62, 91, 37, 22, 62, 62, 87, 22, 73, 87], "output": [6]}, {"input": [2, 15, 55, 2, 15, 70, 26], "output": [5]}, {"input": [86, 6, 6, 92, 92, 55, 57, 18, 86, 6, 43, 6], "output": [7]}, {"input": [5, 56, 73, 73, 82, 24, 56, 24], "output": [5]}, {"input": [33, 93, 68, 24, 93, 93, 28, 86, 64, 93, 33], "output": [7]}, {"input": [70, 6, 96, 70, 90, 90, 90, 18, 65, 70, 8, 83], "output": [8]}, {"input": [51, 70, 92, 9, 45, 14, 45, 70, 70], "output": [6]}, {"input": [67, 22, 27, 4, 4, 18, 49, 22, 49], "output": [6]}, {"input": [70, 45, 51, 75, 14, 51, 29, 72, 72], "output": [7]}, {"input": [22, 85, 54, 54, 85, 45, 18, 54], "output": [5]}]}
{"id": "c138", "function": "def c138(x):\n    # remove all occurrences of the first element\n    return [i for i in x if i != x[0]]\n\n", "train": {"normal": [{"input": [23, 65, 77, 77, 79], "output": [65, 77, 77, 79]}, {"input": [3, 69, 99, 69, 26, 27, 64, 64], "output": [69, 99, 69, 26, 27, 64, 64]}, {"input": [92, 10, 1, 63, 92, 56, 39, 40, 92], "output": [10, 1, 63, 56, 39, 40]}, {"input": [44, 47, 6, 6], "output": [47, 6, 6]}, {"input": [76, 27, 64, 15, 15, 15, 34], "output": [27, 64, 15, 15, 15, 34]}, {"input": [18, 39, 20, 68, 18, 4, 20, 3, 43, 20], "output": [39, 20, 68, 4, 20, 3, 43, 20]}, {"input": [44, 83, 84, 68], "output": [83, 84, 68]}, {"input": [46, 58, 20, 22, 46, 46, 48, 46, 79], "output": [58, 20, 22, 48, 79]}, {"input": [12, 6, 6, 16, 6, 0, 6, 33, 41], "output": [6, 6, 16, 6, 0, 6, 33, 41]}, {"input": [55, 90, 81, 59], "output": [90, 81, 59]}], "ood": [], "noise": [{"input": [3, 16, 21, 3, 72, 8], "output": [16, 21, 36, 8]}, {"input": [85, 14, 1, 7, 29, 69, 7, 7, 94], "output": [14, 6, 43, 40, 69, 7, 7, 94]}, {"input": [74, 54, 54, 49, 54, 0, 54, 54, 25], "output": [54, 54, 49, 54, 0, 16, 54, 25]}, {"input": [98, 43, 55, 28, 98, 6, 1], "output": [43, 55, 9, 6, 1]}, {"input": [35, 92, 61, 11, 44, 35], "output": [83, 61, 11, 26]}]}, "test": [{"input": [32, 62, 93, 32, 42, 32, 32], "output": [62, 93, 42]}, {"input": [46, 27, 1, 80, 10, 26, 3], "output": [27, 1, 80, 10, 26, 3]}, {"input": [46, 47, 90, 30, 46], "output": [47, 90, 30]}, {"input": [80, 76, 69, 61, 12, 12, 11], "output": [76, 69, 61, 12, 12, 11]}, {"input": [93, 98, 41, 13, 34, 77, 74], "output": [98, 41, 13, 34, 77, 74]}, {"input": [64, 92, 64, 17, 98, 64, 10, 48], "output": [92, 17, 98, 10, 48]}, {"input": [82, 44, 8, 59, 70, 82, 95], "output": [44, 8, 59, 70, 95]}, {"input": [14, 64, 51, 19, 67, 41, 2, 0], "output": [64, 51, 19, 67, 41, 2, 0]}, {"input": [81, 77, 98, 60, 24], "output": [77, 98, 60, 24]}, {"input": [69, 69, 81, 95, 91, 82, 69, 74, 39], "output": [81, 95, 91, 82, 74, 39]}]}
{"id": "c018", "function": "def c018(x):\n    # replace element 1 with 9\n    x[1] = 9\n    return x\n\n", "train": {"normal": [{"input": [52, 50, 78, 67, 61], "output": [52, 9, 78, 67, 61]}, {"input": [58, 86, 50, 65, 8], "output": [58, 9, 50, 65, 8]}, {"input": [94, 60, 78], "output": [94, 9, 78]}, {"input": [99, 47, 65, 68], "output": [99, 9, 65, 68]}, {"input": [44, 5, 4], "output": [44, 9, 4]}, {"input": [0, 34, 54, 62, 93, 90, 77], "output": [0, 9, 54, 62, 93, 90, 77]}, {"input": [52, 10, 28, 85, 28, 2, 74], "output": [52, 9, 28, 85, 28, 2, 74]}, {"input": [95, 69, 12], "output": [95, 9, 12]}, {"input": [1, 22, 55, 73, 24, 82, 93], "output": [1, 9, 55, 73, 24, 82, 93]}, {"input": [25, 38, 22, 60, 85, 78, 27], "output": [25, 9, 22, 60, 85, 78, 27]}], "ood": [], "noise": [{"input": [14, 96, 19, 75, 15], "output": [14, 9, 43, 75, 68]}, {"input": [4, 90, 32, 79, 53, 22], "output": [4, 51, 32, 45, 53, 51]}, {"input": [94, 14, 32, 35], "output": [72, 9, 32, 34]}, {"input": [72, 48, 15, 96, 91, 79, 16], "output": [72, 85, 15, 55, 48, 79, 16]}, {"input": [92, 22, 54, 44, 20, 88, 46], "output": [92, 9, 54, 44, 32, 88, 46]}]}, "test": [{"input": [9, 30, 42, 28, 71], "output": [9, 9, 42, 28, 71]}, {"input": [86, 64, 60, 56], "output": [86, 9, 60, 56]}, {"input": [72, 3, 85, 34, 52, 97], "output": [72, 9, 85, 34, 52, 97]}, {"input": [47, 82, 81, 31, 39, 44, 91], "output": [47, 9, 81, 31, 39, 44, 91]}, {"input": [68, 55, 25, 74, 25, 72, 63], "output": [68, 9, 25, 74, 25, 72, 63]}, {"input": [12, 52, 47, 26, 18, 71, 0], "output": [12, 9, 47, 26, 18, 71, 0]}, {"input": [86, 40, 78, 70, 98], "output": [86, 9, 78, 70, 98]}, {"input": [7, 29, 18, 87, 97], "output": [7, 9, 18, 87, 97]}, {"input": [2, 34, 31, 87, 53, 48], "output": [2, 9, 31, 87, 53, 48]}, {"input": [55, 74, 14, 18, 18, 20], "output": [55, 9, 14, 18, 18, 20]}]}
{"id": "c012", "function": "def c012(x):\n    # remove all but elements 1 through 3\n    return x[1:4]\n\n", "train": {"normal": [{"input": [26, 6, 64, 33, 96, 38], "output": [6, 64, 33]}, {"input": [10, 28, 18, 82, 54], "output": [28, 18, 82]}, {"input": [89, 49, 28, 56, 90], "output": [49, 28, 56]}, {"input": [28, 50, 54, 77, 36, 3, 43], "output": [50, 54, 77]}, {"input": [23, 7, 3, 36, 9, 66, 90], "output": [7, 3, 36]}, {"input": [77, 53, 14, 94, 95, 73, 37], "output": [53, 14, 94]}, {"input": [23, 67, 39, 64, 97], "output": [67, 39, 64]}, {"input": [61, 91, 85, 68, 44], "output": [91, 85, 68]}, {"input": [10, 18, 12, 79, 13], "output": [18, 12, 79]}, {"input": [80, 59, 74, 80, 84, 40], "output": [59, 74, 80]}], "ood": [], "noise": [{"input": [63, 62, 69, 43, 67], "output": [62, 51, 43]}, {"input": [23, 27, 70, 94, 0], "output": [92, 70, 75]}, {"input": [8, 0, 68, 68, 97, 98], "output": [56, 68, 58]}, {"input": [81, 73, 37, 54, 5, 82, 26], "output": [73, 37, 72]}, {"input": [41, 24, 17, 51, 33], "output": [24, 35, 51]}]}, "test": [{"input": [58, 75, 77, 79, 33], "output": [75, 77, 79]}, {"input": [89, 93, 66, 58, 81], "output": [93, 66, 58]}, {"input": [89, 11, 8, 18, 89, 25, 94], "output": [11, 8, 18]}, {"input": [51, 68, 36, 94, 34, 16], "output": [68, 36, 94]}, {"input": [58, 0, 8, 91, 77, 36, 89], "output": [0, 8, 91]}, {"input": [22, 33, 16, 31, 80, 35, 2], "output": [33, 16, 31]}, {"input": [68, 58, 58, 36, 65, 95], "output": [58, 58, 36]}, {"input": [44, 93, 16, 39, 86, 26, 70], "output": [93, 16, 39]}, {"input": [21, 7, 95, 22, 58, 2, 32], "output": [7, 95, 22]}, {"input": [69, 46, 71, 88, 44, 1, 81], "output": [46, 71, 88]}]}
{"id": "c232", "function": "def c232(x):\n    # mean of the list, rounded to the nearest integer\n    return [round(sum(x)/len(x))]\n\n", "train": {"normal": [{"input": [17, 90, 3, 1, 47, 41], "output": [33]}, {"input": [29, 89, 79], "output": [66]}, {"input": [87, 80, 0, 37, 55, 26, 14], "output": [43]}, {"input": [57, 76, 78], "output": [70]}, {"input": [46, 47, 48, 61, 23, 22], "output": [41]}, {"input": [49, 35, 61, 83], "output": [57]}, {"input": [22, 19, 93, 73], "output": [52]}, {"input": [98, 34, 86, 30], "output": [62]}, {"input": [89, 43, 58, 43, 81, 48], "output": [60]}, {"input": [54, 13, 68, 42], "output": [44]}], "ood": [], "noise": [{"input": [85, 77, 80, 0, 12, 99], "output": [60]}, {"input": [35, 98, 55], "output": [64]}, {"input": [33, 50, 74, 74, 38, 73], "output": [58]}, {"input": [25, 99, 92, 40, 89, 84], "output": [73]}, {"input": [83, 49, 53, 13, 63], "output": [53]}]}, "test": [{"input": [75, 5, 62, 70, 97, 77, 91], "output": [68]}, {"input": [48, 56, 16, 2], "output": [30]}, {"input": [14, 45, 23, 21, 58], "output": [32]}, {"input": [82, 18, 27, 75, 49, 77, 80], "output": [58]}, {"input": [52, 26, 19], "output": [32]}, {"input": [55, 34, 84, 12, 68, 68], "output": [54]}, {"input": [81, 76, 90, 28], "output": [69]}, {"input": [17, 73, 58, 51, 84, 33], "output": [53]}, {"input": [45, 49, 44], "output": [46]}, {"input": [34, 2, 21, 61, 32, 19], "output": [28]}]}
{"id": "c094", "function": "def c094(x):\n    # swap 0,2 and 1,3\n    x[0], x[2] = x[2], x[0]\n    x[1], x[3] = x[3], x[1]\n    return x\n\n", "train": {"normal": [{"input": [10, 46, 34, 46, 0], "output": [34, 46, 10, 46, 0]}, {"input": [14, 25, 4, 6, 48, 36, 61], "output": [4, 6, 14, 25, 48, 36, 61]}, {"input": [47, 61, 29, 26, 1, 68], "output": [29, 26, 47, 61, 1, 68]}, {"input": [37, 61, 10, 69, 27, 76, 99], "output": [10, 69, 37, 61, 27, 76, 99]}, {"input": [87, 62, 36, 84, 49, 86, 19], "output": [36, 84, 87, 62, 49, 86, 19]}, {"input": [70, 43, 6, 2, 72, 6], "output": [6, 2, 70, 43, 72, 6]}, {"input": [84, 23, 93, 50, 73], "output": [93, 50, 84, 23, 73]}, {"input": [49, 41, 35, 82, 61], "output": [35, 82, 49, 41, 61]}, {"input": [28, 38, 68, 37, 14, 21], "output": [68, 37, 28, 38, 14, 21]}, {"input": [32, 12, 84, 18, 22, 24], "output": [84, 18, 32, 12, 22, 24]}], "ood": [], "noise": [{"input": [89, 27, 31, 19, 65], "output": [85, 38, 89, 27, 65]}, {"input": [96, 87, 8, 13, 10], "output": [58, 13, 96, 87, 10]}, {"input": [96, 90, 6, 33, 65, 96, 51], "output": [6, 33, 90, 90, 65, 96, 51]}, {"input": [12, 22, 32, 16, 54], "output": [32, 45, 12, 22, 54]}, {"input": [0, 81, 30, 55, 29], "output": [30, 55, 0, 81, 48]}]}, "test": [{"input": [89, 70, 56, 38, 78, 54], "output": [56, 38, 89, 70, 78, 54]}, {"input": [36, 3, 21, 55, 60, 79, 12], "output": [21, 55, 36, 3, 60, 79, 12]}, {"input": [59, 81, 20, 96, 17, 85, 48], "output": [20, 96, 59, 81, 17, 85, 48]}, {"input": [20, 37, 4, 78, 14, 49], "output": [4, 78, 20, 37, 14, 49]}, {"input": [13, 56, 36, 44, 30, 42], "output": [36, 44, 13, 56, 30, 42]}, {"input": [75, 48, 11, 68, 15, 19], "output": [11, 68, 75, 48, 15, 19]}, {"input": [15, 74, 97, 68, 70, 30], "output": [97, 68, 15, 74, 70, 30]}, {"input": [55, 95, 30, 27, 48], "output": [30, 27, 55, 95, 48]}, {"input": [18, 47, 84, 24, 57, 62], "output": [84, 24, 18, 47, 57, 62]}, {"input": [71, 1, 63, 29, 55, 19, 21], "output": [63, 29, 71, 1, 55, 19, 21]}]}
{"id": "c086", "function": "def c086(x):\n    # swap elements 0 and 3\n    x[0], x[3] = x[3], x[0]\n    return x\n\n", "train": {"normal": [{"input": [79, 35, 60, 67, 80, 67, 31], "output": [67, 35, 60, 79, 80, 67, 31]}, {"input": [49, 44, 79, 18, 69, 64], "output": [18, 44, 79, 49, 69, 64]}, {"input": [77, 70, 92, 47, 39, 25, 99], "output": [47, 70, 92, 77, 39, 25, 99]}, {"input": [23, 25, 87, 64, 98], "output": [64, 25, 87, 23, 98]}, {"input": [29, 36, 72, 59, 94, 87, 83], "output": [59, 36, 72, 29, 94, 87, 83]}, {"input": [77, 70, 49, 91, 18, 16, 1], "output": [91, 70, 49, 77, 18, 16, 1]}, {"input": [72, 9, 9, 51, 89, 22, 67], "output": [51, 9, 9, 72, 89, 22, 67]}, {"input": [72, 72, 87, 91, 8, 27], "output": [91, 72, 87, 72, 8, 27]}, {"input": [96, 39, 53, 68, 95, 71], "output": [68, 39, 53, 96, 95, 71]}, {"input": [73, 9, 25, 73, 30, 20], "output": [73, 9, 25, 73, 30, 20]}], "ood": [], "noise": [{"input": [23, 17, 8, 43, 34, 42, 73], "output": [43, 17, 8, 23, 34, 42, 35]}, {"input": [40, 85, 40, 77, 38, 53], "output": [41, 85, 74, 40, 38, 49]}, {"input": [24, 15, 9, 38, 99, 34, 2], "output": [38, 65, 37, 29, 99, 34, 2]}, {"input": [61, 42, 63, 33, 56, 47, 87], "output": [33, 42, 63, 45, 56, 47, 87]}, {"input": [77, 72, 98, 14, 19, 37, 66], "output": [14, 72, 98, 90, 87, 37, 60]}]}, "test": [{"input": [35, 79, 23, 4, 79, 21], "output": [4, 79, 23, 35, 79, 21]}, {"input": [12, 61, 53, 96, 30, 95, 92], "output": [96, 61, 53, 12, 30, 95, 92]}, {"input": [6, 70, 94, 78, 92, 81], "output": [78, 70, 94, 6, 92, 81]}, {"input": [18, 65, 60, 77, 42, 72, 29], "output": [77, 65, 60, 18, 42, 72, 29]}, {"input": [22, 17, 54, 95, 42, 86, 82], "output": [95, 17, 54, 22, 42, 86, 82]}, {"input": [42, 84, 38, 13, 29], "output": [13, 84, 38, 42, 29]}, {"input": [67, 89, 35, 32, 2, 56, 51], "output": [32, 89, 35, 67, 2, 56, 51]}, {"input": [82, 90, 56, 42, 90, 91, 62], "output": [42, 90, 56, 82, 90, 91, 62]}, {"input": [99, 17, 2, 67, 14, 26, 56], "output": [67, 17, 2, 99, 14, 26, 56]}, {"input": [64, 31, 38, 17, 15, 79, 92], "output": [17, 31, 38, 64, 15, 79, 92]}]}
{"id": "c193", "function": "def c193(x):\n    # remove the smallest element and the largest element, output in ascending order\n    return sorted(x[1:-1])\n\n", "train": {"normal": [{"input": [12, 82, 41, 71, 36, 58, 72], "output": [36, 41, 58, 71, 82]}, {"input": [4, 94, 98, 15], "output": [94, 98]}, {"input": [57, 16, 4, 92], "output": [4, 16]}, {"input": [87, 65, 99, 45, 60, 59, 27], "output": [45, 59, 60, 65, 99]}, {"input": [45, 39, 63, 75, 63, 4], "output": [39, 63, 63, 75]}, {"input": [7, 99, 86, 11, 95, 87], "output": [11, 86, 95, 99]}, {"input": [13, 97, 48, 59, 97], "output": [48, 59, 97]}, {"input": [12, 9, 26, 80, 52, 54, 41], "output": [9, 26, 52, 54, 80]}, {"input": [25, 55, 49, 34, 23, 25, 99], "output": [23, 25, 34, 49, 55]}, {"input": [13, 18, 54, 28, 50, 32], "output": [18, 28, 50, 54]}], "ood": [], "noise": [{"input": [78, 86, 93, 69, 5, 93], "output": [89, 69, 50, 93]}, {"input": [94, 43, 48, 7], "output": [43, 43]}, {"input": [43, 80, 82, 27], "output": [80, 81]}, {"input": [72, 79, 2, 24, 79], "output": [32, 35, 79]}, {"input": [15, 37, 94, 41, 59, 51, 30], "output": [45, 41, 51, 59, 94]}]}, "test": [{"input": [68, 64, 13, 60, 91, 91, 29], "output": [13, 60, 64, 91, 91]}, {"input": [75, 78, 68, 2, 61, 21, 83], "output": [2, 21, 61, 68, 78]}, {"input": [16, 77, 97, 58], "output": [77, 97]}, {"input": [92, 50, 45, 16], "output": [45, 50]}, {"input": [40, 12, 98, 21, 97, 3], "output": [12, 21, 97, 98]}, {"input": [73, 57, 23, 51, 37, 4, 56], "output": [4, 23, 37, 51, 57]}, {"input": [33, 78, 96, 91, 73, 14, 47], "output": [14, 73, 78, 91, 96]}, {"input": [61, 65, 1, 16], "output": [1, 65]}, {"input": [79, 42, 6, 51, 33, 69, 9], "output": [6, 33, 42, 51, 69]}, {"input": [95, 29, 43, 5], "output": [29, 43]}]}
{"id": "c056", "function": "def c056(x):\n    # remove element 2\n    return x[:2] + x[3:]\n\n", "train": {"normal": [{"input": [35, 2, 58, 9], "output": [35, 2, 9]}, {"input": [41, 12, 80, 77], "output": [41, 12, 77]}, {"input": [62, 62, 57, 42], "output": [62, 62, 42]}, {"input": [97, 47, 11, 85, 99, 20], "output": [97, 47, 85, 99, 20]}, {"input": [13, 27, 94, 83, 10], "output": [13, 27, 83, 10]}, {"input": [12, 1, 46, 22, 86, 56], "output": [12, 1, 22, 86, 56]}, {"input": [14, 43, 81, 60, 35], "output": [14, 43, 60, 35]}, {"input": [0, 74, 89, 90, 17, 76, 25], "output": [0, 74, 90, 17, 76, 25]}, {"input": [71, 50, 3, 66, 26, 8], "output": [71, 50, 66, 26, 8]}, {"input": [67, 51, 55, 1, 55, 36, 77], "output": [67, 51, 1, 55, 36, 77]}], "ood": [], "noise": [{"input": [63, 67, 25, 85, 84], "output": [81, 67, 69, 84]}, {"input": [87, 78, 94, 61, 43, 89], "output": [87, 78, 52, 43, 57]}, {"input": [77, 25, 76, 99, 22], "output": [43, 25, 99, 22]}, {"input": [62, 7, 64, 7], "output": [62, 7, 16]}, {"input": [73, 43, 34, 20, 83, 68, 97], "output": [73, 78, 20, 83, 25, 97]}]}, "test": [{"input": [72, 0, 87, 60, 14], "output": [72, 0, 60, 14]}, {"input": [6, 69, 2, 74, 11], "output": [6, 69, 74, 11]}, {"input": [68, 66, 43, 38, 87], "output": [68, 66, 38, 87]}, {"input": [49, 37, 11, 91, 23, 98], "output": [49, 37, 91, 23, 98]}, {"input": [22, 35, 10, 29, 18, 3, 29], "output": [22, 35, 29, 18, 3, 29]}, {"input": [70, 70, 50, 79, 54, 20, 46], "output": [70, 70, 79, 54, 20, 46]}, {"input": [19, 40, 79, 22], "output": [19, 40, 22]}, {"input": [1, 71, 29, 77], "output": [1, 71, 77]}, {"input": [48, 19, 47, 65, 66, 99], "output": [48, 19, 65, 66, 99]}, {"input": [48, 98, 60, 57, 84, 37], "output": [48, 98, 57, 84, 37]}]}
{"id": "c028", "function": "def c028(x):\n    # remove element 1 if element 0 > element 1, else remove element 2\n    if x[0] > x[1]:\n        return x[:1] + x[2:]\n    else:\n        return x[:2] + x[3:]\n    \n", "train": {"normal": [{"input": [61, 12, 97, 27], "output": [61, 97, 27]}, {"input": [4, 8, 82, 83, 21, 98, 68, 72], "output": [4, 8, 83, 21, 98, 68, 72]}, {"input": [92, 79, 37, 29, 42], "output": [92, 37, 29, 42]}, {"input": [5, 36, 30, 27, 80], "output": [5, 36, 27, 80]}, {"input": [81, 73, 78, 74], "output": [81, 78, 74]}, {"input": [5, 77, 74, 57, 92, 39, 25], "output": [5, 77, 57, 92, 39, 25]}, {"input": [13, 90, 25, 58, 0], "output": [13, 90, 58, 0]}, {"input": [4, 63, 33, 77, 29], "output": [4, 63, 77, 29]}, {"input": [38, 78, 96, 46], "output": [38, 78, 46]}, {"input": [2, 11, 29, 21, 48, 32], "output": [2, 11, 21, 48, 32]}], "ood": [], "noise": [{"input": [54, 17, 4, 16, 40, 97, 67, 63], "output": [77, 4, 16, 40, 97, 93, 63]}, {"input": [30, 49, 75, 74, 25, 28], "output": [30, 49, 74, 25, 26]}, {"input": [73, 63, 57, 72], "output": [69, 67, 72]}, {"input": [27, 11, 36, 77], "output": [27, 66, 77]}, {"input": [51, 48, 72, 1], "output": [58, 3, 1]}]}, "test": [{"input": [87, 72, 88, 62], "output": [87, 88, 62]}, {"input": [56, 37, 93, 16], "output": [56, 93, 16]}, {"input": [85, 7, 87, 8], "output": [85, 87, 8]}, {"input": [10, 65, 44, 30, 37], "output": [10, 65, 30, 37]}, {"input": [68, 55, 75, 9], "output": [68, 75, 9]}, {"input": [4, 38, 63, 1], "output": [4, 38, 1]}, {"input": [85, 57, 43, 48, 32, 13, 71], "output": [85, 43, 48, 32, 13, 71]}, {"input": [10, 14, 59, 4, 49, 69], "output": [10, 14, 4, 49, 69]}, {"input": [80, 96, 58, 64, 43, 42, 98, 32], "output": [80, 96, 64, 43, 42, 98, 32]}, {"input": [7, 59, 81, 48, 54], "output": [7, 59, 48, 54]}]}
{"id": "c220", "function": "def c220(x):\n    # if input length is even, double each element, else triple each element\n    if len(x) % 2 == 0:\n        return [i*2 for i in x]\n    else:\n        return [i*3 for i in x]\n\n", "train": {"normal": [{"input": [33, 24, 30, 8], "output": [66, 48, 60, 16]}, {"input": [97, 40, 87, 24, 35], "output": [291, 120, 261, 72, 105]}, {"input": [87, 23, 88, 88, 11], "output": [261, 69, 264, 264, 33]}, {"input": [14, 1, 56, 80, 76, 59], "output": [28, 2, 112, 160, 152, 118]}, {"input": [80, 65, 61, 37], "output": [160, 130, 122, 74]}, {"input": [29, 44, 43, 81, 11, 88, 98], "output": [87, 132, 129, 243, 33, 264, 294]}, {"input": [75, 20, 8, 20], "output": [150, 40, 16, 40]}, {"input": [13, 30, 62, 75, 56], "output": [39, 90, 186, 225, 168]}, {"input": [16, 65, 99, 95, 90, 17], "output": [32, 130, 198, 190, 180, 34]}, {"input": [50, 77, 31, 41, 99, 49], "output": [100, 154, 62, 82, 198, 98]}], "ood": [], "noise": [{"input": [11, 80, 80, 94, 4, 27], "output": [22, 160, 160, 188, 8, 143]}, {"input": [58, 8, 8, 14, 68], "output": [151, 24, 24, 42, 204]}, {"input": [25, 8, 55, 77], "output": [50, 16, 38, 109]}, {"input": [31, 63, 31, 84, 86], "output": [118, 189, 93, 252, 258]}, {"input": [98, 90, 96, 81, 93, 21], "output": [196, 180, 192, 162, 183, 42]}]}, "test": [{"input": [22, 56, 42, 64, 40, 2, 65], "output": [66, 168, 126, 192, 120, 6, 195]}, {"input": [29, 66, 28, 50], "output": [58, 132, 56, 100]}, {"input": [66, 9, 31, 25], "output": [132, 18, 62, 50]}, {"input": [29, 89, 25, 89, 4], "output": [87, 267, 75, 267, 12]}, {"input": [0, 60, 43, 88, 64], "output": [0, 180, 129, 264, 192]}, {"input": [24, 17, 19, 60], "output": [48, 34, 38, 120]}, {"input": [81, 7, 83, 29, 97, 79], "output": [162, 14, 166, 58, 194, 158]}, {"input": [96, 83, 3, 23, 35, 68], "output": [192, 166, 6, 46, 70, 136]}, {"input": [52, 75, 41, 25, 37, 95, 94], "output": [156, 225, 123, 75, 111, 285, 282]}, {"input": [98, 42, 28, 70, 50, 79, 22], "output": [294, 126, 84, 210, 150, 237, 66]}]}
{"id": "c241", "function": "def c241(x):\n    # number of even elements\n    return [len([i for i in x if i % 2 == 0])]\n\n", "train": {"normal": [{"input": [50, 26, 12, 7, 1], "output": [3]}, {"input": [27, 66, 65, 48], "output": [2]}, {"input": [70, 3, 98, 78, 77], "output": [3]}, {"input": [7, 43, 77, 52], "output": [1]}, {"input": [92, 44, 74, 26, 8], "output": [5]}, {"input": [3, 93, 1, 84], "output": [1]}, {"input": [30, 3, 9, 51], "output": [1]}, {"input": [2, 50, 3, 9, 25], "output": [2]}, {"input": [65, 56, 50, 56, 53], "output": [3]}, {"input": [3, 88, 78, 60, 7], "output": [3]}], "ood": [], "noise": [{"input": [91, 69, 26, 59], "output": [2]}, {"input": [85, 48, 30, 82, 47], "output": [4]}, {"input": [47, 15, 15, 5], "output": [1]}, {"input": [0, 11, 46, 62, 94, 45], "output": [5]}, {"input": [94, 98, 15, 74, 71, 51], "output": [4]}]}, "test": [{"input": [59, 17, 86, 79, 85, 31], "output": [1]}, {"input": [54, 50, 17, 81, 83], "output": [2]}, {"input": [68, 95, 36, 46, 9, 84], "output": [4]}, {"input": [36, 50, 74, 0, 56, 33], "output": [5]}, {"input": [99, 11, 43, 40, 29, 74, 40], "output": [3]}, {"input": [15, 59, 80, 80, 61], "output": [2]}, {"input": [45, 12, 41, 58, 29, 45], "output": [2]}, {"input": [65, 23, 45, 49, 63, 2, 64], "output": [2]}, {"input": [54, 4, 63, 34, 14, 18], "output": [5]}, {"input": [64, 10, 40, 72, 81, 38], "output": [5]}]}
{"id": "c060", "function": "def c060(x):\n    # element 2,1,0,3,4,6 remove the rest\n    return [x[2], x[1], x[0], x[3], x[4], x[6]]\n\n", "train": {"normal": [{"input": [56, 59, 48, 74, 8, 88, 58, 86, 36, 36], "output": [48, 59, 56, 74, 8, 58]}, {"input": [83, 29, 27, 93, 47, 38, 80, 24, 81], "output": [27, 29, 83, 93, 47, 80]}, {"input": [47, 11, 94, 9, 69, 44, 15, 94], "output": [94, 11, 47, 9, 69, 15]}, {"input": [94, 17, 32, 48, 97, 18, 24, 95, 27], "output": [32, 17, 94, 48, 97, 24]}, {"input": [88, 12, 81, 16, 28, 41, 74, 62, 36], "output": [81, 12, 88, 16, 28, 74]}, {"input": [91, 14, 82, 30, 13, 14, 27, 86, 28], "output": [82, 14, 91, 30, 13, 27]}, {"input": [60, 85, 2, 77, 3, 6, 16, 81, 57, 99], "output": [2, 85, 60, 77, 3, 16]}, {"input": [88, 70, 43, 23, 41, 64, 0, 21, 38], "output": [43, 70, 88, 23, 41, 0]}, {"input": [60, 72, 26, 35, 62, 74, 85, 48, 80], "output": [26, 72, 60, 35, 62, 85]}, {"input": [72, 69, 85, 22, 1, 85, 5, 65], "output": [85, 69, 72, 22, 1, 5]}], "ood": [], "noise": [{"input": [35, 42, 39, 75, 61, 60, 70, 28], "output": [39, 42, 67, 45, 53, 70]}, {"input": [30, 32, 32, 49, 69, 49, 99, 52], "output": [32, 32, 30, 49, 69, 57]}, {"input": [98, 54, 13, 28, 56, 3, 38, 50, 59], "output": [13, 54, 36, 28, 56, 56]}, {"input": [44, 65, 80, 44, 45, 62, 79, 36], "output": [80, 65, 44, 80, 61, 79]}, {"input": [5, 0, 42, 93, 79, 66, 93, 1, 20, 56], "output": [42, 0, 72, 56, 60, 93]}]}, "test": [{"input": [27, 7, 9, 74, 67, 16, 99, 95], "output": [9, 7, 27, 74, 67, 99]}, {"input": [40, 27, 95, 74, 22, 18, 83, 81], "output": [95, 27, 40, 74, 22, 83]}, {"input": [48, 53, 33, 30, 57, 50, 19, 56, 20, 74], "output": [33, 53, 48, 30, 57, 19]}, {"input": [95, 66, 47, 7, 35, 86, 37, 28, 60, 92], "output": [47, 66, 95, 7, 35, 37]}, {"input": [61, 18, 34, 62, 44, 32, 52, 89, 85, 26], "output": [34, 18, 61, 62, 44, 52]}, {"input": [62, 44, 52, 8, 92, 94, 94, 34, 36, 9], "output": [52, 44, 62, 8, 92, 94]}, {"input": [7, 83, 19, 30, 58, 22, 4, 3], "output": [19, 83, 7, 30, 58, 4]}, {"input": [4, 65, 52, 39, 68, 25, 40, 84, 29], "output": [52, 65, 4, 39, 68, 40]}, {"input": [80, 82, 64, 58, 90, 59, 90, 76, 97], "output": [64, 82, 80, 58, 90, 90]}, {"input": [17, 85, 86, 82, 77, 74, 75, 68, 34, 45], "output": [86, 85, 17, 82, 77, 75]}]}
{"id": "c169", "function": "def c169(x):\n    # second largest element\n    return [sorted(x)[-2]]\n\n", "train": {"normal": [{"input": [46, 80, 82, 85, 17, 6], "output": [82]}, {"input": [84, 1, 38, 79, 78, 35], "output": [79]}, {"input": [93, 44, 74, 38], "output": [74]}, {"input": [77, 82, 85, 36, 63, 27], "output": [82]}, {"input": [88, 56, 93, 96, 8, 79], "output": [93]}, {"input": [11, 33, 64, 13, 50, 4], "output": [50]}, {"input": [30, 16, 41, 88, 84], "output": [84]}, {"input": [99, 25, 70, 91, 41, 88, 46], "output": [91]}, {"input": [25, 50, 57, 68, 68], "output": [68]}, {"input": [59, 95, 9, 65], "output": [65]}], "ood": [], "noise": [{"input": [93, 53, 10, 20, 72, 1, 99], "output": [94]}, {"input": [78, 39, 47, 87, 33, 89, 20], "output": [88]}, {"input": [57, 72, 15, 14, 34], "output": [58]}, {"input": [96, 85, 50, 83], "output": [86]}, {"input": [8, 35, 79, 23, 40], "output": [41]}]}, "test": [{"input": [26, 1, 85, 81, 16, 81], "output": [81]}, {"input": [6, 24, 55, 4, 25, 20], "output": [25]}, {"input": [63, 65, 32, 16, 31], "output": [63]}, {"input": [71, 94, 44, 72, 68, 64, 91], "output": [91]}, {"input": [7, 78, 65, 46, 75, 71, 83], "output": [78]}, {"input": [85, 77, 72, 79, 14, 68], "output": [79]}, {"input": [97, 88, 62, 12, 68, 65], "output": [88]}, {"input": [38, 82, 0, 45, 5, 60], "output": [60]}, {"input": [94, 34, 43, 68, 4, 81, 94], "output": [94]}, {"input": [46, 88, 38, 6, 74, 54, 42], "output": [74]}]}
{"id": "c057", "function": "def c057(x):\n    # insert a 4 as element 2\n    return x[:2] + [4] + x[2:]\n\n", "train": {"normal": [{"input": [99, 36, 12, 90, 29], "output": [99, 36, 4, 12, 90, 29]}, {"input": [44, 25, 40, 42], "output": [44, 25, 4, 40, 42]}, {"input": [10, 71, 98, 45, 1, 9, 1], "output": [10, 71, 4, 98, 45, 1, 9, 1]}, {"input": [3, 60, 75, 87, 97, 75], "output": [3, 60, 4, 75, 87, 97, 75]}, {"input": [24, 22, 33, 51], "output": [24, 22, 4, 33, 51]}, {"input": [5, 64, 37, 22, 6, 49], "output": [5, 64, 4, 37, 22, 6, 49]}, {"input": [79, 39, 74, 66], "output": [79, 39, 4, 74, 66]}, {"input": [78, 22, 78, 4, 24], "output": [78, 22, 4, 78, 4, 24]}, {"input": [26, 32, 18, 24, 18, 21], "output": [26, 32, 4, 18, 24, 18, 21]}, {"input": [63, 19, 8, 37, 4], "output": [63, 19, 4, 8, 37, 4]}], "ood": [], "noise": [{"input": [73, 57, 69, 56, 65, 28], "output": [73, 32, 4, 69, 56, 65, 28]}, {"input": [55, 69, 52, 2, 37, 22], "output": [55, 69, 4, 64, 41, 37, 22]}, {"input": [17, 48, 97, 48, 81], "output": [17, 48, 43, 97, 48, 35]}, {"input": [45, 85, 99, 6], "output": [78, 85, 4, 99, 6]}, {"input": [69, 44, 63, 42, 28, 66, 44], "output": [69, 44, 4, 63, 42, 28, 66, 15]}]}, "test": [{"input": [39, 69, 82, 27, 95, 55], "output": [39, 69, 4, 82, 27, 95, 55]}, {"input": [51, 89, 12, 16, 29, 72, 98], "output": [51, 89, 4, 12, 16, 29, 72, 98]}, {"input": [25, 53, 10, 43, 80], "output": [25, 53, 4, 10, 43, 80]}, {"input": [83, 76, 54, 65, 40, 45], "output": [83, 76, 4, 54, 65, 40, 45]}, {"input": [53, 45, 33, 40, 22, 53], "output": [53, 45, 4, 33, 40, 22, 53]}, {"input": [28, 84, 44, 36, 63, 30, 63], "output": [28, 84, 4, 44, 36, 63, 30, 63]}, {"input": [48, 36, 23, 41, 26, 85, 67], "output": [48, 36, 4, 23, 41, 26, 85, 67]}, {"input": [51, 51, 60, 6], "output": [51, 51, 4, 60, 6]}, {"input": [57, 51, 0, 81, 45], "output": [57, 51, 4, 0, 81, 45]}, {"input": [15, 29, 30, 83], "output": [15, 29, 4, 30, 83]}]}
{"id": "c150", "function": "def c150(x):\n    # count from first element to each element if the element is greater than the first element\n    res = []\n    for i in x:\n        if i > x[0]:\n            res += list(range(x[0], i+1))\n        else:\n            res.append(i)\n    return res\n\n", "train": {"normal": [{"input": [37, 20, 47, 8, 5], "output": [37, 20, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 8, 5]}, {"input": [28, 29, 2], "output": [28, 28, 29, 2]}, {"input": [83, 19, 7, 32, 9, 86], "output": [83, 19, 7, 32, 9, 83, 84, 85, 86]}, {"input": [13, 1, 18], "output": [13, 1, 13, 14, 15, 16, 17, 18]}, {"input": [1, 2, 3, 4, 5], "output": [1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5]}, {"input": [25, 30, 20, 23], "output": [25, 25, 26, 27, 28, 29, 30, 20, 23]}, {"input": [24, 26, 27, 4], "output": [24, 24, 25, 26, 24, 25, 26, 27, 4]}, {"input": [77, 80, 70, 82, 55, 40], "output": [77, 77, 78, 79, 80, 70, 77, 78, 79, 80, 81, 82, 55, 40]}, {"input": [89, 50, 91, 75], "output": [89, 50, 89, 90, 91, 75]}, {"input": [33, 32, 20, 36, 38], "output": [33, 32, 20, 33, 34, 35, 36, 33, 34, 35, 36, 37, 38]}], "ood": [], "noise": [{"input": [88, 75, 90, 85], "output": [88, 75, 85, 86, 90, 83]}, {"input": [12, 14, 10, 18], "output": [12, 12, 13, 14, 10, 12, 13, 14, 15, 16, 17, 14]}, {"input": [22, 22, 23, 21], "output": [22, 21, 22, 23, 21]}, {"input": [66, 65, 67, 70, 38], "output": [66, 65, 66, 67, 66, 64, 68, 69, 55, 38]}, {"input": [44, 45, 46, 47, 48], "output": [44, 47, 48, 44, 45, 44, 44, 45, 46, 47, 46, 46, 46, 47, 48]}]}, "test": [{"input": [90, 85, 80, 75, 92, 94], "output": [90, 85, 80, 75, 90, 91, 92, 90, 91, 92, 93, 94]}, {"input": [37, 12, 45, 23], "output": [37, 12, 37, 38, 39, 40, 41, 42, 43, 44, 45, 23]}, {"input": [46, 15, 38, 52, 47], "output": [46, 15, 38, 46, 47, 48, 49, 50, 51, 52, 46, 47]}, {"input": [99, 10, 57, 14, 39], "output": [99, 10, 57, 14, 39]}, {"input": [5, 13, 2, 7, 6], "output": [5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 5, 6, 7, 5, 6]}, {"input": [73, 28, 44, 80], "output": [73, 28, 44, 73, 74, 75, 76, 77, 78, 79, 80]}, {"input": [25, 28, 27, 3, 5], "output": [25, 25, 26, 27, 28, 25, 26, 27, 3, 5]}, {"input": [5, 6, 7, 8], "output": [5, 5, 6, 5, 6, 7, 5, 6, 7, 8]}, {"input": [19, 24, 2, 3, 22], "output": [19, 19, 20, 21, 22, 23, 24, 2, 3, 19, 20, 21, 22]}, {"input": [6, 8, 9, 6, 7], "output": [6, 6, 7, 8, 6, 7, 8, 9, 6, 6, 7]}]}
{"id": "c033", "function": "def c033(x):\n    # swap element 0 and 2\n    x[0], x[2] = x[2], x[0]\n    return x\n\n", "train": {"normal": [{"input": [94, 26, 75, 47, 6, 64, 43], "output": [75, 26, 94, 47, 6, 64, 43]}, {"input": [75, 76, 9, 40, 23, 37, 34], "output": [9, 76, 75, 40, 23, 37, 34]}, {"input": [28, 66, 56, 68, 88, 90, 0], "output": [56, 66, 28, 68, 88, 90, 0]}, {"input": [65, 91, 98, 30], "output": [98, 91, 65, 30]}, {"input": [42, 97, 46, 24], "output": [46, 97, 42, 24]}, {"input": [44, 61, 69, 1, 11, 83], "output": [69, 61, 44, 1, 11, 83]}, {"input": [89, 18, 76, 80, 75, 32, 68], "output": [76, 18, 89, 80, 75, 32, 68]}, {"input": [60, 16, 36, 11, 35, 70], "output": [36, 16, 60, 11, 35, 70]}, {"input": [82, 7, 38, 19, 65], "output": [38, 7, 82, 19, 65]}, {"input": [23, 16, 22, 11, 83, 16, 81], "output": [22, 16, 23, 11, 83, 16, 81]}], "ood": [], "noise": [{"input": [74, 80, 95, 34, 83, 82], "output": [95, 48, 74, 34, 83, 89]}, {"input": [83, 26, 94, 69, 94, 4, 44], "output": [94, 26, 83, 69, 94, 29, 44]}, {"input": [46, 23, 99, 86], "output": [99, 68, 46, 86]}, {"input": [63, 1, 15, 1], "output": [15, 20, 63, 1]}, {"input": [67, 96, 8, 27], "output": [38, 96, 67, 20]}]}, "test": [{"input": [20, 44, 51, 96, 30, 97], "output": [51, 44, 20, 96, 30, 97]}, {"input": [80, 31, 1, 55, 92, 76, 16], "output": [1, 31, 80, 55, 92, 76, 16]}, {"input": [7, 96, 12, 44], "output": [12, 96, 7, 44]}, {"input": [47, 6, 46, 80, 25, 14, 5], "output": [46, 6, 47, 80, 25, 14, 5]}, {"input": [75, 41, 82, 69, 54, 76, 14], "output": [82, 41, 75, 69, 54, 76, 14]}, {"input": [27, 7, 6, 17, 47, 99, 20], "output": [6, 7, 27, 17, 47, 99, 20]}, {"input": [9, 92, 83, 45], "output": [83, 92, 9, 45]}, {"input": [93, 7, 75, 60, 23, 85], "output": [75, 7, 93, 60, 23, 85]}, {"input": [85, 88, 66, 56, 31, 56], "output": [66, 88, 85, 56, 31, 56]}, {"input": [10, 62, 11, 44, 19], "output": [11, 62, 10, 44, 19]}]}
{"id": "c218", "function": "def c218(x):\n    # keep only second element and following equal to the first element\n    return [x[1]] + [i for i in x[2:] if i == x[0]]\n\n", "train": {"normal": [{"input": [28, 62, 99, 28, 79, 10, 28, 70, 8, 26], "output": [62, 28, 28]}, {"input": [72, 62, 23, 72, 32], "output": [62, 72]}, {"input": [14, 14, 24, 31, 61, 72, 39], "output": [14]}, {"input": [5, 91, 53, 74, 25, 13, 5, 2], "output": [91, 5]}, {"input": [67, 14, 71, 67, 67, 62, 24, 86, 45], "output": [14, 67, 67]}, {"input": [20, 84, 13, 20, 69], "output": [84, 20]}, {"input": [65, 88, 65, 82, 65, 0], "output": [88, 65, 65]}, {"input": [52, 58, 40, 84, 85, 5, 52, 44, 48, 52], "output": [58, 52, 52]}, {"input": [36, 36, 61, 79, 13, 39, 92, 37], "output": [36]}, {"input": [65, 16, 65, 65, 65, 6, 13, 99, 32, 25], "output": [16, 65, 65, 65]}], "ood": [], "noise": [{"input": [76, 29, 86, 1, 70, 11, 92, 76], "output": [29, 36]}, {"input": [15, 3, 15, 64, 99, 60], "output": [3, 8]}, {"input": [50, 35, 96, 50, 50, 88], "output": [35, 49, 44]}, {"input": [20, 92, 20, 20, 51, 0, 9, 53], "output": [86, 20, 53]}, {"input": [15, 35, 42, 15, 13], "output": [35, 34]}]}, "test": [{"input": [51, 42, 67, 75, 51, 51], "output": [42, 51, 51]}, {"input": [22, 96, 22, 50, 16, 86, 22, 39, 89], "output": [96, 22, 22]}, {"input": [72, 72, 17, 50, 9, 19, 41], "output": [72]}, {"input": [30, 81, 30, 98, 53, 30, 1, 31], "output": [81, 30, 30]}, {"input": [60, 85, 46, 85, 60, 60, 32, 36, 40], "output": [85, 60, 60]}, {"input": [59, 92, 67, 59, 59, 12, 94], "output": [92, 59, 59]}, {"input": [32, 30, 77, 58, 32, 32], "output": [30, 32, 32]}, {"input": [37, 94, 75, 62, 18, 37, 62], "output": [94, 37]}, {"input": [74, 72, 66, 60, 48, 74, 99, 63], "output": [72, 74]}, {"input": [57, 90, 97, 22, 14, 57], "output": [90, 57]}]}
{"id": "c136", "function": "def c136(x):\n    # remove the first occurrence of the largest element, keep the rest\n    x.remove(max(x))\n    return x\n\n", "train": {"normal": [{"input": [9, 23, 35, 49], "output": [9, 23, 35]}, {"input": [50, 87, 48, 96, 0, 38], "output": [50, 87, 48, 0, 38]}, {"input": [25, 12, 39, 86, 95, 96, 8], "output": [25, 12, 39, 86, 95, 8]}, {"input": [57, 41, 78, 19], "output": [57, 41, 19]}, {"input": [83, 83, 21, 33, 43, 12], "output": [83, 21, 33, 43, 12]}, {"input": [22, 55, 32, 18, 77, 75], "output": [22, 55, 32, 18, 75]}, {"input": [81, 66, 77, 41, 67, 14], "output": [66, 77, 41, 67, 14]}, {"input": [68, 32, 82, 29, 21], "output": [68, 32, 29, 21]}, {"input": [16, 44, 8, 59, 63, 63], "output": [16, 44, 8, 59, 63]}, {"input": [0, 83, 60, 42, 74, 15, 18, 72], "output": [0, 60, 42, 74, 15, 18, 72]}], "ood": [], "noise": [{"input": [3, 47, 57, 47, 77], "output": [3, 3, 57, 47]}, {"input": [79, 41, 26, 9, 38], "output": [41, 14, 9, 38]}, {"input": [51, 37, 13, 29, 88, 58, 88, 70, 55], "output": [51, 37, 13, 29, 58, 88, 70, 82]}, {"input": [12, 53, 33, 48, 37], "output": [12, 44, 48, 14]}, {"input": [84, 57, 48, 59], "output": [48, 48, 51]}]}, "test": [{"input": [23, 91, 91, 88, 81, 58, 89, 45, 82], "output": [23, 91, 88, 81, 58, 89, 45, 82]}, {"input": [50, 80, 26, 9, 80, 15], "output": [50, 26, 9, 80, 15]}, {"input": [51, 27, 37, 19, 76, 58, 88, 92], "output": [51, 27, 37, 19, 76, 58, 88]}, {"input": [35, 33, 55, 59, 67], "output": [35, 33, 55, 59]}, {"input": [76, 62, 23, 23, 75, 37, 76, 32, 37], "output": [62, 23, 23, 75, 37, 76, 32, 37]}, {"input": [44, 78, 92, 92, 27, 87, 31, 53], "output": [44, 78, 92, 27, 87, 31, 53]}, {"input": [35, 92, 74, 28, 81, 67], "output": [35, 74, 28, 81, 67]}, {"input": [85, 97, 95, 97, 10], "output": [85, 95, 97, 10]}, {"input": [13, 11, 88, 80, 55, 1, 79, 56], "output": [13, 11, 80, 55, 1, 79, 56]}, {"input": [63, 44, 41, 3, 63, 58], "output": [44, 41, 3, 63, 58]}]}
{"id": "c083", "function": "def c083(x):\n    # remove all but element 6\n    return [x[6]]\n\n", "train": {"normal": [{"input": [69, 64, 74, 15, 15, 38, 14], "output": [14]}, {"input": [52, 89, 1, 81, 36, 17, 53, 30, 82], "output": [53]}, {"input": [33, 61, 63, 3, 8, 1, 35, 93], "output": [35]}, {"input": [34, 10, 17, 59, 99, 43, 27, 23], "output": [27]}, {"input": [96, 56, 12, 93, 37, 32, 61, 18], "output": [61]}, {"input": [70, 79, 47, 79, 40, 31, 68, 90, 52], "output": [68]}, {"input": [8, 62, 99, 1, 35, 30, 19, 85, 90], "output": [19]}, {"input": [60, 71, 27, 24, 49, 59, 78], "output": [78]}, {"input": [88, 8, 42, 6, 55, 8, 50, 82], "output": [50]}, {"input": [59, 53, 7, 79, 52, 1, 78], "output": [78]}], "ood": [], "noise": [{"input": [70, 7, 19, 31, 81, 36, 20, 53], "output": [21]}, {"input": [20, 64, 68, 70, 31, 23, 48], "output": [49]}, {"input": [82, 78, 59, 38, 87, 72, 43, 46], "output": [44]}, {"input": [90, 11, 21, 33, 48, 97, 51], "output": [52]}, {"input": [88, 70, 16, 67, 61, 87, 22, 99, 16], "output": [23]}]}, "test": [{"input": [54, 12, 64, 41, 47, 5, 15], "output": [15]}, {"input": [3, 73, 47, 9, 27, 66, 49], "output": [49]}, {"input": [93, 88, 64, 69, 91, 28, 53], "output": [53]}, {"input": [15, 79, 97, 61, 99, 34, 88], "output": [88]}, {"input": [95, 30, 56, 16, 99, 34, 19, 75], "output": [19]}, {"input": [89, 79, 92, 73, 57, 67, 25, 44], "output": [25]}, {"input": [82, 1, 64, 58, 16, 2, 24, 63], "output": [24]}, {"input": [55, 5, 0, 19, 37, 44, 79, 59], "output": [79]}, {"input": [39, 59, 74, 90, 18, 5, 64, 33, 62], "output": [64]}, {"input": [53, 83, 78, 33, 61, 75, 59, 68, 92], "output": [59]}]}
{"id": "c019", "function": "def c019(x):\n    # replace element 5 with a 3 if there is an element 5\n    if len(x) > 5:\n        x[4] = 3\n    return x\n\n", "train": {"normal": [{"input": [62, 74, 3, 54, 47], "output": [62, 74, 3, 54, 47]}, {"input": [4, 33, 60, 77, 96], "output": [4, 33, 60, 77, 96]}, {"input": [57, 52, 74, 57], "output": [57, 52, 74, 57]}, {"input": [99, 72, 78], "output": [99, 72, 78]}, {"input": [95, 87, 8, 21, 52, 82, 90], "output": [95, 87, 8, 21, 3, 82, 90]}, {"input": [12, 96, 9, 82, 3, 86, 84], "output": [12, 96, 9, 82, 3, 86, 84]}, {"input": [19, 39, 44, 75, 11, 50], "output": [19, 39, 44, 75, 3, 50]}, {"input": [54, 13, 87, 74, 25], "output": [54, 13, 87, 74, 25]}, {"input": [45, 3, 18, 5, 65, 38], "output": [45, 3, 18, 5, 3, 38]}, {"input": [41, 0, 49, 17, 50], "output": [41, 0, 49, 17, 50]}], "ood": [], "noise": [{"input": [35, 50, 43, 54, 22, 48, 3], "output": [52, 50, 43, 10, 3, 48, 41]}, {"input": [64, 94, 47, 47, 51, 76], "output": [60, 94, 47, 47, 83, 56]}, {"input": [91, 92, 50, 21], "output": [91, 92, 58, 21]}, {"input": [49, 8, 55, 63, 59, 9], "output": [9, 59, 55, 63, 30, 9]}, {"input": [15, 21, 6, 49, 45, 78], "output": [29, 21, 6, 71, 3, 65]}]}, "test": [{"input": [88, 92, 94], "output": [88, 92, 94]}, {"input": [72, 39, 15, 7, 80, 52, 19], "output": [72, 39, 15, 7, 3, 52, 19]}, {"input": [69, 30, 70, 81], "output": [69, 30, 70, 81]}, {"input": [55, 20, 60, 63], "output": [55, 20, 60, 63]}, {"input": [78, 79, 41, 28, 89], "output": [78, 79, 41, 28, 89]}, {"input": [11, 0, 27, 30, 99], "output": [11, 0, 27, 30, 99]}, {"input": [52, 86, 22, 19], "output": [52, 86, 22, 19]}, {"input": [78, 77, 84, 70, 78], "output": [78, 77, 84, 70, 78]}, {"input": [36, 92, 98, 32], "output": [36, 92, 98, 32]}, {"input": [75, 48, 37, 35, 24, 31, 16], "output": [75, 48, 37, 35, 3, 31, 16]}]}
{"id": "c203", "function": "def c203(x):\n    # the first M positive multiples of the smallest element, M is the length of the input\n    return [min(x)*i for i in range(1, len(x)+1)]\n\n", "train": {"normal": [{"input": [6, 22, 21, 10, 15, 19, 9], "output": [6, 12, 18, 24, 30, 36, 42]}, {"input": [6, 2, 20, 2, 25], "output": [2, 4, 6, 8, 10]}, {"input": [19, 18, 20, 13, 11], "output": [11, 22, 33, 44, 55]}, {"input": [6, 11, 12, 20, 3], "output": [3, 6, 9, 12, 15]}, {"input": [6, 23, 13, 25, 17, 3], "output": [3, 6, 9, 12, 15, 18]}, {"input": [3, 20, 1, 23], "output": [1, 2, 3, 4]}, {"input": [16, 13, 13, 19, 12, 14], "output": [12, 24, 36, 48, 60, 72]}, {"input": [20, 15, 2, 23, 5, 19, 17], "output": [2, 4, 6, 8, 10, 12, 14]}, {"input": [23, 1, 15, 9, 21], "output": [1, 2, 3, 4, 5]}, {"input": [4, 18, 3, 4, 16], "output": [3, 6, 9, 12, 15]}], "ood": [], "noise": [{"input": [20, 1, 21, 17], "output": [4, 2, 3, 4]}, {"input": [15, 22, 3, 1, 18, 16], "output": [2, 2, 3, 3, 5, 2]}, {"input": [16, 2, 5, 16, 2], "output": [2, 4, 6, 8, 5]}, {"input": [19, 7, 4, 7, 11], "output": [4, 16, 4, 16, 20]}, {"input": [3, 18, 12, 12, 15], "output": [3, 3, 9, 12, 14]}]}, "test": [{"input": [20, 17, 6, 20], "output": [6, 12, 18, 24]}, {"input": [21, 21, 1, 19, 11], "output": [1, 2, 3, 4, 5]}, {"input": [17, 16, 9, 14, 1, 12, 23], "output": [1, 2, 3, 4, 5, 6, 7]}, {"input": [13, 24, 17, 24, 6], "output": [6, 12, 18, 24, 30]}, {"input": [10, 4, 1, 15], "output": [1, 2, 3, 4]}, {"input": [17, 19, 25, 22, 18, 24], "output": [17, 34, 51, 68, 85, 102]}, {"input": [23, 3, 6, 12, 21, 4, 14], "output": [3, 6, 9, 12, 15, 18, 21]}, {"input": [6, 25, 14, 24, 17, 10, 19], "output": [6, 12, 18, 24, 30, 36, 42]}, {"input": [15, 10, 4, 4, 5, 3], "output": [3, 6, 9, 12, 15, 18]}, {"input": [14, 7, 21, 9, 10], "output": [7, 14, 21, 28, 35]}]}
{"id": "c115", "function": "def c115(x):\n    # the unique elements, prepended and appended by their sum\n    res = list(set(x))\n    return [sum(res)] + res + [sum(res)]\n\n", "train": {"normal": [{"input": [12, 6, 14, 12, 5, 26, 14], "output": [63, 5, 6, 12, 14, 26, 63]}, {"input": [28, 19, 7, 19], "output": [54, 19, 28, 7, 54]}, {"input": [0, 10, 22, 10, 17, 10, 5], "output": [54, 0, 5, 10, 17, 22, 54]}, {"input": [12, 20, 0, 7], "output": [39, 0, 12, 20, 7, 39]}, {"input": [3, 3, 20, 13, 11, 18, 3], "output": [65, 3, 11, 13, 18, 20, 65]}, {"input": [10, 1, 28, 10, 12, 12], "output": [51, 1, 10, 28, 12, 51]}, {"input": [25, 22, 15, 30], "output": [92, 25, 30, 22, 15, 92]}, {"input": [6, 6, 2, 23, 6, 20, 8, 17, 4], "output": [80, 2, 4, 6, 8, 17, 20, 23, 80]}, {"input": [25, 15, 15, 25, 18, 27, 22], "output": [107, 15, 18, 22, 25, 27, 107]}, {"input": [1, 21, 25, 25], "output": [47, 1, 21, 25, 47]}], "ood": [], "noise": [{"input": [8, 8, 21, 15, 14, 14, 21, 27, 16], "output": [101, 8, 14, 15, 80, 21, 45, 101]}, {"input": [25, 25, 26, 0, 5, 13], "output": [69, 0, 6, 13, 25, 26, 69]}, {"input": [0, 27, 23, 30, 23], "output": [80, 0, 13, 58, 23, 80]}, {"input": [29, 0, 26, 1, 12, 14], "output": [82, 0, 1, 63, 14, 26, 29, 82]}, {"input": [17, 20, 11, 20, 20, 7, 29], "output": [81, 7, 11, 17, 20, 15, 77]}]}, "test": [{"input": [3, 1, 1, 28, 1, 6, 3, 12], "output": [50, 1, 3, 6, 12, 28, 50]}, {"input": [11, 29, 9, 0, 1, 13], "output": [63, 0, 1, 9, 11, 13, 29, 63]}, {"input": [15, 22, 22, 22, 29, 20], "output": [86, 20, 29, 22, 15, 86]}, {"input": [29, 15, 14, 6, 15, 6, 21], "output": [85, 6, 14, 15, 21, 29, 85]}, {"input": [8, 8, 0, 8, 8, 23], "output": [31, 8, 0, 23, 31]}, {"input": [5, 22, 8, 22, 6, 28], "output": [69, 5, 6, 8, 22, 28, 69]}, {"input": [19, 13, 22, 16, 9], "output": [79, 9, 13, 16, 19, 22, 79]}, {"input": [28, 8, 29, 28], "output": [65, 8, 28, 29, 65]}, {"input": [4, 21, 25, 23, 4, 4, 6, 14, 21], "output": [93, 4, 6, 14, 21, 23, 25, 93]}, {"input": [25, 7, 22, 25], "output": [54, 25, 22, 7, 54]}]}
{"id": "c207", "function": "def c207(x):\n    # element-wise sum of the input and the reverse of the input\n    return [i+j for i, j in zip(x, x[::-1])]\n\n", "train": {"normal": [{"input": [22, 50, 23, 5, 14], "output": [36, 55, 46, 55, 36]}, {"input": [46, 48, 42, 26, 46], "output": [92, 74, 84, 74, 92]}, {"input": [45, 31, 15, 32, 7, 18], "output": [63, 38, 47, 47, 38, 63]}, {"input": [9, 45, 10, 25, 35, 45], "output": [54, 80, 35, 35, 80, 54]}, {"input": [10, 13, 2, 24, 22, 39, 29], "output": [39, 52, 24, 48, 24, 52, 39]}, {"input": [31, 30, 25, 12, 33, 47, 26], "output": [57, 77, 58, 24, 58, 77, 57]}, {"input": [6, 23, 19, 23, 5, 20], "output": [26, 28, 42, 42, 28, 26]}, {"input": [24, 22, 34, 27, 47, 0, 16], "output": [40, 22, 81, 54, 81, 22, 40]}, {"input": [3, 1, 44, 15, 47], "output": [50, 16, 88, 16, 50]}, {"input": [48, 10, 47, 44], "output": [92, 57, 57, 92]}], "ood": [], "noise": [{"input": [44, 15, 20, 31, 12], "output": [56, 46, 40, 41, 56]}, {"input": [42, 19, 5, 28, 45, 5, 16], "output": [58, 24, 27, 56, 51, 47, 58]}, {"input": [45, 0, 43, 11, 24, 46], "output": [91, 24, 54, 35, 24, 91]}, {"input": [12, 6, 20, 50], "output": [62, 50, 26, 62]}, {"input": [19, 11, 22, 38, 3], "output": [22, 49, 44, 40, 22]}]}, "test": [{"input": [39, 15, 22, 2, 41, 29], "output": [68, 56, 24, 24, 56, 68]}, {"input": [35, 42, 15, 16], "output": [51, 57, 57, 51]}, {"input": [39, 39, 14, 42, 25, 0, 49], "output": [88, 39, 39, 84, 39, 39, 88]}, {"input": [38, 3, 5, 22], "output": [60, 8, 8, 60]}, {"input": [39, 37, 26, 31, 23, 41, 16], "output": [55, 78, 49, 62, 49, 78, 55]}, {"input": [17, 10, 5, 5, 2, 48, 25], "output": [42, 58, 7, 10, 7, 58, 42]}, {"input": [39, 20, 30, 13, 36, 22, 2], "output": [41, 42, 66, 26, 66, 42, 41]}, {"input": [47, 49, 10, 2, 8], "output": [55, 51, 20, 51, 55]}, {"input": [30, 4, 42, 4, 44], "output": [74, 8, 84, 8, 74]}, {"input": [41, 15, 29, 38], "output": [79, 44, 44, 79]}]}
{"id": "c088", "function": "def c088(x):\n    # swap elements 0 and 3 if element 1 = element 2, else swap elements 1 and 2\n    if x[1] == x[2]:\n        x[0], x[3] = x[3], x[0]\n    else:\n        x[1], x[2] = x[2], x[1]\n    return x\n\n", "train": {"normal": [{"input": [14, 65, 65, 4, 69], "output": [4, 65, 65, 14, 69]}, {"input": [76, 45, 56, 69, 11, 95, 99], "output": [76, 56, 45, 69, 11, 95, 99]}, {"input": [10, 7, 7, 36, 64, 53], "output": [36, 7, 7, 10, 64, 53]}, {"input": [68, 43, 43, 46, 17, 1], "output": [46, 43, 43, 68, 17, 1]}, {"input": [63, 41, 87, 80, 29, 73, 57], "output": [63, 87, 41, 80, 29, 73, 57]}, {"input": [30, 5, 48, 12, 16], "output": [30, 48, 5, 12, 16]}, {"input": [42, 5, 27, 51, 53, 49], "output": [42, 27, 5, 51, 53, 49]}, {"input": [36, 32, 28, 47, 17, 43, 27], "output": [36, 28, 32, 47, 17, 43, 27]}, {"input": [89, 67, 67, 65, 64], "output": [65, 67, 67, 89, 64]}, {"input": [56, 30, 30, 57, 28, 7, 67], "output": [57, 30, 30, 56, 28, 7, 67]}], "ood": [], "noise": [{"input": [75, 82, 47, 78, 21], "output": [75, 33, 82, 78, 21]}, {"input": [55, 56, 91, 36, 22], "output": [55, 91, 56, 89, 52]}, {"input": [40, 84, 84, 44, 12, 24, 38], "output": [35, 51, 84, 40, 73, 24, 38]}, {"input": [94, 98, 98, 8, 40, 5, 57], "output": [94, 35, 98, 94, 71, 5, 57]}, {"input": [29, 18, 18, 19, 86], "output": [19, 71, 18, 29, 86]}]}, "test": [{"input": [12, 51, 51, 26, 68, 72, 16], "output": [26, 51, 51, 12, 68, 72, 16]}, {"input": [10, 92, 39, 31, 67, 28], "output": [10, 39, 92, 31, 67, 28]}, {"input": [5, 41, 41, 55, 0, 97], "output": [55, 41, 41, 5, 0, 97]}, {"input": [97, 89, 89, 92, 14], "output": [92, 89, 89, 97, 14]}, {"input": [57, 40, 40, 49, 95], "output": [49, 40, 40, 57, 95]}, {"input": [17, 2, 2, 29, 36, 58, 71], "output": [29, 2, 2, 17, 36, 58, 71]}, {"input": [57, 73, 24, 88, 56, 59, 32], "output": [57, 24, 73, 88, 56, 59, 32]}, {"input": [15, 59, 8, 99, 16, 96], "output": [15, 8, 59, 99, 16, 96]}, {"input": [99, 15, 31, 69, 81, 60], "output": [99, 31, 15, 69, 81, 60]}, {"input": [84, 15, 69, 49, 96, 11], "output": [84, 69, 15, 49, 96, 11]}]}
{"id": "c040", "function": "def c040(x):\n    # append 3 if the list contains a 3, else append 9 if the list contains a 9\n    if 3 in x:\n        return x + [3]\n    elif 9 in x:\n        return x + [9]\n    return x\n\n", "train": {"normal": [{"input": [23, 12, 1, 7, 3, 24, 3], "output": [23, 12, 1, 7, 3, 24, 3, 3]}, {"input": [25, 8, 3, 20, 20], "output": [25, 8, 3, 20, 20, 3]}, {"input": [12, 3, 29, 28, 23, 12], "output": [12, 3, 29, 28, 23, 12, 3]}, {"input": [16, 20, 29, 20, 9, 22, 8, 9], "output": [16, 20, 29, 20, 9, 22, 8, 9, 9]}, {"input": [20, 6, 9, 9, 17, 10, 28], "output": [20, 6, 9, 9, 17, 10, 28, 9]}, {"input": [9, 13, 27, 18, 8, 24, 9], "output": [9, 13, 27, 18, 8, 24, 9, 9]}, {"input": [6, 25, 14, 30, 13], "output": [6, 25, 14, 30, 13]}, {"input": [8, 20, 21, 29, 11], "output": [8, 20, 21, 29, 11]}, {"input": [17, 20, 14, 19, 26], "output": [17, 20, 14, 19, 26]}, {"input": [26, 15, 11, 11, 14, 19, 4], "output": [26, 15, 11, 11, 14, 19, 4]}], "ood": [], "noise": [{"input": [6, 23, 2, 3, 27, 16, 15], "output": [6, 23, 2, 3, 2, 20, 15, 4]}, {"input": [19, 9, 0, 15, 17, 22], "output": [5, 9, 0, 15, 11, 22, 17]}, {"input": [8, 2, 9, 27, 6], "output": [8, 27, 9, 27, 21, 27]}, {"input": [16, 28, 13, 24, 22, 25, 5], "output": [16, 28, 13, 6, 22, 25, 5]}, {"input": [0, 7, 26, 6], "output": [0, 2, 26, 5]}]}, "test": [{"input": [23, 5, 3, 14, 22], "output": [23, 5, 3, 14, 22, 3]}, {"input": [8, 3, 1, 19, 7, 23, 14], "output": [8, 3, 1, 19, 7, 23, 14, 3]}, {"input": [11, 7, 19, 26, 3, 29], "output": [11, 7, 19, 26, 3, 29, 3]}, {"input": [21, 10, 1, 22, 9, 16, 17], "output": [21, 10, 1, 22, 9, 16, 17, 9]}, {"input": [6, 28, 7, 1, 9, 23, 4], "output": [6, 28, 7, 1, 9, 23, 4, 9]}, {"input": [7, 23, 25, 9, 26, 15], "output": [7, 23, 25, 9, 26, 15, 9]}, {"input": [19, 10, 0, 25, 10, 11], "output": [19, 10, 0, 25, 10, 11]}, {"input": [17, 19, 7, 27, 10, 27, 16], "output": [17, 19, 7, 27, 10, 27, 16]}, {"input": [11, 22, 22, 24, 13, 5, 15], "output": [11, 22, 22, 24, 13, 5, 15]}, {"input": [15, 11, 8, 7, 7], "output": [15, 11, 8, 7, 7]}]}
{"id": "c085", "function": "def c085(x):\n    # remove all but element N, N=first element\n    return [x[x[0]]]\n\n", "train": {"normal": [{"input": [6, 18, 14, 25, 10, 28, 19], "output": [19]}, {"input": [5, 44, 12, 42, 4, 37], "output": [37]}, {"input": [1, 19, 28, 9, 16, 1, 5], "output": [19]}, {"input": [6, 46, 14, 39, 25, 21, 14], "output": [14]}, {"input": [2, 41, 33, 34], "output": [33]}, {"input": [3, 32, 24, 8], "output": [8]}, {"input": [5, 34, 14, 49, 4, 2], "output": [2]}, {"input": [2, 28, 4, 7], "output": [4]}, {"input": [4, 43, 0, 21, 3], "output": [3]}, {"input": [0, 21, 5, 15], "output": [0]}], "ood": [], "noise": [{"input": [0, 11, 40, 12, 0, 8], "output": [1]}, {"input": [3, 27, 39, 27], "output": [28]}, {"input": [3, 6, 13, 41], "output": [42]}, {"input": [2, 9, 0, 35, 37, 3], "output": [1]}, {"input": [0, 20, 11, 41], "output": [1]}]}, "test": [{"input": [0, 2, 39, 35], "output": [0]}, {"input": [3, 16, 30, 21, 18, 6], "output": [21]}, {"input": [2, 46, 42, 32, 21, 47], "output": [42]}, {"input": [2, 22, 8, 20, 41, 8, 50], "output": [8]}, {"input": [1, 23, 43, 1], "output": [23]}, {"input": [4, 48, 21, 3, 47], "output": [47]}, {"input": [1, 47, 30, 20, 20], "output": [47]}, {"input": [4, 28, 3, 20, 38, 36], "output": [38]}, {"input": [1, 14, 45, 32, 38, 40, 17], "output": [14]}, {"input": [1, 27, 3, 22], "output": [27]}]}
{"id": "c111", "function": "def c111(x):\n    # repeat the largest element N times, where N is the smallest element\n    return [max(x)] * min(x)\n\n", "train": {"normal": [{"input": [16, 14, 3, 27, 26, 9, 14], "output": [27, 27, 27]}, {"input": [12, 13, 6, 3, 15, 26], "output": [26, 26, 26]}, {"input": [11, 14, 25, 27, 8], "output": [27, 27, 27, 27, 27, 27, 27, 27]}, {"input": [30, 6, 2, 8, 2], "output": [30, 30]}, {"input": [3, 13, 28, 26, 8], "output": [28, 28, 28]}, {"input": [5, 5, 14, 18, 9], "output": [18, 18, 18, 18, 18]}, {"input": [5, 10, 14, 8, 3, 27, 1], "output": [27]}, {"input": [28, 10, 16, 10, 19, 17, 4, 15], "output": [28, 28, 28, 28]}, {"input": [1, 9, 21, 10, 26, 16, 6], "output": [26]}, {"input": [14, 24, 6, 9, 23], "output": [24, 24, 24, 24, 24, 24]}], "ood": [], "noise": [{"input": [6, 30, 16, 3, 20, 28, 5, 3], "output": [31, 30, 30]}, {"input": [19, 6, 6, 23, 12, 16], "output": [23, 23, 24, 23, 23, 23]}, {"input": [13, 2, 16, 8, 30], "output": [31, 30]}, {"input": [13, 19, 5, 18, 4, 1], "output": [20]}, {"input": [6, 17, 2, 18, 29, 2], "output": [30, 29]}]}, "test": [{"input": [1, 12, 7, 4, 27, 5, 13, 6], "output": [27]}, {"input": [14, 3, 11, 3, 26, 17], "output": [26, 26, 26]}, {"input": [22, 24, 26, 28, 4], "output": [28, 28, 28, 28]}, {"input": [29, 5, 4, 27, 3, 17, 22], "output": [29, 29, 29]}, {"input": [9, 8, 2, 30, 1, 14, 5, 4], "output": [30]}, {"input": [29, 11, 4, 24, 27], "output": [29, 29, 29, 29]}, {"input": [10, 7, 20, 22, 8, 23, 19, 9], "output": [23, 23, 23, 23, 23, 23, 23]}, {"input": [3, 6, 12, 29, 6], "output": [29, 29, 29]}, {"input": [30, 27, 12, 24, 14, 1], "output": [30]}, {"input": [10, 25, 20, 14, 1], "output": [25]}]}
{"id": "c073", "function": "def c073(x):\n    # add the index to every element\n    return [i+j for j, i in enumerate(x)]\n\n", "train": {"normal": [{"input": [6, 35, 36, 31, 14, 49], "output": [6, 36, 38, 34, 18, 54]}, {"input": [5, 9, 34, 24, 32, 25], "output": [5, 10, 36, 27, 36, 30]}, {"input": [23, 37, 41, 14], "output": [23, 38, 43, 17]}, {"input": [23, 50, 26, 40, 28, 7], "output": [23, 51, 28, 43, 32, 12]}, {"input": [5, 34, 0, 11, 3, 50], "output": [5, 35, 2, 14, 7, 55]}, {"input": [28, 26, 31, 0, 34, 9, 43], "output": [28, 27, 33, 3, 38, 14, 49]}, {"input": [12, 34, 28, 49, 30, 41], "output": [12, 35, 30, 52, 34, 46]}, {"input": [5, 29, 42, 0, 26], "output": [5, 30, 44, 3, 30]}, {"input": [7, 1, 13, 25, 30, 27, 16], "output": [7, 2, 15, 28, 34, 32, 22]}, {"input": [23, 30, 3, 22], "output": [23, 31, 5, 25]}], "ood": [], "noise": [{"input": [24, 37, 10, 2, 19, 45, 2], "output": [24, 45, 12, 5, 12, 50, 11]}, {"input": [23, 36, 0, 16, 13], "output": [23, 20, 2, 19, 17]}, {"input": [17, 49, 23, 32, 22, 46, 5], "output": [17, 50, 25, 35, 26, 34, 35]}, {"input": [43, 35, 18, 48], "output": [43, 36, 42, 51]}, {"input": [33, 27, 23, 30, 15], "output": [33, 21, 25, 27, 19]}]}, "test": [{"input": [23, 32, 31, 48, 19, 36], "output": [23, 33, 33, 51, 23, 41]}, {"input": [23, 22, 29, 31], "output": [23, 23, 31, 34]}, {"input": [39, 50, 35, 37, 47, 2], "output": [39, 51, 37, 40, 51, 7]}, {"input": [23, 15, 8, 21, 46], "output": [23, 16, 10, 24, 50]}, {"input": [20, 28, 30, 5, 36, 2], "output": [20, 29, 32, 8, 40, 7]}, {"input": [8, 13, 30, 24, 47, 17, 0], "output": [8, 14, 32, 27, 51, 22, 6]}, {"input": [8, 50, 48, 35], "output": [8, 51, 50, 38]}, {"input": [2, 5, 37, 45], "output": [2, 6, 39, 48]}, {"input": [11, 36, 49, 23], "output": [11, 37, 51, 26]}, {"input": [18, 10, 44, 15, 28, 14], "output": [18, 11, 46, 18, 32, 19]}]}
{"id": "c027", "function": "def c027(x):\n    # remove element 1 if element 0 = element 1, else remove element 2\n    if x[0] == x[1]:\n        return x[:1] + x[2:]\n    else:\n        return x[:2] + x[3:]\n    \n", "train": {"normal": [{"input": [22, 22, 59, 60, 42, 44], "output": [22, 59, 60, 42, 44]}, {"input": [11, 11, 43, 85, 73], "output": [11, 43, 85, 73]}, {"input": [52, 76, 73, 48, 42, 79, 1], "output": [52, 76, 48, 42, 79, 1]}, {"input": [28, 96, 57, 98, 79, 18], "output": [28, 96, 98, 79, 18]}, {"input": [5, 37, 49, 11, 31, 97, 94], "output": [5, 37, 11, 31, 97, 94]}, {"input": [12, 75, 67, 82, 40], "output": [12, 75, 82, 40]}, {"input": [91, 91, 80, 90, 85, 77], "output": [91, 80, 90, 85, 77]}, {"input": [48, 48, 71, 80, 34, 8], "output": [48, 71, 80, 34, 8]}, {"input": [97, 47, 54, 4, 61], "output": [97, 47, 4, 61]}, {"input": [12, 12, 94, 71, 82], "output": [12, 94, 71, 82]}], "ood": [], "noise": [{"input": [41, 6, 21, 14, 99], "output": [92, 6, 14, 99]}, {"input": [86, 86, 57, 17, 49, 90], "output": [46, 57, 17, 49, 90]}, {"input": [79, 79, 7, 78], "output": [38, 7, 78]}, {"input": [10, 10, 63, 85, 20], "output": [10, 17, 85, 20]}, {"input": [1, 82, 76, 62], "output": [1, 70, 55]}]}, "test": [{"input": [45, 45, 38, 41, 24, 59, 57], "output": [45, 38, 41, 24, 59, 57]}, {"input": [40, 43, 0, 34, 19], "output": [40, 43, 34, 19]}, {"input": [6, 6, 78, 38, 18], "output": [6, 78, 38, 18]}, {"input": [23, 38, 58, 17], "output": [23, 38, 17]}, {"input": [78, 21, 2, 43, 54, 96, 38], "output": [78, 21, 43, 54, 96, 38]}, {"input": [73, 73, 76, 45, 77], "output": [73, 76, 45, 77]}, {"input": [57, 36, 26, 96, 32], "output": [57, 36, 96, 32]}, {"input": [76, 76, 40, 25], "output": [76, 40, 25]}, {"input": [57, 57, 9, 94, 90, 74], "output": [57, 9, 94, 90, 74]}, {"input": [95, 72, 80, 32, 3], "output": [95, 72, 32, 3]}]}
{"id": "c234", "function": "def c234(x):\n    # repetitions in order of first appearance\n    res = {}\n    out = []\n    for i in x:\n        if i not in res:\n            res[i] = 0\n        res[i] += 1\n    for i in res:\n        if res[i] > 1:\n            out.append(i)\n    return out\n\n", "train": {"normal": [{"input": [35, 35, 12, 53, 7, 53, 97, 12, 28], "output": [35, 12, 53]}, {"input": [61, 32, 87, 32, 65, 3, 74, 74, 45], "output": [32, 74]}, {"input": [9, 59, 87, 80, 9, 12, 12], "output": [9, 12]}, {"input": [90, 52, 37, 52, 68, 52, 99, 52, 0], "output": [52]}, {"input": [87, 27, 87, 33, 0, 59, 0], "output": [87, 0]}, {"input": [99, 40, 7, 88, 90, 7, 88], "output": [7, 88]}, {"input": [97, 32, 32, 3, 25, 2, 25, 92, 3], "output": [32, 3, 25]}, {"input": [47, 67, 54, 54, 7, 54, 22], "output": [54]}, {"input": [27, 95, 27, 95, 64, 44, 38, 27], "output": [27, 95]}, {"input": [89, 39, 7, 89, 71, 75, 36, 39], "output": [89, 39]}], "ood": [], "noise": [{"input": [0, 52, 93, 82, 40, 59, 40, 59], "output": [40, 52]}, {"input": [65, 11, 59, 93, 14, 59, 11, 56, 32], "output": [28, 59]}, {"input": [75, 75, 13, 67, 26, 26, 26, 34, 13, 35], "output": [75, 66, 26]}, {"input": [59, 20, 15, 54, 59, 20, 59, 35], "output": [59, 43]}, {"input": [65, 15, 77, 6, 89, 89, 77, 89, 89], "output": [85, 89]}]}, "test": [{"input": [31, 96, 68, 31, 45, 31, 77, 31], "output": [31]}, {"input": [32, 8, 40, 35, 46, 35, 35, 40], "output": [40, 35]}, {"input": [71, 55, 86, 54, 89, 86, 57, 95, 95], "output": [86, 95]}, {"input": [6, 57, 57, 0, 5, 6, 61, 6, 80, 49], "output": [6, 57]}, {"input": [54, 70, 54, 45, 13, 60, 89, 89, 63, 45], "output": [54, 45, 89]}, {"input": [52, 52, 74, 22, 56, 95, 24, 26, 95], "output": [52, 95]}, {"input": [97, 88, 15, 37, 79, 37, 80, 93, 37, 79], "output": [37, 79]}, {"input": [28, 71, 16, 71, 8, 61, 28, 28], "output": [28, 71]}, {"input": [90, 40, 0, 90, 87, 37, 90], "output": [90]}, {"input": [76, 49, 69, 31, 41, 76, 7, 76, 76, 58], "output": [76]}]}
{"id": "c165", "function": "def c165(x):\n    # reverse the input and keep only even elements\n    return [i for i in x[::-1] if i % 2 == 0]\n\n", "train": {"normal": [{"input": [98, 29, 53, 73, 37, 40], "output": [40, 98]}, {"input": [29, 38, 69, 1, 65, 47, 28, 85], "output": [28, 38]}, {"input": [21, 42, 78, 81, 58, 19], "output": [58, 78, 42]}, {"input": [20, 47, 32, 96, 69, 78, 80], "output": [80, 78, 96, 32, 20]}, {"input": [41, 27, 40, 18, 41, 2, 2, 95], "output": [2, 2, 18, 40]}, {"input": [25, 44, 92, 65, 21, 25, 51], "output": [92, 44]}, {"input": [33, 0, 50, 53, 85, 0], "output": [0, 50, 0]}, {"input": [36, 53, 6, 53, 91, 28, 75, 88], "output": [88, 28, 6, 36]}, {"input": [14, 93, 41, 77, 55, 7, 87], "output": [14]}, {"input": [57, 58, 90, 78, 35, 24], "output": [24, 78, 90, 58]}], "ood": [], "noise": [{"input": [83, 27, 28, 80, 93, 3], "output": [68, 28]}, {"input": [59, 49, 64, 0, 57, 5, 12], "output": [18, 0, 64]}, {"input": [1, 8, 44, 67, 10, 34], "output": [11, 10, 25, 8]}, {"input": [69, 95, 12, 91, 21, 41], "output": [13]}, {"input": [20, 13, 53, 96, 93, 48, 69], "output": [48, 51, 20]}]}, "test": [{"input": [76, 37, 45, 8, 49, 9, 45, 90], "output": [90, 8, 76]}, {"input": [39, 7, 53, 57, 52, 85, 61], "output": [52]}, {"input": [36, 61, 55, 38, 62, 41], "output": [62, 38, 36]}, {"input": [86, 53, 21, 96, 2, 31, 76, 74], "output": [74, 76, 2, 96, 86]}, {"input": [82, 97, 50, 1, 69, 66, 91, 96], "output": [96, 66, 50, 82]}, {"input": [82, 23, 11, 21, 67, 41, 20, 77], "output": [20, 82]}, {"input": [73, 77, 24, 55, 13, 94, 38, 90], "output": [90, 38, 94, 24]}, {"input": [75, 94, 61, 5, 71, 88, 35], "output": [88, 94]}, {"input": [37, 35, 37, 34, 31, 87, 88], "output": [88, 34]}, {"input": [41, 41, 25, 47, 71, 35], "output": []}]}
{"id": "c191", "function": "def c191(x):\n    # repeat each element N times, where N is its tens digit\n    out = []\n    for i in x:\n        if len(str(i)) > 1:\n            out += [i] * int(str(i)[-2])\n    return out\n\n", "train": {"normal": [{"input": [16, 40, 12, 27, 27], "output": [16, 40, 40, 40, 40, 12, 27, 27, 27, 27]}, {"input": [29, 29, 24, 0, 4], "output": [29, 29, 29, 29, 24, 24]}, {"input": [6, 22, 39, 20, 15, 23], "output": [22, 22, 39, 39, 39, 20, 20, 15, 23, 23]}, {"input": [23, 40, 3, 4, 33, 1], "output": [23, 23, 40, 40, 40, 40, 33, 33, 33]}, {"input": [18, 18, 35, 37, 26], "output": [18, 18, 35, 35, 35, 37, 37, 37, 26, 26]}, {"input": [39, 29, 40, 18], "output": [39, 39, 39, 29, 29, 40, 40, 40, 40, 18]}, {"input": [20, 21, 21, 13], "output": [20, 20, 21, 21, 21, 21, 13]}, {"input": [30, 3, 11, 11], "output": [30, 30, 30, 11, 11]}, {"input": [27, 19, 14, 38, 21, 32], "output": [27, 27, 19, 14, 38, 38, 38, 21, 21, 32, 32, 32]}, {"input": [25, 24, 35, 22, 6, 4, 28], "output": [25, 25, 24, 24, 35, 35, 35, 22, 22, 28, 28]}], "ood": [], "noise": [{"input": [37, 9, 30, 39, 30, 31, 24, 39], "output": [37, 33, 37, 30, 30, 30, 29, 26, 39, 39, 30, 30, 31, 31, 25, 24, 24, 39, 38, 39]}, {"input": [18, 19, 36, 33, 33, 21, 31, 27], "output": [18, 19, 24, 36, 36, 33, 30, 33, 33, 33, 33, 21, 21, 31, 31, 25, 27, 36]}, {"input": [7, 26, 37, 32, 7, 24, 2, 9], "output": [26, 26, 33, 37, 37, 32, 32, 32, 25, 24]}, {"input": [31, 4, 15, 27, 40, 3], "output": [31, 31, 31, 15, 28, 27, 16, 40, 40, 40]}, {"input": [9, 19, 31, 27, 39], "output": [19, 31, 31, 31, 27, 27, 39, 39, 26]}]}, "test": [{"input": [23, 29, 10, 22, 10, 26, 37, 27], "output": [23, 23, 29, 29, 10, 22, 22, 10, 26, 26, 37, 37, 37, 27, 27]}, {"input": [27, 19, 35, 5, 30, 35, 24, 31], "output": [27, 27, 19, 35, 35, 35, 30, 30, 30, 35, 35, 35, 24, 24, 31, 31, 31]}, {"input": [33, 39, 33, 33, 1, 16], "output": [33, 33, 33, 39, 39, 39, 33, 33, 33, 33, 33, 33, 16]}, {"input": [5, 23, 0, 17, 5, 6, 34, 10], "output": [23, 23, 17, 34, 34, 34, 10]}, {"input": [28, 31, 23, 33, 34, 4, 1, 22], "output": [28, 28, 31, 31, 31, 23, 23, 33, 33, 33, 34, 34, 34, 22, 22]}, {"input": [3, 39, 29, 22], "output": [39, 39, 39, 29, 29, 22, 22]}, {"input": [6, 18, 4, 15, 13, 9], "output": [18, 15, 13]}, {"input": [40, 21, 12, 37, 4, 30], "output": [40, 40, 40, 40, 21, 21, 12, 37, 37, 37, 30, 30, 30]}, {"input": [35, 36, 36, 10], "output": [35, 35, 35, 36, 36, 36, 36, 36, 36, 10]}, {"input": [19, 10, 11, 17, 13, 27, 26], "output": [19, 10, 11, 17, 13, 27, 27, 26, 26]}]}
{"id": "c026", "function": "def c026(x):\n    # remove element 2\n    return x[:2] + x[3:]\n\n", "train": {"normal": [{"input": [96, 76, 76, 62, 64, 1], "output": [96, 76, 62, 64, 1]}, {"input": [33, 42, 92, 14, 18, 40, 40], "output": [33, 42, 14, 18, 40, 40]}, {"input": [48, 98, 27, 2, 97, 39], "output": [48, 98, 2, 97, 39]}, {"input": [11, 7, 16, 89, 31], "output": [11, 7, 89, 31]}, {"input": [79, 64, 43, 53, 60, 87], "output": [79, 64, 53, 60, 87]}, {"input": [43, 5, 30, 62, 40, 12, 31], "output": [43, 5, 62, 40, 12, 31]}, {"input": [78, 5, 37, 79, 58], "output": [78, 5, 79, 58]}, {"input": [94, 69, 24, 9], "output": [94, 69, 9]}, {"input": [62, 38, 91, 25, 17, 62, 53], "output": [62, 38, 25, 17, 62, 53]}, {"input": [16, 75, 90, 60], "output": [16, 75, 60]}], "ood": [], "noise": [{"input": [85, 13, 93, 83, 86, 71], "output": [85, 13, 31, 86, 71]}, {"input": [60, 89, 10, 53, 47], "output": [60, 89, 53, 54]}, {"input": [83, 73, 53, 30, 14, 61], "output": [83, 73, 30, 82, 55]}, {"input": [0, 87, 72, 92, 89, 94], "output": [0, 87, 92, 56, 94]}, {"input": [40, 5, 84, 77, 74], "output": [40, 5, 15, 74]}]}, "test": [{"input": [38, 79, 48, 23, 94, 4, 4], "output": [38, 79, 23, 94, 4, 4]}, {"input": [65, 5, 89, 25, 34, 93], "output": [65, 5, 25, 34, 93]}, {"input": [82, 99, 28, 13], "output": [82, 99, 13]}, {"input": [38, 44, 17, 18, 74], "output": [38, 44, 18, 74]}, {"input": [29, 30, 39, 24, 78, 5, 75], "output": [29, 30, 24, 78, 5, 75]}, {"input": [92, 27, 90, 98, 3], "output": [92, 27, 98, 3]}, {"input": [4, 6, 24, 72, 35, 92], "output": [4, 6, 72, 35, 92]}, {"input": [11, 79, 55, 68, 92, 12], "output": [11, 79, 68, 92, 12]}, {"input": [22, 24, 7, 56, 85, 68, 13], "output": [22, 24, 56, 85, 68, 13]}, {"input": [36, 72, 5, 48], "output": [36, 72, 48]}]}
{"id": "c059", "function": "def c059(x):\n    # swap element 2 and element 5\n    x[2], x[5] = x[5], x[2]\n    return x\n\n", "train": {"normal": [{"input": [8, 95, 97, 56, 23, 1, 76, 91], "output": [8, 95, 1, 56, 23, 97, 76, 91]}, {"input": [10, 6, 57, 4, 18, 22, 27, 64], "output": [10, 6, 22, 4, 18, 57, 27, 64]}, {"input": [23, 86, 43, 47, 92, 64, 42, 29], "output": [23, 86, 64, 47, 92, 43, 42, 29]}, {"input": [50, 27, 30, 76, 70, 9, 98, 52], "output": [50, 27, 9, 76, 70, 30, 98, 52]}, {"input": [55, 0, 41, 50, 42, 46, 24, 9], "output": [55, 0, 46, 50, 42, 41, 24, 9]}, {"input": [53, 21, 23, 26, 14, 75, 79], "output": [53, 21, 75, 26, 14, 23, 79]}, {"input": [36, 15, 34, 2, 29, 75, 16], "output": [36, 15, 75, 2, 29, 34, 16]}, {"input": [88, 27, 91, 47, 43, 94, 84, 62], "output": [88, 27, 94, 47, 43, 91, 84, 62]}, {"input": [28, 8, 34, 14, 13, 37, 13], "output": [28, 8, 37, 14, 13, 34, 13]}, {"input": [83, 45, 20, 8, 41, 42, 44], "output": [83, 45, 42, 8, 41, 20, 44]}], "ood": [], "noise": [{"input": [81, 11, 83, 28, 67, 83, 44, 99], "output": [81, 11, 83, 28, 77, 29, 44, 99]}, {"input": [86, 11, 80, 17, 41, 16, 44], "output": [86, 11, 16, 17, 65, 80, 44]}, {"input": [91, 48, 54, 8, 27, 84, 96], "output": [91, 48, 32, 93, 27, 54, 96]}, {"input": [78, 46, 63, 15, 62, 90, 60], "output": [78, 33, 90, 15, 39, 63, 51]}, {"input": [26, 8, 67, 95, 50, 21, 68], "output": [63, 8, 21, 95, 61, 67, 30]}]}, "test": [{"input": [39, 64, 7, 14, 84, 37, 73], "output": [39, 64, 37, 14, 84, 7, 73]}, {"input": [52, 24, 28, 99, 73, 75, 42], "output": [52, 24, 75, 99, 73, 28, 42]}, {"input": [93, 63, 33, 37, 84, 35, 9], "output": [93, 63, 35, 37, 84, 33, 9]}, {"input": [44, 62, 16, 65, 40, 57, 86], "output": [44, 62, 57, 65, 40, 16, 86]}, {"input": [30, 35, 15, 38, 11, 10, 97, 68], "output": [30, 35, 10, 38, 11, 15, 97, 68]}, {"input": [53, 92, 2, 6, 48, 88, 91, 98], "output": [53, 92, 88, 6, 48, 2, 91, 98]}, {"input": [33, 34, 90, 92, 70, 9, 30], "output": [33, 34, 9, 92, 70, 90, 30]}, {"input": [18, 24, 84, 41, 99, 60, 97], "output": [18, 24, 60, 41, 99, 84, 97]}, {"input": [90, 33, 4, 7, 77, 89, 3, 72], "output": [90, 33, 89, 7, 77, 4, 3, 72]}, {"input": [24, 94, 89, 83, 75, 13, 77, 93], "output": [24, 94, 13, 83, 75, 89, 77, 93]}]}
{"id": "c074", "function": "def c074(x):\n    # remove every element whose value < 8\n    return [i for i in x if i >= 8]\n\n", "train": {"normal": [{"input": [7, 1, 21, 16, 21, 9, 14], "output": [21, 16, 21, 9, 14]}, {"input": [21, 28, 7, 23, 20, 30], "output": [21, 28, 23, 20, 30]}, {"input": [8, 13, 1, 13, 18, 0], "output": [8, 13, 13, 18]}, {"input": [23, 15, 17, 8, 5], "output": [23, 15, 17, 8]}, {"input": [22, 7, 25, 5, 26, 25, 30, 11], "output": [22, 25, 26, 25, 30, 11]}, {"input": [6, 11, 26, 5, 15, 4, 26], "output": [11, 26, 15, 26]}, {"input": [16, 0, 13, 12, 8, 24, 7], "output": [16, 13, 12, 8, 24]}, {"input": [10, 36, 16, 27, 16, 8, 14, 26], "output": [10, 36, 16, 27, 16, 8, 14, 26]}, {"input": [4, 16, 24, 25, 25, 11], "output": [16, 24, 25, 25, 11]}, {"input": [11, 7, 14, 15, 23], "output": [11, 14, 15, 23]}], "ood": [], "noise": [{"input": [7, 16, 2, 2, 23, 27, 21], "output": [16, 20, 27, 17]}, {"input": [11, 13, 11, 27, 15], "output": [11, 16, 11, 27, 15]}, {"input": [0, 16, 7, 26, 5, 22], "output": [21, 24, 22]}, {"input": [8, 27, 8, 23, 9], "output": [8, 27, 8, 23, 16]}, {"input": [28, 14, 8, 4, 10, 0, 30], "output": [28, 14, 21, 10, 11]}]}, "test": [{"input": [21, 5, 7, 3, 15, 1, 2, 10], "output": [21, 15, 10]}, {"input": [1, 5, 1, 16, 16, 7], "output": [16, 16]}, {"input": [8, 8, 29, 16, 3, 21], "output": [8, 8, 29, 16, 21]}, {"input": [6, 9, 10, 3, 25, 3, 12, 8], "output": [9, 10, 25, 12, 8]}, {"input": [2, 13, 2, 30, 39, 28, 5, 23], "output": [13, 30, 39, 28, 23]}, {"input": [1, 9, 6, 29, 7], "output": [9, 29]}, {"input": [21, 13, 7, 25, 0, 12, 27], "output": [21, 13, 25, 12, 27]}, {"input": [14, 23, 10, 11, 33, 30], "output": [14, 23, 10, 11, 33, 30]}, {"input": [21, 19, 21, 8, 1, 1, 7], "output": [21, 19, 21, 8]}, {"input": [5, 4, 11, 4, 22], "output": [11, 22]}]}
{"id": "c173", "function": "def c173(x):\n    # replace element N with the largest element in element 0 through N\n    for i in range(len(x)):\n        x[i] = max(x[:i+1])\n    return x\n\n", "train": {"normal": [{"input": [80, 28, 68, 99, 73], "output": [80, 80, 80, 99, 99]}, {"input": [18, 97, 68, 85, 47], "output": [18, 97, 97, 97, 97]}, {"input": [9, 33, 33, 59, 68, 36, 20, 63], "output": [9, 33, 33, 59, 68, 68, 68, 68]}, {"input": [33, 2, 25, 24, 81, 58], "output": [33, 33, 33, 33, 81, 81]}, {"input": [54, 75, 77, 0, 54, 23], "output": [54, 75, 77, 77, 77, 77]}, {"input": [2, 56, 27, 91, 0, 41, 13, 16], "output": [2, 56, 56, 91, 91, 91, 91, 91]}, {"input": [93, 67, 10, 68, 86, 26, 67, 16], "output": [93, 93, 93, 93, 93, 93, 93, 93]}, {"input": [0, 90, 57, 97, 18, 46], "output": [0, 90, 90, 97, 97, 97]}, {"input": [0, 48, 9, 14, 43, 1, 1], "output": [0, 48, 48, 48, 48, 48, 48]}, {"input": [13, 83, 4, 56, 97], "output": [13, 83, 83, 83, 97]}], "ood": [], "noise": [{"input": [55, 94, 1, 95, 31, 12, 32], "output": [55, 94, 77, 95, 95, 86, 95]}, {"input": [93, 94, 52, 58, 67, 88, 91], "output": [94, 94, 94, 94, 94, 94, 94]}, {"input": [46, 82, 46, 78, 82, 96], "output": [77, 82, 59, 82, 82, 56]}, {"input": [12, 82, 17, 26, 89, 16, 9, 30], "output": [12, 82, 82, 82, 64, 89, 19, 89]}, {"input": [94, 14, 67, 9, 99, 96, 78, 88], "output": [94, 94, 94, 94, 99, 98, 99, 99]}]}, "test": [{"input": [81, 24, 44, 62, 61, 32, 68], "output": [81, 81, 81, 81, 81, 81, 81]}, {"input": [69, 64, 19, 42, 31, 18, 43, 53], "output": [69, 69, 69, 69, 69, 69, 69, 69]}, {"input": [56, 25, 93, 49, 6, 14, 58], "output": [56, 56, 93, 93, 93, 93, 93]}, {"input": [83, 41, 69, 52, 64, 4, 85], "output": [83, 83, 83, 83, 83, 83, 85]}, {"input": [30, 13, 59, 92, 96, 50, 14, 24], "output": [30, 30, 59, 92, 96, 96, 96, 96]}, {"input": [93, 52, 18, 37, 70, 46, 14], "output": [93, 93, 93, 93, 93, 93, 93]}, {"input": [51, 45, 57, 57, 61], "output": [51, 51, 57, 57, 61]}, {"input": [31, 43, 49, 47, 78], "output": [31, 43, 49, 49, 78]}, {"input": [0, 17, 38, 9, 37, 55], "output": [0, 17, 38, 38, 38, 55]}, {"input": [16, 54, 14, 80, 14, 0, 40], "output": [16, 54, 54, 80, 80, 80, 80]}]}
{"id": "c175", "function": "def c175(x):\n    # keep only elements larger than any preceding element\n    res = [x[0]]\n    for i in x[1:]:\n        if i > res[-1]:\n            res.append(i)\n    return res\n\n", "train": {"normal": [{"input": [5, 10, 25, 57, 2, 37, 82, 29], "output": [5, 10, 25, 57, 82]}, {"input": [63, 74, 48, 91, 25, 9, 91, 69], "output": [63, 74, 91]}, {"input": [46, 24, 88, 10, 68, 64, 84, 24], "output": [46, 88]}, {"input": [49, 45, 82, 60, 73, 54, 82], "output": [49, 82]}, {"input": [61, 48, 66, 99, 7], "output": [61, 66, 99]}, {"input": [57, 16, 0, 4, 76, 78, 7], "output": [57, 76, 78]}, {"input": [18, 12, 36, 44, 88], "output": [18, 36, 44, 88]}, {"input": [46, 79, 72, 83, 41, 49, 47], "output": [46, 79, 83]}, {"input": [25, 44, 0, 36, 31], "output": [25, 44]}, {"input": [90, 50, 34, 31, 10, 55, 80, 69], "output": [90]}], "ood": [], "noise": [{"input": [11, 30, 90, 17, 21, 78], "output": [45, 30, 90]}, {"input": [30, 59, 90, 66, 60, 55], "output": [82, 83, 90]}, {"input": [63, 93, 17, 20, 62, 39], "output": [63, 92]}, {"input": [5, 27, 84, 56, 92, 13, 92], "output": [30, 27, 84, 89]}, {"input": [69, 4, 71, 79, 51], "output": [69, 71, 71]}]}, "test": [{"input": [62, 31, 88, 1, 0, 34, 1], "output": [62, 88]}, {"input": [28, 37, 89, 90, 17, 35], "output": [28, 37, 89, 90]}, {"input": [94, 16, 24, 61, 15, 33], "output": [94]}, {"input": [7, 35, 87, 37, 75, 73, 50, 8], "output": [7, 35, 87]}, {"input": [91, 16, 45, 20, 25, 60], "output": [91]}, {"input": [58, 55, 89, 91, 27, 34], "output": [58, 89, 91]}, {"input": [37, 9, 37, 1, 90, 19], "output": [37, 90]}, {"input": [82, 25, 67, 2, 24], "output": [82]}, {"input": [12, 84, 64, 93, 77, 19], "output": [12, 84, 93]}, {"input": [55, 49, 73, 93, 60], "output": [55, 73, 93]}]}
{"id": "c204", "function": "def c204(x):\n    # keep only elements followed by 0\n    res = []\n    for i in range(len(x)-1):\n        if x[i+1] == 0:\n            res.append(x[i])\n    return res\n\n", "train": {"normal": [{"input": [2, 25, 13, 12, 3, 24, 22], "output": []}, {"input": [29, 0, 19, 26, 0, 18, 0, 0, 4, 0], "output": [29, 26, 18, 0, 4]}, {"input": [26, 22, 4, 29, 22, 27, 0], "output": [27]}, {"input": [0, 28, 3, 7, 30, 0, 20], "output": [30]}, {"input": [12, 0, 0, 4, 0, 16, 15, 30, 0, 6], "output": [12, 0, 4, 30]}, {"input": [0, 19, 2, 23, 0, 13, 27, 0, 0, 0], "output": [23, 27, 0, 0]}, {"input": [29, 26, 29, 3, 28, 18, 24, 0], "output": [24]}, {"input": [20, 0, 15, 12, 10, 29, 16, 0, 0], "output": [20, 16, 0]}, {"input": [26, 21, 0, 0, 5, 0, 24, 30, 24, 15], "output": [21, 0, 5]}, {"input": [23, 21, 21, 0, 27, 13, 3, 0], "output": [21, 3]}], "ood": [], "noise": [{"input": [19, 14, 0, 14, 11, 13, 8], "output": [15]}, {"input": [0, 18, 30, 17, 19, 28, 16], "output": [7]}, {"input": [13, 0, 20, 26, 22, 29, 13, 30, 0, 0], "output": [22, 30, 5]}, {"input": [24, 22, 7, 2, 28, 30, 20, 0], "output": [21]}, {"input": [2, 22, 2, 14, 26], "output": [13]}]}, "test": [{"input": [20, 9, 2, 0, 10, 26, 0], "output": [2, 26]}, {"input": [0, 10, 13, 23, 25, 11, 0, 0, 24, 0], "output": [11, 0, 24]}, {"input": [25, 0, 4, 11, 0, 29, 0, 0, 19, 29], "output": [25, 11, 29, 0]}, {"input": [30, 2, 0, 17, 27, 19, 0, 0, 0], "output": [2, 19, 0, 0]}, {"input": [20, 7, 22, 0, 20, 26, 30, 19, 0, 0], "output": [22, 19, 0]}, {"input": [0, 0, 18, 0, 0, 8, 17, 0, 5], "output": [0, 18, 0, 17]}, {"input": [29, 8, 27, 29, 30], "output": []}, {"input": [0, 0, 21, 18, 8, 0, 0, 29, 13], "output": [0, 8, 0]}, {"input": [14, 4, 22, 4, 0, 15], "output": [4]}, {"input": [0, 21, 0, 23, 24, 0, 14, 10, 24, 21], "output": [21, 24]}]}
{"id": "c031", "function": "def c031(x):\n    # remove whichever are equal, the first 2 elements or the last 2 elements\n    if x[0] == x[1]:\n        return x[2:]\n    elif x[-1] == x[-2]:\n        return x[:-2]\n    return x\n\n", "train": {"normal": [{"input": [58, 58, 32, 48, 1, 14], "output": [32, 48, 1, 14]}, {"input": [26, 26, 61, 74, 74], "output": [61, 74, 74]}, {"input": [64, 15, 97, 42, 18, 47, 68, 68], "output": [64, 15, 97, 42, 18, 47]}, {"input": [20, 23, 96, 99, 62, 28, 57], "output": [20, 23, 96, 99, 62, 28, 57]}, {"input": [25, 82, 48, 51, 2, 38, 48, 52], "output": [25, 82, 48, 51, 2, 38, 48, 52]}, {"input": [25, 25, 25, 20, 55, 76, 37], "output": [25, 20, 55, 76, 37]}, {"input": [14, 14, 90, 1, 82, 62], "output": [90, 1, 82, 62]}, {"input": [28, 69, 12, 92, 3, 3], "output": [28, 69, 12, 92]}, {"input": [80, 56, 60, 55, 52, 59, 59], "output": [80, 56, 60, 55, 52]}, {"input": [77, 8, 81, 22, 86, 9], "output": [77, 8, 81, 22, 86, 9]}], "ood": [], "noise": [{"input": [79, 79, 0, 85, 62, 5, 34], "output": [0, 85, 62, 11, 34]}, {"input": [84, 72, 34, 66, 82, 59], "output": [43, 72, 34, 66, 82, 59]}, {"input": [6, 6, 4, 39, 28], "output": [4, 33, 17]}, {"input": [39, 71, 24, 44, 26, 26], "output": [69, 71, 24, 44]}, {"input": [78, 13, 60, 72, 23, 82, 82], "output": [28, 13, 60, 72, 25]}]}, "test": [{"input": [43, 95, 85, 3, 53], "output": [43, 95, 85, 3, 53]}, {"input": [21, 67, 25, 59, 1, 1], "output": [21, 67, 25, 59]}, {"input": [7, 42, 26, 0, 77, 44, 61, 61], "output": [7, 42, 26, 0, 77, 44]}, {"input": [25, 25, 65, 35, 21, 91, 19], "output": [65, 35, 21, 91, 19]}, {"input": [99, 47, 84, 29, 38], "output": [99, 47, 84, 29, 38]}, {"input": [88, 83, 89, 89, 29, 9, 94, 43], "output": [88, 83, 89, 89, 29, 9, 94, 43]}, {"input": [42, 42, 21, 41, 66], "output": [21, 41, 66]}, {"input": [18, 18, 66, 1, 69, 91, 78], "output": [66, 1, 69, 91, 78]}, {"input": [42, 42, 84, 25, 84, 27, 1], "output": [84, 25, 84, 27, 1]}, {"input": [84, 10, 13, 32, 32], "output": [84, 10, 13]}]}
{"id": "c236", "function": "def c236(x):\n    # even elements divided by 2\n    return [i//2 for i in x if i % 2 == 0]\n\n", "train": {"normal": [{"input": [33, 10, 76, 72, 1, 26, 53, 39, 87, 78], "output": [5, 38, 36, 13, 39]}, {"input": [0, 60, 98, 62, 57, 13], "output": [0, 30, 49, 31]}, {"input": [72, 61, 95, 59, 97, 47, 74], "output": [36, 37]}, {"input": [71, 51, 87, 75, 94, 46, 48, 32, 83, 76], "output": [47, 23, 24, 16, 38]}, {"input": [20, 2, 51, 25, 21, 68, 51, 93, 63], "output": [10, 1, 34]}, {"input": [32, 35, 24, 22, 54, 84, 58, 81, 33, 25], "output": [16, 12, 11, 27, 42, 29]}, {"input": [20, 60, 63, 89, 71, 99, 7, 48, 17, 29], "output": [10, 30, 24]}, {"input": [13, 93, 35, 44, 29, 84, 67, 66, 55], "output": [22, 42, 33]}, {"input": [89, 59, 96, 6, 26, 26, 96], "output": [48, 3, 13, 13, 48]}, {"input": [17, 6, 50, 60, 89, 38], "output": [3, 25, 30, 19]}], "ood": [], "noise": [{"input": [25, 58, 0, 55, 39, 51, 86, 53], "output": [17, 0, 43]}, {"input": [70, 22, 46, 19, 92, 56, 96, 29, 34, 10], "output": [35, 11, 23, 46, 17, 48, 14, 29]}, {"input": [50, 6, 1, 50, 26, 35], "output": [24, 3, 25, 16]}, {"input": [50, 19, 68, 54, 8, 41, 45, 33], "output": [16, 34, 27, 4]}, {"input": [21, 27, 89, 34, 4, 69, 60, 98], "output": [10, 2, 30, 49]}]}, "test": [{"input": [85, 24, 97, 10, 22, 47, 37, 13, 93, 55], "output": [12, 5, 11]}, {"input": [8, 37, 91, 1, 6, 69, 20, 84, 93], "output": [4, 3, 10, 42]}, {"input": [30, 76, 1, 5, 58, 43, 38, 15], "output": [15, 38, 29, 19]}, {"input": [50, 44, 32, 99, 42, 57, 62, 19], "output": [25, 22, 16, 21, 31]}, {"input": [83, 89, 99, 62, 16, 55], "output": [31, 8]}, {"input": [34, 12, 8, 16, 57, 26, 14], "output": [17, 6, 4, 8, 13, 7]}, {"input": [55, 31, 24, 56, 85, 74, 50], "output": [12, 28, 37, 25]}, {"input": [36, 30, 63, 51, 25, 41], "output": [18, 15]}, {"input": [35, 16, 58, 53, 96, 52, 40, 36], "output": [8, 29, 48, 26, 20, 18]}, {"input": [94, 26, 70, 28, 37, 48], "output": [47, 13, 35, 14, 24]}]}
{"id": "c054", "function": "def c054(x):\n    # replace element 0 and 1 with element 2\n    x[0] = x[2]\n    x[1] = x[2]\n    return x\n\n", "train": {"normal": [{"input": [20, 12, 38, 12, 50], "output": [38, 38, 38, 12, 50]}, {"input": [78, 37, 28, 43, 22, 4, 21], "output": [28, 28, 28, 43, 22, 4, 21]}, {"input": [23, 91, 49, 32], "output": [49, 49, 49, 32]}, {"input": [19, 52, 13, 23, 76], "output": [13, 13, 13, 23, 76]}, {"input": [66, 54, 39, 87, 29, 28], "output": [39, 39, 39, 87, 29, 28]}, {"input": [36, 57, 67, 31, 49], "output": [67, 67, 67, 31, 49]}, {"input": [8, 54, 28, 74, 61], "output": [28, 28, 28, 74, 61]}, {"input": [2, 92, 35, 17, 69], "output": [35, 35, 35, 17, 69]}, {"input": [89, 10, 83, 28, 65, 89, 71], "output": [83, 83, 83, 28, 65, 89, 71]}, {"input": [27, 23, 65, 52], "output": [65, 65, 65, 52]}], "ood": [], "noise": [{"input": [57, 95, 12, 96, 51, 79, 39], "output": [12, 12, 39, 96, 56, 96, 39]}, {"input": [13, 99, 77, 63, 3], "output": [77, 62, 77, 63, 3]}, {"input": [99, 68, 86, 15, 58, 89], "output": [53, 86, 86, 15, 56, 50]}, {"input": [30, 79, 92, 95], "output": [92, 92, 92, 94]}, {"input": [71, 75, 94, 81, 33, 8, 93], "output": [94, 94, 75, 44, 33, 49, 93]}]}, "test": [{"input": [40, 98, 55, 48, 76, 94, 29], "output": [55, 55, 55, 48, 76, 94, 29]}, {"input": [19, 83, 43, 44], "output": [43, 43, 43, 44]}, {"input": [54, 80, 85, 6, 28, 39, 47], "output": [85, 85, 85, 6, 28, 39, 47]}, {"input": [33, 14, 39, 11], "output": [39, 39, 39, 11]}, {"input": [95, 24, 47, 34, 97, 66], "output": [47, 47, 47, 34, 97, 66]}, {"input": [42, 99, 28, 61, 52], "output": [28, 28, 28, 61, 52]}, {"input": [53, 16, 97, 16], "output": [97, 97, 97, 16]}, {"input": [77, 17, 49, 90, 51, 47, 71], "output": [49, 49, 49, 90, 51, 47, 71]}, {"input": [73, 21, 20, 98], "output": [20, 20, 20, 98]}, {"input": [36, 61, 80, 88, 76, 53, 37], "output": [80, 80, 80, 88, 76, 53, 37]}]}
{"id": "c227", "function": "def c227(x):\n    # interleave the input and reversed input, keep only unique elements in order of appearance\n    res = []\n    mid = len(x) // 2\n    for i in range(mid):\n        if x[i] not in res:\n            res.append(x[i])\n        if x[-i-1] not in res:\n            res.append(x[-i-1])\n    if len(x) % 2 == 1 and x[mid] not in res:\n        res.append(x[mid])\n    return res\n\n", "train": {"normal": [{"input": [98, 98, 85, 53, 34, 34, 85, 76, 41], "output": [98, 41, 76, 85, 53, 34]}, {"input": [25, 8, 25, 25, 25, 99, 4], "output": [25, 4, 8, 99]}, {"input": [18, 86, 18, 5, 47, 5], "output": [18, 5, 86, 47]}, {"input": [0, 15, 0, 53, 5, 30, 42, 0, 50], "output": [0, 50, 15, 42, 53, 30, 5]}, {"input": [37, 45, 36, 24, 55, 36, 27, 55], "output": [37, 55, 45, 27, 36, 24]}, {"input": [32, 39, 15, 56, 64], "output": [32, 64, 39, 56, 15]}, {"input": [62, 22, 3, 32, 28], "output": [62, 28, 22, 32, 3]}, {"input": [40, 80, 97, 34, 51, 9], "output": [40, 9, 80, 51, 97, 34]}, {"input": [69, 76, 45, 85, 80, 74, 0, 22], "output": [69, 22, 76, 0, 45, 74, 85, 80]}, {"input": [21, 68, 16, 28, 85, 73], "output": [21, 73, 68, 85, 16, 28]}], "ood": [], "noise": [{"input": [11, 62, 45, 81, 62, 45, 55, 35, 60, 81], "output": [51, 81, 62, 60, 45, 35, 55]}, {"input": [82, 17, 23, 17, 50, 23], "output": [82, 65, 17, 50]}, {"input": [38, 38, 22, 70, 12, 38, 22], "output": [38, 19, 12, 53]}, {"input": [5, 13, 32, 11, 2, 74, 32], "output": [5, 68, 65, 74, 2, 41]}, {"input": [86, 73, 68, 30, 20], "output": [67, 20, 30, 30, 68]}]}, "test": [{"input": [1, 41, 21, 1, 55, 41], "output": [1, 41, 55, 21]}, {"input": [65, 13, 94, 18, 18, 44, 18, 65], "output": [65, 13, 18, 94, 44]}, {"input": [69, 53, 51, 53, 37, 5, 37], "output": [69, 37, 53, 5, 51]}, {"input": [54, 75, 69, 54, 54, 90, 69], "output": [54, 69, 75, 90]}, {"input": [68, 68, 11, 11, 14, 3, 68, 88], "output": [68, 88, 11, 3, 14]}, {"input": [43, 12, 42, 62, 91, 53, 12, 97], "output": [43, 97, 12, 42, 53, 62, 91]}, {"input": [70, 88, 6, 86, 70], "output": [70, 88, 86, 6]}, {"input": [83, 76, 95, 0, 50, 54, 35, 36], "output": [83, 36, 76, 35, 95, 54, 0, 50]}, {"input": [62, 43, 9, 3, 69, 71, 33], "output": [62, 33, 43, 71, 9, 69, 3]}, {"input": [33, 66, 24, 16, 36], "output": [33, 36, 66, 16, 24]}]}
{"id": "c024", "function": "def c024(x):\n    # insert 8 as element 1 if element 0 > 5 else insert 5 as element 1\n    if x[0] > 5:\n        return x[:1] + [8] + x[1:]\n    else:\n        return x[:1] + [5] + x[1:]\n    \n", "train": {"normal": [{"input": [9, 11, 5, 20, 7, 20], "output": [9, 8, 11, 5, 20, 7, 20]}, {"input": [3, 19, 14, 18, 12, 10, 6], "output": [3, 5, 19, 14, 18, 12, 10, 6]}, {"input": [16, 12, 0, 15], "output": [16, 8, 12, 0, 15]}, {"input": [3, 0, 13, 20, 14, 4, 18], "output": [3, 5, 0, 13, 20, 14, 4, 18]}, {"input": [3, 3, 7, 14, 3, 3, 17], "output": [3, 5, 3, 7, 14, 3, 3, 17]}, {"input": [3, 1, 9, 15, 10], "output": [3, 5, 1, 9, 15, 10]}, {"input": [11, 4, 14, 2, 2, 4], "output": [11, 8, 4, 14, 2, 2, 4]}, {"input": [0, 12, 16, 0, 1, 11, 19], "output": [0, 5, 12, 16, 0, 1, 11, 19]}, {"input": [9, 1, 15, 5], "output": [9, 8, 1, 15, 5]}, {"input": [12, 16, 16, 15, 16, 9, 12, 20], "output": [12, 8, 16, 16, 15, 16, 9, 12, 20]}], "ood": [], "noise": [{"input": [0, 4, 9, 13, 4], "output": [0, 8, 4, 10, 13, 4]}, {"input": [15, 13, 20, 20, 0, 16], "output": [13, 8, 13, 20, 20, 0, 16]}, {"input": [8, 11, 11, 15], "output": [10, 12, 11, 11, 15]}, {"input": [0, 7, 11, 11, 0], "output": [0, 1, 7, 0, 5, 0]}, {"input": [10, 10, 7, 8, 20, 0, 18, 9], "output": [10, 8, 10, 7, 8, 20, 0, 18, 12]}]}, "test": [{"input": [1, 19, 19, 13, 8, 20, 13], "output": [1, 5, 19, 19, 13, 8, 20, 13]}, {"input": [12, 3, 1, 3, 16, 12], "output": [12, 8, 3, 1, 3, 16, 12]}, {"input": [9, 18, 18, 11, 16, 17], "output": [9, 8, 18, 18, 11, 16, 17]}, {"input": [6, 9, 11, 12, 7, 10], "output": [6, 8, 9, 11, 12, 7, 10]}, {"input": [1, 15, 10, 8, 14], "output": [1, 5, 15, 10, 8, 14]}, {"input": [5, 16, 4, 3, 14], "output": [5, 5, 16, 4, 3, 14]}, {"input": [5, 19, 3, 18, 2], "output": [5, 5, 19, 3, 18, 2]}, {"input": [17, 8, 17, 17], "output": [17, 8, 8, 17, 17]}, {"input": [1, 18, 10, 16, 16, 2, 16], "output": [1, 5, 18, 10, 16, 16, 2, 16]}, {"input": [2, 7, 9, 1, 19, 11, 4], "output": [2, 5, 7, 9, 1, 19, 11, 4]}]}
{"id": "c200", "function": "def c200(x):\n    # tens digits of the elements in ascending order\n    res = []\n    for i in x:\n        if len(str(i)) > 1:\n            res.append(int(str(i)[-2]))\n        else:\n            res.append(0)\n    return sorted(res)\n\n", "train": {"normal": [{"input": [6, 87, 76, 88, 23, 21], "output": [0, 2, 2, 7, 8, 8]}, {"input": [7, 83, 39, 40, 62, 37, 74, 14], "output": [0, 1, 3, 3, 4, 6, 7, 8]}, {"input": [0, 49, 62, 97, 45], "output": [0, 4, 4, 6, 9]}, {"input": [7, 75, 8, 65, 2], "output": [0, 0, 0, 6, 7]}, {"input": [20, 24, 0, 2, 47, 76], "output": [0, 0, 2, 2, 4, 7]}, {"input": [9, 90, 37, 23, 74, 94], "output": [0, 2, 3, 7, 9, 9]}, {"input": [1, 11, 60, 50, 14], "output": [0, 1, 1, 5, 6]}, {"input": [48, 93, 42, 97, 89], "output": [4, 4, 8, 9, 9]}, {"input": [82, 16, 16, 79, 85, 41, 88], "output": [1, 1, 4, 7, 8, 8, 8]}, {"input": [99, 99, 20, 58, 81, 10, 92, 6], "output": [0, 1, 2, 5, 8, 9, 9, 9]}], "ood": [], "noise": [{"input": [10, 29, 56, 81, 58, 32, 87], "output": [5, 2, 5, 5, 5, 8, 8]}, {"input": [23, 22, 64, 30, 18, 53, 16, 67], "output": [1, 1, 4, 2, 3, 5, 6, 6]}, {"input": [6, 32, 97, 60, 75, 16, 72], "output": [4, 1, 3, 1, 7, 9, 9]}, {"input": [18, 70, 21, 20, 12, 31, 18, 83], "output": [1, 4, 1, 2, 2, 7, 2, 8]}, {"input": [65, 46, 67, 65, 9, 82, 32, 78], "output": [4, 3, 4, 6, 1, 6, 7, 5]}]}, "test": [{"input": [7, 43, 19, 77, 89, 80], "output": [0, 1, 4, 7, 8, 8]}, {"input": [77, 32, 32, 37, 40, 74, 48, 30], "output": [3, 3, 3, 3, 4, 4, 7, 7]}, {"input": [69, 8, 75, 43, 97], "output": [0, 4, 6, 7, 9]}, {"input": [68, 99, 17, 78, 33, 14, 44, 80], "output": [1, 1, 3, 4, 6, 7, 8, 9]}, {"input": [88, 89, 90, 13, 82, 3, 32, 46], "output": [0, 1, 3, 4, 8, 8, 8, 9]}, {"input": [34, 23, 22, 94, 88], "output": [2, 2, 3, 8, 9]}, {"input": [30, 40, 68, 63, 41, 46, 57, 72], "output": [3, 4, 4, 4, 5, 6, 6, 7]}, {"input": [11, 72, 55, 84, 90, 80], "output": [1, 5, 7, 8, 8, 9]}, {"input": [54, 73, 24, 95, 62, 72], "output": [2, 5, 6, 7, 7, 9]}, {"input": [76, 24, 9, 99, 80, 78], "output": [0, 2, 7, 7, 8, 9]}]}
{"id": "c010", "function": "def c010(x):\n    # elements 1 through N + 1, N is the first element\n    return x[1:x[0]+1]\n\n", "train": {"normal": [{"input": [5, 3, 13, 11, 5], "output": [3, 13, 11, 5]}, {"input": [1, 10, 17, 14, 8], "output": [10]}, {"input": [4, 8, 9, 1, 14, 17, 5], "output": [8, 9, 1, 14]}, {"input": [5, 11, 20, 13, 5, 4, 13, 12], "output": [11, 20, 13, 5, 4]}, {"input": [6, 14, 8, 13, 17, 11, 18], "output": [14, 8, 13, 17, 11, 18]}, {"input": [0, 16, 17, 15, 8, 17, 3], "output": []}, {"input": [2, 4, 10, 19, 11], "output": [4, 10]}, {"input": [2, 13, 8, 3, 1, 4], "output": [13, 8]}, {"input": [6, 1, 10, 6, 17, 1], "output": [1, 10, 6, 17, 1]}, {"input": [3, 7, 17, 18, 8], "output": [7, 17, 18]}], "ood": [], "noise": [{"input": [2, 18, 2, 20, 18, 15, 20, 14], "output": [11, 2]}, {"input": [6, 14, 11, 9, 2, 15], "output": [8, 11, 9, 2, 15]}, {"input": [3, 0, 3, 11, 3], "output": [9, 3, 11]}, {"input": [1, 2, 12, 5, 3], "output": [3]}, {"input": [2, 10, 6, 0, 3, 16, 1], "output": [10, 8]}]}, "test": [{"input": [4, 19, 20, 18, 16], "output": [19, 20, 18, 16]}, {"input": [1, 6, 16, 2, 12, 0], "output": [6]}, {"input": [6, 11, 17, 20, 14, 20, 0], "output": [11, 17, 20, 14, 20, 0]}, {"input": [8, 11, 3, 15, 17, 8, 10, 13], "output": [11, 3, 15, 17, 8, 10, 13]}, {"input": [4, 2, 5, 10, 4], "output": [2, 5, 10, 4]}, {"input": [5, 2, 16, 4, 12, 8], "output": [2, 16, 4, 12, 8]}, {"input": [3, 0, 18, 8, 10], "output": [0, 18, 8]}, {"input": [1, 3, 0, 20, 3, 16, 14, 1], "output": [3]}, {"input": [2, 20, 2, 14, 7, 19, 5, 18], "output": [20, 2]}, {"input": [0, 4, 19, 12, 5, 17, 5], "output": []}]}
{"id": "c123", "function": "def c123(x):\n    # remove all but element N, N is the last element\n    return [x[x[-1]]]\n\n", "train": {"normal": [{"input": [8, 8, 16, 6, 3, 1, 20, 5], "output": [1]}, {"input": [9, 8, 20, 13, 3], "output": [13]}, {"input": [0, 7, 19, 20, 1, 0], "output": [0]}, {"input": [14, 6, 3, 14, 0, 6, 1, 7], "output": [7]}, {"input": [13, 10, 8, 8, 1, 13, 2], "output": [8]}, {"input": [3, 9, 3, 19, 4], "output": [4]}, {"input": [0, 13, 5, 12, 12, 2], "output": [5]}, {"input": [2, 3, 16, 16, 1], "output": [3]}, {"input": [18, 11, 19, 7, 1], "output": [11]}, {"input": [17, 10, 0, 15, 8, 1], "output": [10]}], "ood": [], "noise": [{"input": [1, 0, 2, 9, 0], "output": [2]}, {"input": [11, 10, 3, 1, 8, 16, 19, 1], "output": [11]}, {"input": [18, 10, 3, 12, 16, 14, 9, 1], "output": [11]}, {"input": [7, 11, 9, 6, 3, 13, 5, 6], "output": [6]}, {"input": [5, 20, 4, 17, 3, 3], "output": [18]}]}, "test": [{"input": [11, 16, 2, 15, 2], "output": [2]}, {"input": [15, 0, 19, 17, 2, 16, 5, 2], "output": [19]}, {"input": [18, 1, 16, 13, 18, 17, 5], "output": [17]}, {"input": [10, 8, 14, 8, 2], "output": [14]}, {"input": [12, 20, 0, 12, 9, 12, 7, 5], "output": [12]}, {"input": [6, 0, 6, 9, 8, 2], "output": [6]}, {"input": [2, 17, 11, 6, 2], "output": [11]}, {"input": [15, 8, 12, 13, 2], "output": [12]}, {"input": [20, 20, 10, 3, 9, 10, 6], "output": [6]}, {"input": [14, 10, 16, 8, 0], "output": [14]}]}
{"id": "c023", "function": "def c023(x):\n    # insert 8 as element 1 if element 0 > 5 else insert 5 as element 1\n    if x[0] > 5:\n        return x[:1] + [8] + x[1:]\n    else:\n        return x[:1] + [5] + x[1:]\n    \n", "train": {"normal": [{"input": [14, 2, 11, 0, 1, 13, 7, 10], "output": [14, 8, 2, 11, 0, 1, 13, 7, 10]}, {"input": [5, 2, 7, 19], "output": [5, 5, 2, 7, 19]}, {"input": [10, 19, 13, 1, 18, 9, 8], "output": [10, 8, 19, 13, 1, 18, 9, 8]}, {"input": [2, 13, 16, 6, 19, 5, 5, 5], "output": [2, 5, 13, 16, 6, 19, 5, 5, 5]}, {"input": [5, 7, 16, 11, 13, 9, 16, 2], "output": [5, 5, 7, 16, 11, 13, 9, 16, 2]}, {"input": [0, 0, 2, 1, 2, 8], "output": [0, 5, 0, 2, 1, 2, 8]}, {"input": [20, 3, 18, 14], "output": [20, 8, 3, 18, 14]}, {"input": [9, 5, 9, 6, 17, 6], "output": [9, 8, 5, 9, 6, 17, 6]}, {"input": [0, 17, 4, 13, 4, 13, 20, 17], "output": [0, 5, 17, 4, 13, 4, 13, 20, 17]}, {"input": [18, 10, 8, 9, 20, 4], "output": [18, 8, 10, 8, 9, 20, 4]}], "ood": [], "noise": [{"input": [20, 13, 5, 6], "output": [20, 8, 9, 5, 16]}, {"input": [2, 10, 9, 3], "output": [8, 5, 10, 9, 3]}, {"input": [1, 13, 6, 17, 20], "output": [1, 6, 13, 6, 17, 7]}, {"input": [18, 2, 20, 16], "output": [18, 12, 2, 20, 16]}, {"input": [5, 13, 19, 16, 0, 3, 2], "output": [5, 18, 13, 2, 16, 0, 17, 2]}]}, "test": [{"input": [3, 6, 7, 4], "output": [3, 5, 6, 7, 4]}, {"input": [19, 0, 4, 0], "output": [19, 8, 0, 4, 0]}, {"input": [3, 11, 15, 6, 6, 11, 5], "output": [3, 5, 11, 15, 6, 6, 11, 5]}, {"input": [13, 10, 18, 18], "output": [13, 8, 10, 18, 18]}, {"input": [4, 18, 12, 20, 3], "output": [4, 5, 18, 12, 20, 3]}, {"input": [1, 13, 2, 8, 15], "output": [1, 5, 13, 2, 8, 15]}, {"input": [10, 4, 4, 2, 3, 12], "output": [10, 8, 4, 4, 2, 3, 12]}, {"input": [7, 15, 12, 8, 9, 3], "output": [7, 8, 15, 12, 8, 9, 3]}, {"input": [3, 11, 2, 18], "output": [3, 5, 11, 2, 18]}, {"input": [15, 8, 18, 4, 2], "output": [15, 8, 8, 18, 4, 2]}]}
{"id": "c194", "function": "def c194(x):\n    # reverse the input; prepend and append the length of the input\n    return [len(x)] + x[::-1] + [len(x)]\n\n", "train": {"normal": [{"input": [8, 7, 3, 11, 10, 19, 0], "output": [7, 0, 19, 10, 11, 3, 7, 8, 7]}, {"input": [19, 7, 2, 18, 10, 9], "output": [6, 9, 10, 18, 2, 7, 19, 6]}, {"input": [17, 13, 6, 19, 10, 15, 6, 4], "output": [8, 4, 6, 15, 10, 19, 6, 13, 17, 8]}, {"input": [3, 15, 15, 7, 18, 5, 14, 16], "output": [8, 16, 14, 5, 18, 7, 15, 15, 3, 8]}, {"input": [20, 6, 11, 12, 5, 14, 11], "output": [7, 11, 14, 5, 12, 11, 6, 20, 7]}, {"input": [4, 11, 12, 9, 14], "output": [5, 14, 9, 12, 11, 4, 5]}, {"input": [18, 12, 14, 10, 0], "output": [5, 0, 10, 14, 12, 18, 5]}, {"input": [19, 19, 13, 3, 13, 15, 1], "output": [7, 1, 15, 13, 3, 13, 19, 19, 7]}, {"input": [5, 0, 14, 1, 2, 8, 2], "output": [7, 2, 8, 2, 1, 14, 0, 5, 7]}, {"input": [16, 8, 3, 4, 18], "output": [5, 18, 4, 3, 8, 16, 5]}], "ood": [], "noise": [{"input": [11, 4, 1, 8, 11, 3, 4, 0], "output": [8, 0, 4, 1, 11, 8, 1, 5, 11, 8]}, {"input": [1, 3, 5, 6, 14, 18, 18, 12], "output": [8, 4, 18, 1, 14, 11, 2, 3, 1, 8]}, {"input": [5, 17, 2, 4, 18, 3, 1], "output": [7, 1, 12, 18, 4, 2, 17, 10, 7]}, {"input": [20, 15, 19, 6, 15, 6], "output": [6, 6, 15, 6, 17, 15, 20, 6]}, {"input": [6, 9, 8, 5, 20], "output": [5, 11, 5, 8, 9, 6, 5]}]}, "test": [{"input": [0, 4, 11, 12, 3, 2, 2], "output": [7, 2, 2, 3, 12, 11, 4, 0, 7]}, {"input": [12, 9, 4, 5, 11, 5, 14, 16], "output": [8, 16, 14, 5, 11, 5, 4, 9, 12, 8]}, {"input": [5, 13, 6, 15, 20, 13, 19], "output": [7, 19, 13, 20, 15, 6, 13, 5, 7]}, {"input": [0, 10, 8, 1, 20, 18], "output": [6, 18, 20, 1, 8, 10, 0, 6]}, {"input": [9, 0, 20, 6, 14], "output": [5, 14, 6, 20, 0, 9, 5]}, {"input": [9, 20, 11, 16, 19, 17, 18, 7], "output": [8, 7, 18, 17, 19, 16, 11, 20, 9, 8]}, {"input": [17, 11, 15, 4, 10, 17, 14, 2], "output": [8, 2, 14, 17, 10, 4, 15, 11, 17, 8]}, {"input": [5, 12, 7, 5, 1, 15, 9, 3], "output": [8, 3, 9, 15, 1, 5, 7, 12, 5, 8]}, {"input": [3, 8, 15, 9, 4], "output": [5, 4, 9, 15, 8, 3, 5]}, {"input": [14, 11, 5, 17, 5, 11, 17, 11], "output": [8, 11, 17, 11, 5, 17, 5, 11, 14, 8]}]}
{"id": "c245", "function": "def c245(x):\n    # number of times element 0 appears in the following elements\n    return [x[1:].count(x[0])]\n\n", "train": {"normal": [{"input": [18, 18, 3, 18, 2, 18], "output": [3]}, {"input": [12, 2, 12, 4, 2, 12, 19], "output": [2]}, {"input": [2, 7, 2, 8, 2, 14, 7], "output": [2]}, {"input": [0, 0, 6, 20, 7, 8], "output": [1]}, {"input": [0, 3, 15, 19, 5, 19, 8], "output": [0]}, {"input": [10, 10, 13, 14, 18, 10, 10], "output": [3]}, {"input": [15, 19, 19, 11, 15, 15], "output": [2]}, {"input": [2, 14, 2, 6, 8, 1, 16], "output": [1]}, {"input": [9, 9, 11, 20, 13, 5, 18, 9], "output": [2]}, {"input": [9, 7, 7, 13, 15, 11, 10], "output": [0]}], "ood": [], "noise": [{"input": [15, 7, 15, 20, 4, 18], "output": [2]}, {"input": [9, 4, 16, 6, 3, 17], "output": [1]}, {"input": [14, 1, 16, 8, 14, 14], "output": [3]}, {"input": [18, 20, 15, 18, 18, 2, 20], "output": [3]}, {"input": [1, 13, 19, 1, 18, 6, 16, 13], "output": [2]}]}, "test": [{"input": [4, 4, 15, 4, 19, 3, 10, 1], "output": [2]}, {"input": [5, 15, 4, 5, 15, 16, 2], "output": [1]}, {"input": [0, 0, 19, 11, 2, 10], "output": [1]}, {"input": [5, 9, 19, 10, 19, 16, 7], "output": [0]}, {"input": [5, 5, 12, 10, 5, 12], "output": [2]}, {"input": [12, 19, 1, 18, 4, 11], "output": [0]}, {"input": [16, 9, 10, 6, 16, 13, 16], "output": [2]}, {"input": [3, 3, 14, 12, 3, 0, 0], "output": [2]}, {"input": [18, 3, 18, 17, 18, 1, 12], "output": [2]}, {"input": [14, 19, 2, 14, 14, 1, 14, 19], "output": [3]}]}
{"id": "c032", "function": "def c032(x):\n    # remove first 2 elements if element 0 > last element, else remove last 2 elements\n    if x[0] > x[-1]:\n        return x[2:]\n    else:\n        return x[:-2]\n    \n", "train": {"normal": [{"input": [14, 89, 45, 43, 26, 3], "output": [45, 43, 26, 3]}, {"input": [60, 52, 56, 97, 17, 19, 57], "output": [56, 97, 17, 19, 57]}, {"input": [24, 5, 17, 8, 52, 0, 14], "output": [17, 8, 52, 0, 14]}, {"input": [5, 74, 66, 31, 71, 1], "output": [66, 31, 71, 1]}, {"input": [44, 15, 83, 59, 20], "output": [83, 59, 20]}, {"input": [82, 19, 26, 90, 1], "output": [26, 90, 1]}, {"input": [61, 83, 5, 46, 76, 96, 55], "output": [5, 46, 76, 96, 55]}, {"input": [64, 47, 80, 55, 9], "output": [80, 55, 9]}, {"input": [55, 29, 20, 8, 99, 87, 14], "output": [20, 8, 99, 87, 14]}, {"input": [17, 51, 59, 67, 1], "output": [59, 67, 1]}], "ood": [], "noise": [{"input": [92, 23, 91, 22, 77], "output": [91, 91, 86]}, {"input": [97, 3, 9, 32, 42, 20, 80, 95], "output": [9, 59, 42, 20, 80, 28]}, {"input": [70, 95, 5, 99, 14, 14], "output": [5, 10, 14, 7]}, {"input": [76, 29, 7, 67, 43, 32, 29], "output": [7, 67, 43, 40, 29]}, {"input": [90, 57, 63, 67, 79], "output": [65, 67, 77]}]}, "test": [{"input": [67, 87, 13, 75, 32, 0, 52], "output": [13, 75, 32, 0, 52]}, {"input": [92, 51, 9, 86, 25], "output": [9, 86, 25]}, {"input": [43, 49, 29, 29, 21, 72, 59, 16], "output": [29, 29, 21, 72, 59, 16]}, {"input": [56, 91, 6, 21, 7, 11], "output": [6, 21, 7, 11]}, {"input": [41, 41, 55, 80, 30, 97, 23], "output": [55, 80, 30, 97, 23]}, {"input": [90, 83, 84, 2, 88, 37, 89], "output": [84, 2, 88, 37, 89]}, {"input": [65, 80, 94, 31, 36, 16, 42], "output": [94, 31, 36, 16, 42]}, {"input": [50, 11, 15, 95, 82, 40], "output": [15, 95, 82, 40]}, {"input": [92, 33, 49, 25, 86], "output": [49, 25, 86]}, {"input": [86, 36, 42, 14, 45, 45, 53], "output": [42, 14, 45, 45, 53]}]}
{"id": "c058", "function": "def c058(x):\n    # remove the first 5 elements\n    return x[5:]\n\n", "train": {"normal": [{"input": [46, 36, 86, 77, 89, 63, 14], "output": [63, 14]}, {"input": [26, 26, 39, 48, 92, 8], "output": [8]}, {"input": [53, 37, 21, 70, 91, 48, 38, 26], "output": [48, 38, 26]}, {"input": [57, 4, 26, 61, 54, 71], "output": [71]}, {"input": [74, 58, 81, 38], "output": []}, {"input": [85, 61, 53, 29], "output": []}, {"input": [84, 68, 35, 50, 30, 34, 96, 53], "output": [34, 96, 53]}, {"input": [51, 52, 78, 26, 78, 25, 77], "output": [25, 77]}, {"input": [90, 33, 9, 34, 19], "output": []}, {"input": [6, 12, 97, 1, 10, 96, 55, 77], "output": [96, 55, 77]}], "ood": [], "noise": [{"input": [1, 58, 18, 7, 47, 12, 85], "output": [47, 85]}, {"input": [35, 41, 60, 13, 4, 33, 91, 39], "output": [33, 83, 36]}, {"input": [51, 4, 71, 12, 70, 71, 99, 57], "output": [79, 88, 57]}, {"input": [59, 91, 97, 39, 7, 70], "output": [71]}, {"input": [44, 60, 26, 8, 20, 96, 35], "output": [95, 35]}]}, "test": [{"input": [47, 63, 30, 82, 54, 2, 87, 35], "output": [2, 87, 35]}, {"input": [10, 3, 83, 39, 54, 92, 89, 81], "output": [92, 89, 81]}, {"input": [20, 34, 88, 9], "output": []}, {"input": [51, 26, 94, 69], "output": []}, {"input": [16, 93, 30, 28, 59, 83], "output": [83]}, {"input": [26, 33, 8, 19, 48], "output": []}, {"input": [8, 79, 5, 1, 23, 17, 26], "output": [17, 26]}, {"input": [23, 99, 82, 13, 84], "output": []}, {"input": [93, 50, 7, 31, 77, 80, 30], "output": [80, 30]}, {"input": [63, 10, 2, 85, 55, 5], "output": [5]}]}
{"id": "c174", "function": "def c174(x):\n    # keep the first M elements, where M is the number of unique elements\n    return x[:len(set(x))]\n\n", "train": {"normal": [{"input": [80, 23, 17, 82, 82, 17, 97], "output": [80, 23, 17, 82, 82]}, {"input": [37, 17, 96, 87, 96, 96, 17, 49, 1], "output": [37, 17, 96, 87, 96, 96]}, {"input": [33, 94, 71, 50, 54, 33, 71, 33, 42, 71], "output": [33, 94, 71, 50, 54, 33]}, {"input": [46, 78, 65, 62, 78, 27, 22, 16, 65, 78], "output": [46, 78, 65, 62, 78, 27, 22]}, {"input": [48, 44, 44, 9, 0, 24, 63, 44], "output": [48, 44, 44, 9, 0, 24]}, {"input": [44, 73, 61, 73, 95, 34, 95, 95, 81], "output": [44, 73, 61, 73, 95, 34]}, {"input": [84, 87, 69, 19, 13], "output": [84, 87, 69, 19, 13]}, {"input": [40, 92, 32, 47, 0], "output": [40, 92, 32, 47, 0]}, {"input": [40, 82, 8, 65, 65, 47, 32], "output": [40, 82, 8, 65, 65, 47]}, {"input": [35, 57, 4, 55, 20], "output": [35, 57, 4, 55, 20]}], "ood": [], "noise": [{"input": [30, 41, 41, 85, 30, 4, 91, 19, 85], "output": [41, 41, 41, 70, 30, 66]}, {"input": [0, 76, 74, 76, 39, 39, 74], "output": [0, 76, 34, 76]}, {"input": [42, 56, 38, 38, 52, 56], "output": [53, 56, 38, 38]}, {"input": [55, 6, 27, 48, 38, 9, 6, 80], "output": [35, 6, 27, 12, 38, 48, 6]}, {"input": [57, 43, 19, 26, 56, 5, 99, 45], "output": [57, 43, 19, 40, 56, 5, 7, 45]}]}, "test": [{"input": [84, 43, 91, 84, 59, 84], "output": [84, 43, 91, 84]}, {"input": [90, 42, 4, 76, 76, 20, 76, 5, 76], "output": [90, 42, 4, 76, 76, 20]}, {"input": [15, 52, 84, 90, 90, 66, 43, 66, 45], "output": [15, 52, 84, 90, 90, 66, 43]}, {"input": [44, 44, 99, 29, 92, 62, 29, 29], "output": [44, 44, 99, 29, 92]}, {"input": [77, 40, 37, 25, 13, 40, 13, 37], "output": [77, 40, 37, 25, 13]}, {"input": [3, 57, 72, 26, 60, 57, 72, 57, 77, 44], "output": [3, 57, 72, 26, 60, 57, 72]}, {"input": [72, 72, 96, 97, 9], "output": [72, 72, 96, 97]}, {"input": [68, 89, 76, 81, 98, 49, 58], "output": [68, 89, 76, 81, 98, 49, 58]}, {"input": [20, 15, 28, 34, 29, 94], "output": [20, 15, 28, 34, 29, 94]}, {"input": [80, 58, 63, 33, 62, 92, 52, 52], "output": [80, 58, 63, 33, 62, 92, 52]}]}
{"id": "c229", "function": "def c229(x):\n    # keep only first N elements of the reversed input, N is the first element\n    length = x[0]\n    return x[::-1][:length]\n\n", "train": {"normal": [{"input": [5, 3, 2, 76, 91], "output": [91, 76, 2, 3, 5]}, {"input": [5, 62, 58, 29, 43, 99, 48, 33], "output": [33, 48, 99, 43, 29]}, {"input": [0, 40, 87, 68, 88], "output": []}, {"input": [2, 52, 13, 8, 23, 90, 3], "output": [3, 90]}, {"input": [2, 50, 69, 41, 78], "output": [78, 41]}, {"input": [0, 90, 23, 37, 52], "output": []}, {"input": [3, 98, 81, 45, 90, 77, 78], "output": [78, 77, 90]}, {"input": [4, 27, 65, 26, 91], "output": [91, 26, 65, 27]}, {"input": [6, 22, 97, 11, 29, 41], "output": [41, 29, 11, 97, 22, 6]}, {"input": [1, 24, 73, 74, 85, 18, 40], "output": [40]}], "ood": [], "noise": [{"input": [0, 17, 35, 9, 55, 69], "output": [19]}, {"input": [3, 43, 1, 45, 95], "output": [95, 89, 29]}, {"input": [3, 72, 5, 69, 69], "output": [69, 69, 47]}, {"input": [0, 58, 32, 64, 83, 42, 90], "output": [0]}, {"input": [0, 33, 29, 4, 18], "output": [2]}]}, "test": [{"input": [6, 88, 50, 45, 86, 38], "output": [38, 86, 45, 50, 88, 6]}, {"input": [1, 28, 97, 32, 66, 18, 18], "output": [18]}, {"input": [5, 84, 8, 91, 18, 69, 95, 93], "output": [93, 95, 69, 18, 91]}, {"input": [3, 46, 26, 48, 25, 44, 68, 85], "output": [85, 68, 44]}, {"input": [4, 26, 22, 64, 17, 38], "output": [38, 17, 64, 22]}, {"input": [5, 45, 72, 19, 22, 31, 89], "output": [89, 31, 22, 19, 72]}, {"input": [3, 54, 14, 63, 92, 19, 5, 22], "output": [22, 5, 19]}, {"input": [1, 72, 97, 27, 22], "output": [22]}, {"input": [2, 0, 86, 27, 16, 2, 83], "output": [83, 2]}, {"input": [4, 44, 9, 75, 29, 43, 3, 42], "output": [42, 3, 43, 29]}]}
{"id": "c162", "function": "def c162(x):\n    # replace each element M with 3 * M + 7\n    return [3*i+7 for i in x]\n\n", "train": {"normal": [{"input": [13, 13, 19, 26, 10, 17, 29], "output": [46, 46, 64, 85, 37, 58, 94]}, {"input": [1, 26, 24, 19, 6, 8, 24], "output": [10, 85, 79, 64, 25, 31, 79]}, {"input": [18, 0, 6, 28, 8, 28, 22], "output": [61, 7, 25, 91, 31, 91, 73]}, {"input": [10, 11, 7, 28, 12, 28, 8], "output": [37, 40, 28, 91, 43, 91, 31]}, {"input": [23, 18, 2, 21, 29, 21], "output": [76, 61, 13, 70, 94, 70]}, {"input": [2, 22, 7, 3, 12, 0], "output": [13, 73, 28, 16, 43, 7]}, {"input": [16, 5, 26, 14, 19, 16, 15, 5], "output": [55, 22, 85, 49, 64, 55, 52, 22]}, {"input": [2, 22, 12, 18, 4, 0], "output": [13, 73, 43, 61, 19, 7]}, {"input": [9, 6, 15, 17, 17, 23, 22], "output": [34, 25, 52, 58, 58, 76, 73]}, {"input": [7, 18, 22, 21, 15], "output": [28, 61, 73, 70, 52]}], "ood": [], "noise": [{"input": [12, 9, 21, 11, 3, 5, 13], "output": [61, 34, 70, 40, 16, 22, 69]}, {"input": [26, 17, 5, 10, 20], "output": [48, 58, 22, 37, 67]}, {"input": [3, 26, 1, 9, 10], "output": [28, 85, 45, 34, 37]}, {"input": [19, 7, 0, 26, 19], "output": [64, 28, 46, 85, 64]}, {"input": [20, 29, 29, 1, 26], "output": [67, 94, 88, 10, 82]}]}, "test": [{"input": [13, 0, 6, 10, 18, 11, 30, 12], "output": [46, 7, 25, 37, 61, 40, 97, 43]}, {"input": [24, 5, 28, 14, 21], "output": [79, 22, 91, 49, 70]}, {"input": [25, 22, 20, 1, 17], "output": [82, 73, 67, 10, 58]}, {"input": [20, 19, 22, 25, 21, 16], "output": [67, 64, 73, 82, 70, 55]}, {"input": [30, 2, 16, 22, 23, 28], "output": [97, 13, 55, 73, 76, 91]}, {"input": [3, 22, 29, 20, 7, 22, 9, 30], "output": [16, 73, 94, 67, 28, 73, 34, 97]}, {"input": [1, 30, 0, 20, 5, 10, 23, 14], "output": [10, 97, 7, 67, 22, 37, 76, 49]}, {"input": [24, 21, 30, 0, 5], "output": [79, 70, 97, 7, 22]}, {"input": [30, 16, 26, 12, 16], "output": [97, 55, 85, 43, 55]}, {"input": [1, 8, 16, 13, 14, 26, 14], "output": [10, 31, 55, 46, 49, 85, 49]}]}
{"id": "c039", "function": "def c039(x):\n    # append 3 if the list contains a 3, else append 9 if the list contains a 9\n    if 3 in x:\n        return x + [3]\n    elif 9 in x:\n        return x + [9]\n    return x\n\n", "train": {"normal": [{"input": [12, 50, 17, 18, 18, 23, 31, 3], "output": [12, 50, 17, 18, 18, 23, 31, 3, 3]}, {"input": [18, 1, 4, 43, 37, 46], "output": [18, 1, 4, 43, 37, 46]}, {"input": [24, 40, 16, 41, 9, 11, 44], "output": [24, 40, 16, 41, 9, 11, 44, 9]}, {"input": [25, 3, 19, 9, 3, 17, 3, 1], "output": [25, 3, 19, 9, 3, 17, 3, 1, 3]}, {"input": [9, 24, 0, 2, 11, 21, 42], "output": [9, 24, 0, 2, 11, 21, 42, 9]}, {"input": [18, 35, 50, 45, 33, 14, 24], "output": [18, 35, 50, 45, 33, 14, 24]}, {"input": [22, 19, 11, 43, 15, 38, 42, 14], "output": [22, 19, 11, 43, 15, 38, 42, 14]}, {"input": [6, 20, 50, 3, 3, 3, 32, 23, 19], "output": [6, 20, 50, 3, 3, 3, 32, 23, 19, 3]}, {"input": [49, 6, 39, 12, 10, 9, 42], "output": [49, 6, 39, 12, 10, 9, 42, 9]}, {"input": [3, 40, 20, 43, 23, 10], "output": [3, 40, 20, 43, 23, 10, 3]}], "ood": [], "noise": [{"input": [31, 3, 38, 34, 26, 48], "output": [31, 3, 26, 34, 9, 48, 3]}, {"input": [25, 44, 9, 1, 17, 48, 19, 43], "output": [25, 44, 9, 1, 17, 48, 19, 24, 9]}, {"input": [3, 41, 49, 19, 39, 3, 39, 27], "output": [3, 41, 14, 19, 39, 16, 39, 7, 29]}, {"input": [23, 26, 2, 3, 3, 38, 1, 41], "output": [23, 13, 31, 3, 15, 38, 1, 28, 3]}, {"input": [47, 15, 20, 13, 46, 40, 44, 9], "output": [47, 15, 9, 13, 46, 40, 44, 12, 9]}]}, "test": [{"input": [17, 36, 16, 50, 6, 44, 7, 12], "output": [17, 36, 16, 50, 6, 44, 7, 12]}, {"input": [31, 2, 42, 38, 9, 9, 26], "output": [31, 2, 42, 38, 9, 9, 26, 9]}, {"input": [8, 10, 5, 48, 25, 3, 22], "output": [8, 10, 5, 48, 25, 3, 22, 3]}, {"input": [31, 13, 38, 47, 41, 16, 7], "output": [31, 13, 38, 47, 41, 16, 7]}, {"input": [19, 3, 22, 25, 7, 13], "output": [19, 3, 22, 25, 7, 13, 3]}, {"input": [50, 31, 28, 3, 3, 0, 36, 45], "output": [50, 31, 28, 3, 3, 0, 36, 45, 3]}, {"input": [43, 37, 3, 1, 9, 1], "output": [43, 37, 3, 1, 9, 1, 3]}, {"input": [4, 9, 17, 9, 9, 18, 32, 25], "output": [4, 9, 17, 9, 9, 18, 32, 25, 9]}, {"input": [6, 35, 22, 3, 3, 32, 1], "output": [6, 35, 22, 3, 3, 32, 1, 3]}, {"input": [16, 40, 27, 36, 9, 29], "output": [16, 40, 27, 36, 9, 29, 9]}]}
{"id": "c181", "function": "def c181(x):\n    # reverse the order of elements with even index\n    return [x[i] if i % 2 == 1 else x[-i-1] for i in range(len(x))]\n\n", "train": {"normal": [{"input": [96, 58, 42, 85, 16], "output": [16, 58, 42, 85, 96]}, {"input": [50, 89, 20, 77, 28, 94], "output": [94, 89, 77, 77, 89, 94]}, {"input": [50, 28, 36, 1, 6, 73, 46, 30], "output": [30, 28, 73, 1, 1, 73, 28, 30]}, {"input": [6, 47, 86, 47, 80, 42, 36], "output": [36, 47, 80, 47, 86, 42, 6]}, {"input": [84, 85, 92, 73, 76, 19, 52], "output": [52, 85, 76, 73, 92, 19, 84]}, {"input": [72, 89, 31, 64, 73, 81, 49], "output": [49, 89, 73, 64, 31, 81, 72]}, {"input": [98, 3, 14, 72, 42], "output": [42, 3, 14, 72, 98]}, {"input": [25, 17, 3, 76, 23, 43, 71, 10], "output": [10, 17, 43, 76, 76, 43, 17, 10]}, {"input": [97, 61, 13, 56, 18, 55, 37, 55], "output": [55, 61, 55, 56, 56, 55, 61, 55]}, {"input": [15, 21, 18, 82, 9, 5, 35, 70], "output": [70, 21, 5, 82, 82, 5, 21, 70]}], "ood": [], "noise": [{"input": [60, 35, 53, 23, 22, 82, 73, 67], "output": [74, 35, 82, 23, 23, 82, 35, 67]}, {"input": [71, 86, 84, 1, 74, 4, 94, 8], "output": [8, 86, 4, 1, 1, 4, 86, 50]}, {"input": [76, 3, 41, 97, 9, 44, 70, 39], "output": [39, 3, 44, 97, 12, 44, 51, 39]}, {"input": [52, 93, 52, 71, 70, 1], "output": [1, 5, 71, 71, 6, 34]}, {"input": [87, 65, 22, 59, 75, 80], "output": [80, 72, 59, 74, 65, 80]}]}, "test": [{"input": [99, 59, 99, 26, 48], "output": [48, 59, 99, 26, 99]}, {"input": [26, 30, 10, 51, 26, 24, 20], "output": [20, 30, 26, 51, 10, 24, 26]}, {"input": [6, 23, 24, 20, 43, 51], "output": [51, 23, 20, 20, 23, 51]}, {"input": [12, 24, 98, 53, 71, 79], "output": [79, 24, 53, 53, 24, 79]}, {"input": [80, 48, 91, 77, 20, 39, 25, 11], "output": [11, 48, 39, 77, 77, 39, 48, 11]}, {"input": [25, 95, 32, 53, 71, 50, 16, 43], "output": [43, 95, 50, 53, 53, 50, 95, 43]}, {"input": [89, 70, 66, 75, 7, 31, 75], "output": [75, 70, 7, 75, 66, 31, 89]}, {"input": [88, 27, 99, 82, 30, 20, 95], "output": [95, 27, 30, 82, 99, 20, 88]}, {"input": [31, 35, 9, 53, 90, 7], "output": [7, 35, 53, 53, 35, 7]}, {"input": [87, 55, 86, 37, 9, 74, 10, 2], "output": [2, 55, 74, 37, 37, 74, 55, 2]}]}
{"id": "c163", "function": "def c163(x):\n    # replace each element M with 2 * M - 10\n    return [2*i-10 for i in x]\n\n", "train": {"normal": [{"input": [35, 71, 12, 42, 82, 62, 20], "output": [60, 132, 14, 74, 154, 114, 30]}, {"input": [26, 85, 54, 72, 89, 60], "output": [42, 160, 98, 134, 168, 110]}, {"input": [26, 90, 30, 77, 43, 32, 98, 12], "output": [42, 170, 50, 144, 76, 54, 186, 14]}, {"input": [87, 32, 74, 74, 69, 35, 81, 45], "output": [164, 54, 138, 138, 128, 60, 152, 80]}, {"input": [96, 84, 66, 10, 23, 14], "output": [182, 158, 122, 10, 36, 18]}, {"input": [35, 64, 35, 55, 91, 26, 95, 94], "output": [60, 118, 60, 100, 172, 42, 180, 178]}, {"input": [28, 27, 80, 58, 12, 75], "output": [46, 44, 150, 106, 14, 140]}, {"input": [87, 55, 54, 24, 77, 55, 46, 87], "output": [164, 100, 98, 38, 144, 100, 82, 164]}, {"input": [10, 83, 65, 63, 97, 85, 71], "output": [10, 156, 120, 116, 184, 160, 132]}, {"input": [85, 26, 32, 25, 27, 14, 13, 39], "output": [160, 42, 54, 40, 44, 18, 16, 68]}], "ood": [], "noise": [{"input": [63, 50, 90, 74, 35], "output": [116, 97, 170, 138, 118]}, {"input": [21, 40, 42, 47, 45, 31, 18, 39], "output": [32, 70, 74, 84, 80, 52, 51, 68]}, {"input": [34, 87, 47, 60, 49, 85, 74, 74], "output": [86, 164, 84, 124, 130, 160, 138, 138]}, {"input": [21, 50, 60, 33, 27, 43], "output": [104, 90, 110, 56, 44, 38]}, {"input": [21, 24, 54, 98, 91, 54, 33, 24], "output": [32, 38, 127, 186, 106, 98, 56, 167]}]}, "test": [{"input": [20, 63, 14, 27, 90, 65, 62, 35], "output": [30, 116, 18, 44, 170, 120, 114, 60]}, {"input": [69, 41, 48, 59, 33, 58, 10, 31], "output": [128, 72, 86, 108, 56, 106, 10, 52]}, {"input": [12, 28, 32, 97, 30, 72, 66, 19], "output": [14, 46, 54, 184, 50, 134, 122, 28]}, {"input": [99, 11, 63, 82, 96, 26, 25, 77], "output": [188, 12, 116, 154, 182, 42, 40, 144]}, {"input": [75, 12, 52, 96, 31, 63, 94], "output": [140, 14, 94, 182, 52, 116, 178]}, {"input": [55, 50, 14, 84, 65, 26, 35], "output": [100, 90, 18, 158, 120, 42, 60]}, {"input": [29, 92, 26, 16, 41], "output": [48, 174, 42, 22, 72]}, {"input": [84, 82, 80, 93, 62, 49, 31], "output": [158, 154, 150, 176, 114, 88, 52]}, {"input": [23, 65, 34, 10, 94], "output": [36, 120, 58, 10, 178]}, {"input": [56, 45, 24, 31, 89, 23, 64], "output": [102, 80, 38, 52, 168, 36, 118]}]}
{"id": "c154", "function": "def c154(x):\n    # triple each even element\n    return [i*3 if i % 2 == 0 else i for i in x]\n\n", "train": {"normal": [{"input": [23, 30, 1, 32, 17], "output": [23, 90, 1, 96, 17]}, {"input": [1, 15, 28, 1, 18, 14, 1, 32], "output": [1, 15, 84, 1, 54, 42, 1, 96]}, {"input": [22, 30, 19, 33, 33, 11], "output": [66, 90, 19, 33, 33, 11]}, {"input": [19, 23, 18, 18, 19, 8, 17], "output": [19, 23, 54, 54, 19, 24, 17]}, {"input": [23, 15, 9, 8, 11, 26, 31, 3], "output": [23, 15, 9, 24, 11, 78, 31, 3]}, {"input": [31, 9, 1, 4, 1, 0], "output": [31, 9, 1, 12, 1, 0]}, {"input": [16, 8, 5, 12, 19, 1, 9], "output": [48, 24, 5, 36, 19, 1, 9]}, {"input": [10, 26, 3, 33, 0, 31, 12], "output": [30, 78, 3, 33, 0, 31, 36]}, {"input": [5, 23, 20, 0, 2, 14, 29, 18], "output": [5, 23, 60, 0, 6, 42, 29, 54]}, {"input": [5, 0, 30, 24, 29], "output": [5, 0, 90, 72, 29]}], "ood": [], "noise": [{"input": [29, 12, 10, 8, 21], "output": [29, 28, 27, 24, 21]}, {"input": [33, 25, 21, 33, 31, 6], "output": [33, 33, 21, 33, 32, 26]}, {"input": [31, 9, 7, 16, 5, 32], "output": [31, 9, 7, 48, 5, 40]}, {"input": [32, 21, 28, 13, 21, 29, 29, 0], "output": [41, 21, 84, 13, 68, 29, 29, 72]}, {"input": [5, 30, 17, 22, 17, 0], "output": [5, 51, 17, 66, 17, 0]}]}, "test": [{"input": [14, 14, 25, 32, 2], "output": [42, 42, 25, 96, 6]}, {"input": [33, 9, 24, 8, 29, 30, 12, 18], "output": [33, 9, 72, 24, 29, 90, 36, 54]}, {"input": [3, 32, 16, 11, 28], "output": [3, 96, 48, 11, 84]}, {"input": [8, 10, 31, 22, 17, 26, 11, 29], "output": [24, 30, 31, 66, 17, 78, 11, 29]}, {"input": [27, 21, 25, 33, 27, 14, 31, 8], "output": [27, 21, 25, 33, 27, 42, 31, 24]}, {"input": [24, 6, 25, 25, 7], "output": [72, 18, 25, 25, 7]}, {"input": [6, 15, 33, 11, 12, 6], "output": [18, 15, 33, 11, 36, 18]}, {"input": [3, 27, 26, 10, 29], "output": [3, 27, 78, 30, 29]}, {"input": [11, 32, 23, 22, 4, 12, 10, 14], "output": [11, 96, 23, 66, 12, 36, 30, 42]}, {"input": [25, 26, 25, 8, 4, 28], "output": [25, 78, 25, 24, 12, 84]}]}
{"id": "c166", "function": "def c166(x):\n    # unique elements in ascending order by the sum of their digits\n    res = {}\n    for i in x:\n        if i not in res:\n            res[i] = sum(map(int, str(i)))\n    return sorted(res, key=res.get)\n\n", "train": {"normal": [{"input": [96, 71, 64, 64, 64, 28, 36], "output": [71, 36, 64, 28, 96]}, {"input": [65, 43, 11, 92, 92, 0, 43], "output": [0, 11, 43, 65, 92]}, {"input": [52, 87, 26, 87, 37], "output": [52, 26, 37, 87]}, {"input": [6, 7, 23, 23, 72, 54], "output": [23, 6, 7, 72, 54]}, {"input": [4, 97, 28, 4, 22, 22, 2], "output": [2, 4, 22, 28, 97]}, {"input": [92, 26, 12, 45, 12, 80, 10, 91], "output": [10, 12, 26, 80, 45, 91, 92]}, {"input": [83, 65, 31, 68, 13, 7], "output": [31, 13, 7, 83, 65, 68]}, {"input": [54, 63, 47, 5, 57], "output": [5, 54, 63, 47, 57]}, {"input": [3, 39, 97, 48, 39], "output": [3, 39, 48, 97]}, {"input": [68, 46, 96, 96, 51, 24, 68], "output": [51, 24, 46, 68, 96]}], "ood": [], "noise": [{"input": [31, 17, 48, 17, 64, 81], "output": [31, 17, 52, 64, 48]}, {"input": [39, 63, 28, 23, 67], "output": [36, 63, 55, 39, 67]}, {"input": [83, 45, 22, 67, 83], "output": [22, 53, 73, 67]}, {"input": [38, 28, 28, 56, 56, 97, 60], "output": [28, 28, 38, 90, 97]}, {"input": [1, 91, 91, 64, 6, 91], "output": [16, 6, 91, 64]}]}, "test": [{"input": [98, 28, 14, 91, 94, 16, 36, 28], "output": [14, 16, 36, 28, 91, 94, 98]}, {"input": [39, 37, 11, 37, 11], "output": [11, 37, 39]}, {"input": [53, 53, 79, 85, 53, 22], "output": [22, 53, 85, 79]}, {"input": [63, 98, 84, 84, 0, 30, 97, 39], "output": [0, 30, 63, 84, 39, 97, 98]}, {"input": [68, 38, 84, 46, 2, 33, 52], "output": [2, 33, 52, 46, 38, 84, 68]}, {"input": [77, 27, 26, 81, 95, 27, 26, 43], "output": [43, 26, 27, 81, 77, 95]}, {"input": [97, 47, 11, 19, 72, 47, 72], "output": [11, 72, 19, 47, 97]}, {"input": [11, 54, 16, 58, 28, 6, 76, 93], "output": [11, 6, 16, 54, 28, 93, 58, 76]}, {"input": [76, 68, 41, 41, 86, 28, 39, 89], "output": [41, 28, 39, 76, 68, 86, 89]}, {"input": [27, 6, 56, 22, 70, 85, 6, 2, 85], "output": [2, 22, 6, 70, 27, 56, 85]}]}
{"id": "c084", "function": "def c084(x):\n    # remove all but element 6\n    return [x[6]]\n\n", "train": {"normal": [{"input": [99, 62, 77, 11, 68, 27, 40], "output": [40]}, {"input": [57, 72, 74, 56, 66, 20, 94, 96, 36, 75], "output": [94]}, {"input": [2, 41, 92, 10, 6, 12, 33, 96, 66], "output": [33]}, {"input": [53, 97, 1, 6, 38, 42, 5], "output": [5]}, {"input": [53, 56, 61, 50, 79, 30, 19], "output": [19]}, {"input": [89, 62, 49, 54, 18, 49, 26, 24, 78, 50], "output": [26]}, {"input": [40, 67, 23, 93, 53, 66, 26, 90], "output": [26]}, {"input": [38, 98, 84, 16, 20, 26, 16, 90], "output": [16]}, {"input": [31, 37, 67, 17, 3, 34, 80, 95, 65], "output": [80]}, {"input": [51, 10, 6, 23, 60, 11, 32, 66], "output": [32]}], "ood": [], "noise": [{"input": [47, 90, 71, 82, 10, 14, 13, 93], "output": [14]}, {"input": [37, 57, 6, 29, 78, 38, 23, 73], "output": [24]}, {"input": [7, 43, 43, 15, 49, 92, 70, 25, 64], "output": [71]}, {"input": [50, 16, 54, 78, 9, 31, 84], "output": [85]}, {"input": [61, 74, 61, 49, 97, 63, 53, 6], "output": [54]}]}, "test": [{"input": [61, 67, 88, 59, 99, 50, 92, 88, 81], "output": [92]}, {"input": [8, 98, 31, 72, 93, 44, 87, 62, 42, 6], "output": [87]}, {"input": [4, 82, 13, 58, 49, 99, 42, 14, 33, 48], "output": [42]}, {"input": [84, 96, 62, 6, 61, 26, 58, 58, 4], "output": [58]}, {"input": [61, 88, 16, 13, 93, 19, 26], "output": [26]}, {"input": [10, 76, 93, 28, 2, 4, 0, 59, 4], "output": [0]}, {"input": [41, 19, 91, 80, 40, 90, 74], "output": [74]}, {"input": [80, 87, 59, 65, 69, 56, 7], "output": [7]}, {"input": [60, 89, 5, 41, 78, 71, 85, 27], "output": [85]}, {"input": [15, 89, 56, 98, 34, 31, 30], "output": [30]}]}
{"id": "c249", "function": "def c249(x):\n    # use 0s to delimit sublists, give the first element of each sublist\n    res = []\n    sublist = []\n    for i in x:\n        if i == 0:\n            if sublist:\n                res.append(sublist[0])\n                sublist = []\n        else:\n            sublist.append(i)\n    if sublist:\n        res.append(sublist[0])\n    return res\n\n", "train": {"normal": [{"input": [0, 0, 87, 0, 36, 63, 79, 76, 55, 72, 52], "output": [87, 36]}, {"input": [29, 0, 30, 0, 22, 77, 92, 60, 35, 32, 0, 79], "output": [29, 30, 22, 79]}, {"input": [20, 1, 91, 12, 62, 97, 56], "output": [20]}, {"input": [0, 58, 5, 12, 75, 11, 0, 73, 98, 0], "output": [58, 73]}, {"input": [13, 54, 0, 64, 79, 55, 58, 35, 22], "output": [13, 64]}, {"input": [83, 0, 16, 35, 39, 63, 50, 98], "output": [83, 16]}, {"input": [73, 71, 72, 54, 29, 59, 86, 17], "output": [73]}, {"input": [23, 38, 0, 0, 64, 73, 39, 86], "output": [23, 64]}, {"input": [4, 46, 99, 0, 11, 41, 34, 99], "output": [4, 11]}, {"input": [93, 11, 30, 0, 0, 96, 1, 27, 51], "output": [93, 96]}], "ood": [], "noise": [{"input": [11, 53, 37, 60, 47, 48, 86, 39], "output": [12]}, {"input": [77, 43, 0, 55, 84, 0, 7, 27, 31], "output": [77, 55, 51]}, {"input": [49, 13, 7, 0, 46, 3, 0, 0, 47], "output": [49, 46, 49]}, {"input": [73, 42, 50, 9, 0, 1, 78], "output": [73, 47]}, {"input": [0, 76, 91, 67, 12, 81, 21, 18, 21, 21], "output": [77]}]}, "test": [{"input": [46, 94, 49, 43, 23, 9, 0, 7], "output": [46, 7]}, {"input": [26, 93, 0, 4, 0, 53, 21, 88, 19, 6, 10, 0], "output": [26, 4, 53]}, {"input": [34, 57, 0, 82, 3, 87, 47, 0], "output": [34, 82]}, {"input": [0, 60, 0, 58, 51, 63, 30, 9, 66, 0, 52, 0], "output": [60, 58, 52]}, {"input": [99, 68, 80, 29, 39, 49, 0, 31, 35, 0, 10, 0], "output": [99, 31, 10]}, {"input": [70, 95, 57, 46, 11, 94, 61, 24], "output": [70]}, {"input": [0, 90, 72, 63, 92, 64, 0, 56, 13, 73], "output": [90, 56]}, {"input": [0, 22, 29, 65, 96, 36, 0, 48, 0], "output": [22, 48]}, {"input": [80, 0, 97, 2, 73, 30, 65, 78], "output": [80, 97]}, {"input": [66, 80, 73, 83, 40, 39, 96, 50, 33], "output": [66]}]}
{"id": "c118", "function": "def c118(x):\n    # left rotate by N elements, N is the last element\n    return x[x[-1]:] + x[:x[-1]]\n\n", "train": {"normal": [{"input": [44, 44, 8, 44, 59, 4], "output": [59, 4, 44, 44, 8, 44]}, {"input": [88, 29, 76, 23, 89, 60, 79, 3], "output": [23, 89, 60, 79, 3, 88, 29, 76]}, {"input": [44, 36, 95, 15, 1, 37, 1], "output": [36, 95, 15, 1, 37, 1, 44]}, {"input": [91, 34, 96, 25, 93, 72, 1], "output": [34, 96, 25, 93, 72, 1, 91]}, {"input": [24, 3, 45, 72, 3, 2], "output": [45, 72, 3, 2, 24, 3]}, {"input": [14, 43, 28, 55, 34, 29, 73, 44, 8], "output": [8, 14, 43, 28, 55, 34, 29, 73, 44]}, {"input": [34, 36, 12, 72, 79, 1], "output": [36, 12, 72, 79, 1, 34]}, {"input": [69, 89, 28, 46, 1, 23, 39, 1], "output": [89, 28, 46, 1, 23, 39, 1, 69]}, {"input": [3, 41, 55, 32, 45, 6, 4], "output": [45, 6, 4, 3, 41, 55, 32]}, {"input": [12, 33, 18, 22, 4, 18, 38, 30, 7], "output": [30, 7, 12, 33, 18, 22, 4, 18, 38]}], "ood": [], "noise": [{"input": [41, 39, 84, 52, 76, 59, 2], "output": [84, 5, 76, 22, 2, 54, 39]}, {"input": [93, 48, 5, 66, 39, 6, 51, 7], "output": [7, 93, 51, 5, 66, 39, 6, 51]}, {"input": [62, 29, 69, 35, 97, 4], "output": [97, 66, 62, 35, 69, 35]}, {"input": [88, 46, 7, 32, 80, 8, 28, 6], "output": [28, 6, 88, 46, 7, 32, 80, 76]}, {"input": [1, 74, 73, 34, 73, 5, 0], "output": [54, 74, 73, 34, 73, 33, 28]}]}, "test": [{"input": [5, 74, 57, 52, 26, 4, 53, 2], "output": [57, 52, 26, 4, 53, 2, 5, 74]}, {"input": [12, 15, 6, 50, 80, 1], "output": [15, 6, 50, 80, 1, 12]}, {"input": [30, 34, 21, 48, 73, 32, 1, 56, 0], "output": [30, 34, 21, 48, 73, 32, 1, 56, 0]}, {"input": [97, 26, 53, 43, 45, 62, 44, 7], "output": [7, 97, 26, 53, 43, 45, 62, 44]}, {"input": [33, 92, 56, 17, 5, 5], "output": [5, 33, 92, 56, 17, 5]}, {"input": [26, 89, 76, 57, 53, 37, 6], "output": [6, 26, 89, 76, 57, 53, 37]}, {"input": [25, 81, 28, 98, 52, 3], "output": [98, 52, 3, 25, 81, 28]}, {"input": [13, 84, 91, 15, 69, 20, 13, 3], "output": [15, 69, 20, 13, 3, 13, 84, 91]}, {"input": [77, 33, 78, 57, 55, 4], "output": [55, 4, 77, 33, 78, 57]}, {"input": [6, 47, 92, 83, 59, 50, 73, 89, 7], "output": [89, 7, 6, 47, 92, 83, 59, 50, 73]}]}
{"id": "c152", "function": "def c152(x):\n    # replace each element with the product of its digits\n    res = []\n    for i in x:\n        if i < 10:\n            res.append(0)\n        else:\n            res.append(int(str(i)[0]) * int(str(i)[1]))\n    return res\n\n", "train": {"normal": [{"input": [32, 93, 9, 7, 84, 83, 95], "output": [6, 27, 0, 0, 32, 24, 45]}, {"input": [73, 5, 37, 47, 23], "output": [21, 0, 21, 28, 6]}, {"input": [72, 16, 55, 33, 9, 56], "output": [14, 6, 25, 9, 0, 30]}, {"input": [89, 78, 7, 40, 27, 80], "output": [72, 56, 0, 0, 14, 0]}, {"input": [32, 72, 86, 56, 11, 39, 64, 22], "output": [6, 14, 48, 30, 1, 27, 24, 4]}, {"input": [9, 61, 52, 22, 7, 85, 95], "output": [0, 6, 10, 4, 0, 40, 45]}, {"input": [18, 96, 30, 91, 58, 52], "output": [8, 54, 0, 9, 40, 10]}, {"input": [72, 99, 82, 63, 71], "output": [14, 81, 16, 18, 7]}, {"input": [70, 35, 1, 63, 53, 36, 64], "output": [0, 15, 0, 18, 15, 18, 24]}, {"input": [91, 44, 34, 35, 90, 24, 67, 71], "output": [9, 16, 12, 15, 0, 8, 42, 7]}], "ood": [], "noise": [{"input": [83, 86, 15, 73, 88, 31, 53, 76], "output": [24, 48, 5, 21, 64, 3, 15, 48]}, {"input": [72, 83, 77, 74, 14, 83, 82, 69], "output": [15, 24, 49, 28, 49, 24, 16, 54]}, {"input": [44, 12, 67, 50, 24, 62], "output": [16, 2, 42, 23, 8, 12]}, {"input": [33, 55, 32, 38, 29, 29, 58], "output": [9, 25, 32, 24, 18, 18, 40]}, {"input": [12, 94, 42, 98, 82, 64], "output": [2, 36, 19, 72, 16, 8]}]}, "test": [{"input": [15, 19, 27, 42, 9, 16, 66], "output": [5, 9, 14, 8, 0, 6, 36]}, {"input": [76, 73, 86, 95, 15, 35, 1, 24], "output": [42, 21, 48, 45, 5, 15, 0, 8]}, {"input": [95, 51, 65, 36, 60, 1], "output": [45, 5, 30, 18, 0, 0]}, {"input": [33, 64, 98, 21, 97], "output": [9, 24, 72, 2, 63]}, {"input": [62, 35, 69, 38, 96, 35, 42, 59], "output": [12, 15, 54, 24, 54, 15, 8, 45]}, {"input": [30, 71, 31, 77, 30, 34], "output": [0, 7, 3, 49, 0, 12]}, {"input": [55, 27, 5, 7, 95, 1], "output": [25, 14, 0, 0, 45, 0]}, {"input": [56, 54, 42, 21, 8, 7, 90], "output": [30, 20, 8, 2, 0, 0, 0]}, {"input": [28, 69, 88, 65, 58, 51], "output": [16, 54, 64, 30, 40, 5]}, {"input": [50, 56, 27, 25, 15, 68], "output": [0, 30, 14, 10, 5, 48]}]}
{"id": "c237", "function": "def c237(x):\n    # cumulative sum of unique elements\n    res = []\n    s = 0\n    for i in x:\n        if i not in res:\n            res.append(i)\n    for i in range(len(res)):\n        s += res[i]\n        res[i] = s\n    return res\n\n", "train": {"normal": [{"input": [7, 27, 25, 12, 25], "output": [7, 34, 59, 71]}, {"input": [19, 15, 2, 26, 23, 17, 2], "output": [19, 34, 36, 62, 85, 102]}, {"input": [0, 9, 13, 9, 12, 29, 0], "output": [0, 9, 22, 34, 63]}, {"input": [14, 8, 8, 28, 21, 14, 8, 28], "output": [14, 22, 50, 71]}, {"input": [28, 16, 7, 7, 19, 3, 15, 24], "output": [28, 44, 51, 70, 73, 88, 112]}, {"input": [21, 10, 5, 20, 20, 21], "output": [21, 31, 36, 56]}, {"input": [6, 25, 7, 25, 25, 15, 18], "output": [6, 31, 38, 53, 71]}, {"input": [17, 17, 11, 17, 23, 11, 6, 23, 17], "output": [17, 28, 51, 57]}, {"input": [20, 30, 30, 30, 16], "output": [20, 50, 66]}, {"input": [16, 3, 14, 30, 14], "output": [16, 19, 33, 63]}], "ood": [], "noise": [{"input": [6, 19, 17, 19, 28, 17], "output": [29, 25, 42, 27]}, {"input": [7, 7, 26, 18, 12, 7], "output": [31, 46, 51, 63]}, {"input": [26, 3, 25, 23, 18, 23], "output": [48, 29, 54, 52, 95]}, {"input": [22, 20, 28, 3, 2, 22, 20, 12], "output": [70, 42, 70, 54, 75, 87]}, {"input": [2, 3, 2, 29, 0, 7, 10, 7], "output": [2, 5, 34, 7, 15, 48]}]}, "test": [{"input": [16, 29, 29, 25, 0, 13, 7], "output": [16, 45, 70, 70, 83, 90]}, {"input": [6, 6, 10, 0, 23], "output": [6, 16, 16, 39]}, {"input": [0, 2, 24, 11, 2, 0, 6], "output": [0, 2, 26, 37, 43]}, {"input": [22, 0, 25, 9, 17, 11], "output": [22, 22, 47, 56, 73, 84]}, {"input": [27, 27, 21, 9, 27, 21, 2, 15], "output": [27, 48, 57, 59, 74]}, {"input": [23, 17, 30, 18, 0, 18, 17, 6], "output": [23, 40, 70, 88, 88, 94]}, {"input": [26, 2, 13, 17, 29], "output": [26, 28, 41, 58, 87]}, {"input": [7, 2, 3, 2, 13, 18, 27], "output": [7, 9, 12, 25, 43, 70]}, {"input": [25, 16, 28, 25, 9, 9], "output": [25, 41, 69, 78]}, {"input": [30, 12, 21, 21, 8], "output": [30, 42, 63, 71]}]}
{"id": "c243", "function": "def c243(x):\n    # number of odd elements\n    return [len([i for i in x if i % 2 == 1])]\n\n", "train": {"normal": [{"input": [51, 44, 23, 56, 76, 10, 21, 25], "output": [4]}, {"input": [46, 82, 51, 74, 55, 55], "output": [3]}, {"input": [43, 15, 7, 38, 95, 90, 20], "output": [4]}, {"input": [51, 88, 12, 70, 64, 83], "output": [2]}, {"input": [55, 38, 46, 71, 15, 1, 72], "output": [4]}, {"input": [62, 54, 83, 25, 55, 28], "output": [3]}, {"input": [96, 24, 28, 8, 32, 15], "output": [1]}, {"input": [34, 73, 26, 41, 18, 19], "output": [3]}, {"input": [11, 7, 11, 41, 62, 98, 84], "output": [4]}, {"input": [14, 77, 66, 66, 26, 86], "output": [1]}], "ood": [], "noise": [{"input": [88, 69, 77, 54, 76, 10], "output": [3]}, {"input": [0, 62, 93, 62, 51], "output": [3]}, {"input": [59, 25, 37, 10, 28, 97, 44, 17], "output": [6]}, {"input": [87, 88, 35, 30, 72, 50, 9, 83], "output": [5]}, {"input": [96, 92, 0, 48, 74], "output": [1]}]}, "test": [{"input": [11, 67, 17, 15, 5, 76, 73], "output": [6]}, {"input": [47, 8, 76, 40, 43], "output": [2]}, {"input": [43, 61, 40, 26, 5, 68, 42], "output": [3]}, {"input": [36, 35, 96, 50, 48, 25, 52, 3], "output": [3]}, {"input": [72, 62, 75, 67, 51, 78, 44], "output": [3]}, {"input": [9, 58, 83, 57, 44, 77, 13, 52], "output": [5]}, {"input": [65, 43, 58, 71, 11, 36, 51, 96], "output": [5]}, {"input": [97, 81, 71, 73, 29], "output": [5]}, {"input": [55, 12, 96, 12, 98, 59, 68, 61], "output": [3]}, {"input": [65, 88, 58, 38, 31, 28, 52, 7], "output": [3]}]}
{"id": "c188", "function": "def c188(x):\n    # replace each element with 1 if it is divisible by 3, else replace with 0\n    return [1 if i % 3 == 0 else 0 for i in x]\n\n", "train": {"normal": [{"input": [91, 91, 26, 69, 83, 82, 19, 55], "output": [0, 0, 0, 1, 0, 0, 0, 0]}, {"input": [9, 43, 26, 82, 50, 97, 93], "output": [1, 0, 0, 0, 0, 0, 1]}, {"input": [31, 12, 98, 20, 99, 52], "output": [0, 1, 0, 0, 1, 0]}, {"input": [91, 77, 34, 75, 59, 8], "output": [0, 0, 0, 1, 0, 0]}, {"input": [64, 66, 30, 29, 4, 92, 43, 20], "output": [0, 1, 1, 0, 0, 0, 0, 0]}, {"input": [80, 31, 72, 8, 89, 76, 12, 4], "output": [0, 0, 1, 0, 0, 0, 1, 0]}, {"input": [50, 69, 52, 62, 20, 54], "output": [0, 1, 0, 0, 0, 1]}, {"input": [26, 18, 12, 4, 7, 90, 96], "output": [0, 1, 1, 0, 0, 1, 1]}, {"input": [50, 92, 91, 16, 31, 13, 59], "output": [0, 0, 0, 0, 0, 0, 0]}, {"input": [25, 39, 87, 92, 17, 85], "output": [0, 1, 1, 0, 0, 0]}], "ood": [], "noise": [{"input": [89, 30, 4, 1, 46], "output": [0, 1, 1, 0, 0]}, {"input": [18, 72, 70, 81, 42, 43], "output": [1, 1, 0, 0, 1, 0]}, {"input": [50, 70, 58, 22, 50, 2, 33, 57], "output": [0, 0, 0, 0, 0, 1, 1, 1]}, {"input": [51, 59, 83, 54, 82, 32, 1], "output": [0, 0, 1, 0, 0, 0, 0]}, {"input": [23, 28, 6, 96, 6, 93, 93, 64], "output": [0, 1, 1, 1, 0, 1, 0, 0]}]}, "test": [{"input": [11, 24, 92, 31, 98, 68, 60], "output": [0, 1, 0, 0, 0, 0, 1]}, {"input": [56, 78, 80, 18, 30], "output": [0, 1, 0, 1, 1]}, {"input": [70, 69, 52, 9, 63, 65, 4], "output": [0, 1, 0, 1, 1, 0, 0]}, {"input": [71, 35, 31, 33, 25], "output": [0, 0, 0, 1, 0]}, {"input": [16, 9, 67, 0, 89], "output": [0, 1, 0, 1, 0]}, {"input": [90, 24, 48, 43, 91, 84], "output": [1, 1, 1, 0, 0, 1]}, {"input": [78, 73, 43, 46, 82, 82], "output": [1, 0, 0, 0, 0, 0]}, {"input": [90, 99, 84, 57, 9], "output": [1, 1, 1, 1, 1]}, {"input": [52, 9, 76, 45, 50, 76], "output": [0, 1, 0, 1, 0, 0]}, {"input": [7, 63, 79, 43, 53, 23, 79], "output": [0, 1, 0, 0, 0, 0, 0]}]}
{"id": "c139", "function": "def c139(x):\n    # remove all occurrences of the smallest element and the largest element\n    min_val = min(x)\n    max_val = max(x)\n    return [i for i in x if i != min_val and i != max_val]\n\n", "train": {"normal": [{"input": [0, 7, 1, 1, 5, 2, 2], "output": [1, 1, 5, 2, 2]}, {"input": [5, 10, 5, 4, 4, 3], "output": [5, 5, 4, 4]}, {"input": [8, 4, 4, 1, 2, 7, 2], "output": [4, 4, 2, 7, 2]}, {"input": [9, 9, 3, 8, 9], "output": [8]}, {"input": [3, 1, 0, 4, 0, 10, 6, 1], "output": [3, 1, 4, 6, 1]}, {"input": [2, 5, 3, 3, 9, 1], "output": [2, 5, 3, 3]}, {"input": [7, 7, 0, 1, 7, 3, 3], "output": [1, 3, 3]}, {"input": [4, 8, 2, 0, 2], "output": [4, 2, 2]}, {"input": [1, 2, 6, 10, 9, 10], "output": [2, 6, 9]}, {"input": [1, 4, 8, 6, 9], "output": [4, 8, 6]}], "ood": [], "noise": [{"input": [0, 7, 7, 1, 7, 9, 2, 10], "output": [7, 7, 1, 1, 9, 3]}, {"input": [3, 6, 10, 6, 5, 3, 7, 2], "output": [5, 6, 6, 5, 3, 7]}, {"input": [2, 2, 10, 5, 6, 1], "output": [2, 2, 2, 2]}, {"input": [4, 5, 10, 3, 2, 6], "output": [4, 4, 5, 6]}, {"input": [9, 1, 8, 4, 7], "output": [4, 4, 7]}]}, "test": [{"input": [0, 9, 0, 9, 4, 2], "output": [4, 2]}, {"input": [1, 1, 2, 6, 10, 2, 0, 0], "output": [1, 1, 2, 6, 2]}, {"input": [9, 9, 9, 6, 8, 9], "output": [8]}, {"input": [0, 3, 7, 0, 0, 9, 10, 4], "output": [3, 7, 9, 4]}, {"input": [7, 7, 5, 0, 10, 5, 4, 0], "output": [7, 7, 5, 5, 4]}, {"input": [7, 0, 2, 3, 5, 7, 5, 4], "output": [2, 3, 5, 5, 4]}, {"input": [0, 9, 0, 2, 6, 5, 0], "output": [2, 6, 5]}, {"input": [8, 6, 3, 0, 10, 6, 10], "output": [8, 6, 3, 6]}, {"input": [7, 5, 6, 2, 3, 8, 5], "output": [7, 5, 6, 3, 5]}, {"input": [2, 6, 0, 9, 7, 7], "output": [2, 6, 7, 7]}]}
{"id": "c036", "function": "def c036(x):\n    # swap elements 2 and 3 if element 2 > element 3, else swap elements 1 and 4\n    if x[2] > x[3]:\n        x[2], x[3] = x[3], x[2]\n    else:\n        x[1], x[4] = x[4], x[1]\n    return x\n\n", "train": {"normal": [{"input": [6, 3, 8, 10, 0], "output": [6, 0, 8, 10, 3]}, {"input": [0, 4, 9, 6, 3], "output": [0, 4, 6, 9, 3]}, {"input": [2, 7, 0, 7, 10, 9, 3, 5], "output": [2, 10, 0, 7, 7, 9, 3, 5]}, {"input": [10, 2, 9, 0, 10, 8], "output": [10, 2, 0, 9, 10, 8]}, {"input": [8, 2, 10, 2, 3, 1], "output": [8, 2, 2, 10, 3, 1]}, {"input": [3, 8, 9, 9, 1, 1, 9, 3], "output": [3, 1, 9, 9, 8, 1, 9, 3]}, {"input": [5, 9, 0, 10, 6, 3], "output": [5, 6, 0, 10, 9, 3]}, {"input": [10, 8, 7, 10, 9], "output": [10, 9, 7, 10, 8]}, {"input": [9, 10, 4, 10, 0, 0, 9], "output": [9, 0, 4, 10, 10, 0, 9]}, {"input": [9, 8, 4, 3, 10], "output": [9, 8, 3, 4, 10]}], "ood": [], "noise": [{"input": [7, 7, 6, 3, 6, 6, 10, 6], "output": [7, 7, 3, 3, 6, 5, 10, 6]}, {"input": [10, 6, 6, 7, 2, 3, 7, 2], "output": [4, 6, 6, 7, 6, 8, 7, 2]}, {"input": [8, 0, 9, 4, 0, 1], "output": [3, 0, 3, 4, 0, 1]}, {"input": [9, 2, 3, 7, 8, 6, 1], "output": [9, 2, 7, 7, 9, 6, 1]}, {"input": [8, 0, 3, 0, 0, 3, 10, 8], "output": [8, 0, 8, 4, 6, 3, 10, 8]}]}, "test": [{"input": [10, 6, 2, 1, 2], "output": [10, 6, 1, 2, 2]}, {"input": [7, 8, 8, 5, 4, 2], "output": [7, 8, 5, 8, 4, 2]}, {"input": [4, 7, 6, 0, 9], "output": [4, 7, 0, 6, 9]}, {"input": [0, 0, 1, 8, 2, 4, 0, 10], "output": [0, 2, 1, 8, 0, 4, 0, 10]}, {"input": [5, 5, 2, 8, 10], "output": [5, 10, 2, 8, 5]}, {"input": [4, 9, 5, 9, 7], "output": [4, 7, 5, 9, 9]}, {"input": [3, 5, 7, 8, 1], "output": [3, 1, 7, 8, 5]}, {"input": [10, 0, 6, 8, 1], "output": [10, 1, 6, 8, 0]}, {"input": [4, 7, 8, 8, 7, 7, 2, 7], "output": [4, 7, 8, 8, 7, 7, 2, 7]}, {"input": [3, 5, 4, 6, 8, 5, 1, 5], "output": [3, 8, 4, 6, 5, 5, 1, 5]}]}
{"id": "c201", "function": "def c201(x):\n    # elements > first element, followed by elements < first element\n    return [i for i in x if i > x[0]] + [i for i in x if i < x[0]]\n\n", "train": {"normal": [{"input": [95, 16, 26, 87, 2, 8, 45, 21], "output": [16, 26, 87, 2, 8, 45, 21]}, {"input": [46, 9, 56, 72, 59, 95, 49], "output": [56, 72, 59, 95, 49, 9]}, {"input": [41, 2, 35, 68, 68, 86, 20], "output": [68, 68, 86, 2, 35, 20]}, {"input": [35, 36, 7, 40, 23, 32, 78], "output": [36, 40, 78, 7, 23, 32]}, {"input": [5, 4, 88, 22, 87], "output": [88, 22, 87, 4]}, {"input": [41, 18, 7, 98, 63, 70, 15, 82], "output": [98, 63, 70, 82, 18, 7, 15]}, {"input": [52, 5, 85, 22, 11], "output": [85, 5, 22, 11]}, {"input": [75, 88, 86, 10, 74, 79], "output": [88, 86, 79, 10, 74]}, {"input": [8, 54, 77, 80, 80, 82, 87, 84], "output": [54, 77, 80, 80, 82, 87, 84]}, {"input": [60, 57, 13, 87, 96], "output": [87, 96, 57, 13]}], "ood": [], "noise": [{"input": [16, 28, 39, 37, 90], "output": [47, 39, 37, 90]}, {"input": [87, 1, 15, 78, 16, 22, 38, 51], "output": [1, 15, 44, 16, 22, 38, 29]}, {"input": [56, 38, 63, 44, 69, 25, 78, 38], "output": [63, 69, 78, 78, 73, 25, 38]}, {"input": [60, 50, 86, 20, 93, 77, 47, 17], "output": [86, 52, 77, 46, 20, 47, 68]}, {"input": [55, 18, 4, 17, 46, 41, 98, 42], "output": [84, 18, 4, 17, 46, 41, 42]}]}, "test": [{"input": [20, 76, 97, 21, 44, 54, 67, 27], "output": [76, 97, 21, 44, 54, 67, 27]}, {"input": [17, 82, 85, 19, 57, 96, 34, 22], "output": [82, 85, 19, 57, 96, 34, 22]}, {"input": [78, 10, 68, 59, 13], "output": [10, 68, 59, 13]}, {"input": [82, 4, 4, 94, 2, 55, 22, 50], "output": [94, 4, 4, 2, 55, 22, 50]}, {"input": [2, 72, 78, 8, 16, 53], "output": [72, 78, 8, 16, 53]}, {"input": [10, 35, 22, 14, 75, 68, 12, 50], "output": [35, 22, 14, 75, 68, 12, 50]}, {"input": [34, 39, 29, 85, 43, 71, 63], "output": [39, 85, 43, 71, 63, 29]}, {"input": [74, 36, 28, 84, 24, 82, 76, 73], "output": [84, 82, 76, 36, 28, 24, 73]}, {"input": [4, 58, 33, 47, 1, 73], "output": [58, 33, 47, 73, 1]}, {"input": [73, 53, 43, 50, 77, 74, 9, 36], "output": [77, 74, 53, 43, 50, 9, 36]}]}
{"id": "c217", "function": "def c217(x):\n    # elements in ascending order by ones digit\n    return sorted(x, key=lambda i: i % 10)\n\n", "train": {"normal": [{"input": [58, 5, 64, 9, 63, 78], "output": [63, 64, 5, 58, 78, 9]}, {"input": [15, 97, 44, 25, 64], "output": [44, 64, 15, 25, 97]}, {"input": [54, 11, 8, 81, 49, 23, 34, 12], "output": [11, 81, 12, 23, 54, 34, 8, 49]}, {"input": [15, 22, 83, 13, 34, 34, 79], "output": [22, 83, 13, 34, 34, 15, 79]}, {"input": [95, 51, 67, 75, 30], "output": [30, 51, 95, 75, 67]}, {"input": [67, 54, 53, 82, 23], "output": [82, 53, 23, 54, 67]}, {"input": [17, 59, 17, 0, 70, 72, 1], "output": [0, 70, 1, 72, 17, 17, 59]}, {"input": [65, 18, 99, 18, 76, 44, 21, 28], "output": [21, 44, 65, 76, 18, 18, 28, 99]}, {"input": [28, 98, 32, 31, 82, 2, 74, 54], "output": [31, 32, 82, 2, 74, 54, 28, 98]}, {"input": [20, 84, 15, 25, 17, 28, 43], "output": [20, 43, 84, 15, 25, 17, 28]}], "ood": [], "noise": [{"input": [33, 1, 51, 43, 64, 52, 93, 50], "output": [10, 1, 51, 52, 33, 43, 93, 64]}, {"input": [84, 94, 33, 10, 49], "output": [10, 33, 90, 94, 49]}, {"input": [68, 99, 76, 34, 81], "output": [81, 34, 76, 46, 57]}, {"input": [12, 73, 53, 51, 93], "output": [51, 12, 73, 48, 93]}, {"input": [9, 75, 8, 80, 93], "output": [80, 63, 75, 36, 9]}]}, "test": [{"input": [39, 69, 79, 61, 51], "output": [61, 51, 39, 69, 79]}, {"input": [80, 60, 7, 38, 40], "output": [80, 60, 40, 7, 38]}, {"input": [40, 32, 17, 94, 93, 59, 18], "output": [40, 32, 93, 94, 17, 18, 59]}, {"input": [8, 98, 65, 96, 79, 63], "output": [63, 65, 96, 8, 98, 79]}, {"input": [10, 58, 78, 84, 67, 40, 0, 56], "output": [10, 40, 0, 84, 56, 67, 58, 78]}, {"input": [50, 42, 42, 15, 68], "output": [50, 42, 42, 15, 68]}, {"input": [59, 67, 71, 80, 81, 2], "output": [80, 71, 81, 2, 67, 59]}, {"input": [9, 7, 77, 56, 22, 34, 15, 15], "output": [22, 34, 15, 15, 56, 7, 77, 9]}, {"input": [54, 12, 4, 11, 48, 88], "output": [11, 12, 54, 4, 48, 88]}, {"input": [26, 64, 39, 30, 52], "output": [30, 52, 64, 26, 39]}]}
{"id": "c005", "function": "def c005(x):\n    # remove all but element N + 1, N is the first element\n    return [x[x[0]+1]]\n\n", "train": {"normal": [{"input": [0, 4, 39, 22, 49, 22], "output": [4]}, {"input": [2, 96, 32, 44, 82], "output": [44]}, {"input": [4, 10, 29, 3, 72, 7], "output": [7]}, {"input": [0, 59, 89, 10, 17, 42, 64, 57], "output": [59]}, {"input": [1, 32, 73, 77, 64], "output": [73]}, {"input": [0, 16, 46, 77, 34, 93], "output": [16]}, {"input": [0, 34, 61, 35, 37, 67, 4, 73], "output": [34]}, {"input": [1, 56, 39, 26, 93, 71, 15, 62], "output": [39]}, {"input": [6, 65, 46, 78, 11, 81, 5, 40], "output": [40]}, {"input": [1, 5, 46, 35, 58], "output": [46]}], "ood": [], "noise": [{"input": [3, 4, 26, 12, 96, 70], "output": [97]}, {"input": [3, 96, 51, 50, 60, 77], "output": [61]}, {"input": [1, 91, 89, 58, 17, 34], "output": [90]}, {"input": [2, 63, 26, 41, 53], "output": [42]}, {"input": [3, 37, 28, 69, 76], "output": [77]}]}, "test": [{"input": [4, 34, 63, 32, 64, 30, 65, 4], "output": [30]}, {"input": [2, 87, 52, 78, 26, 73], "output": [78]}, {"input": [1, 80, 90, 55, 59, 78, 78], "output": [90]}, {"input": [3, 7, 18, 78, 69], "output": [69]}, {"input": [1, 37, 90, 72, 44, 16], "output": [90]}, {"input": [1, 67, 5, 64, 45], "output": [5]}, {"input": [1, 31, 42, 97, 99], "output": [42]}, {"input": [2, 73, 76, 87, 32, 25], "output": [87]}, {"input": [2, 53, 16, 52, 18, 73, 32, 30], "output": [52]}, {"input": [1, 45, 87, 98, 6, 51], "output": [87]}]}
{"id": "c063", "function": "def c063(x):\n    # remove the first N + 1 elements, N is the first element\n    return x[x[0]+1:]\n\n", "train": {"normal": [{"input": [0, 10, 10, 5, 3], "output": [10, 10, 5, 3]}, {"input": [3, 6, 4, 6, 2, 2, 6], "output": [2, 2, 6]}, {"input": [4, 10, 1, 6, 8, 3], "output": [3]}, {"input": [0, 10, 8, 5, 10, 2, 4], "output": [10, 8, 5, 10, 2, 4]}, {"input": [3, 1, 10, 0, 8, 3], "output": [8, 3]}, {"input": [0, 3, 3, 6, 0], "output": [3, 3, 6, 0]}, {"input": [5, 6, 8, 6, 3, 5, 2], "output": [2]}, {"input": [2, 6, 8, 4, 3], "output": [4, 3]}, {"input": [2, 10, 2, 3, 10], "output": [3, 10]}, {"input": [3, 1, 2, 7, 3, 9, 5], "output": [3, 9, 5]}], "ood": [], "noise": [{"input": [5, 2, 3, 7, 8, 0, 3], "output": [4]}, {"input": [3, 6, 1, 7, 6], "output": [7]}, {"input": [1, 6, 6, 1, 8], "output": [8, 6, 8]}, {"input": [4, 1, 7, 10, 2, 2, 3, 9], "output": [5, 3, 7]}, {"input": [3, 10, 2, 5, 8], "output": [9]}]}, "test": [{"input": [3, 9, 10, 8, 0, 6], "output": [0, 6]}, {"input": [6, 10, 8, 6, 10, 8, 7], "output": []}, {"input": [2, 3, 4, 6, 1], "output": [6, 1]}, {"input": [1, 10, 3, 10, 3, 4, 2, 0], "output": [3, 10, 3, 4, 2, 0]}, {"input": [3, 0, 5, 6, 4, 10], "output": [4, 10]}, {"input": [3, 10, 5, 3, 8, 2, 5, 5], "output": [8, 2, 5, 5]}, {"input": [2, 0, 8, 8, 1, 3, 5, 7], "output": [8, 1, 3, 5, 7]}, {"input": [2, 8, 4, 5, 4, 5, 6, 2], "output": [5, 4, 5, 6, 2]}, {"input": [1, 7, 9, 1, 6, 9], "output": [9, 1, 6, 9]}, {"input": [1, 1, 3, 0, 5, 2, 7], "output": [3, 0, 5, 2, 7]}]}
{"id": "c141", "function": "def c141(x):\n    # replace element M + 2 with N, M = element 0, N = element 1; remove elements 0 and 1\n    x[x[0]+2] = x[1]\n    return x[2:]\n\n", "train": {"normal": [{"input": [1, 6, 8, 7, 8], "output": [8, 6, 8]}, {"input": [0, 6, 0, 0, 4, 8], "output": [6, 0, 4, 8]}, {"input": [2, 4, 0, 10, 2, 3, 6, 9], "output": [0, 10, 4, 3, 6, 9]}, {"input": [2, 8, 1, 5, 4, 1, 3], "output": [1, 5, 8, 1, 3]}, {"input": [0, 0, 9, 3, 3, 10], "output": [0, 3, 3, 10]}, {"input": [0, 2, 3, 0, 9, 3, 2], "output": [2, 0, 9, 3, 2]}, {"input": [0, 8, 9, 2, 1], "output": [8, 2, 1]}, {"input": [3, 1, 6, 2, 2, 0, 8, 7], "output": [6, 2, 2, 1, 8, 7]}, {"input": [1, 7, 0, 7, 7], "output": [0, 7, 7]}, {"input": [0, 2, 6, 7, 4], "output": [2, 7, 4]}], "ood": [], "noise": [{"input": [1, 10, 5, 1, 10], "output": [5, 5, 10]}, {"input": [0, 10, 3, 1, 9, 0, 10, 6], "output": [3, 1, 10, 4, 10, 6]}, {"input": [0, 5, 7, 9, 1], "output": [6, 9, 6]}, {"input": [2, 5, 5, 3, 3, 2], "output": [5, 5, 5, 2]}, {"input": [2, 2, 6, 1, 2, 8, 7, 7], "output": [8, 6, 2, 8, 7, 1]}]}, "test": [{"input": [0, 1, 10, 4, 6], "output": [1, 4, 6]}, {"input": [1, 5, 8, 8, 5], "output": [8, 5, 5]}, {"input": [0, 10, 2, 8, 9], "output": [10, 8, 9]}, {"input": [3, 6, 3, 5, 10, 9, 3], "output": [3, 5, 10, 6, 3]}, {"input": [0, 10, 8, 5, 8, 9, 9, 8], "output": [10, 5, 8, 9, 9, 8]}, {"input": [2, 7, 7, 1, 6, 8, 4], "output": [7, 1, 7, 8, 4]}, {"input": [4, 5, 1, 5, 8, 3, 5], "output": [1, 5, 8, 3, 5]}, {"input": [1, 10, 0, 5, 5], "output": [0, 10, 5]}, {"input": [2, 3, 3, 8, 10, 10], "output": [3, 8, 3, 10]}, {"input": [2, 7, 8, 2, 8], "output": [8, 2, 7]}]}
{"id": "c089", "function": "def c089(x):\n    # swap elements 2 and 3 if element 2 > element 3, else swap elements 1 and 4\n    if x[2] > x[3]:\n        x[2], x[3] = x[3], x[2]\n    else:\n        x[1], x[4] = x[4], x[1]\n    return x\n\n", "train": {"normal": [{"input": [40, 75, 77, 29, 21, 84], "output": [40, 75, 29, 77, 21, 84]}, {"input": [29, 77, 19, 47, 84, 61, 77, 58], "output": [29, 84, 19, 47, 77, 61, 77, 58]}, {"input": [90, 54, 78, 87, 1, 44, 74], "output": [90, 1, 78, 87, 54, 44, 74]}, {"input": [86, 87, 13, 44, 75, 57, 2], "output": [86, 75, 13, 44, 87, 57, 2]}, {"input": [55, 69, 60, 1, 33, 98, 74], "output": [55, 69, 1, 60, 33, 98, 74]}, {"input": [96, 35, 28, 10, 1, 57, 64], "output": [96, 35, 10, 28, 1, 57, 64]}, {"input": [49, 90, 15, 36, 47, 9, 30], "output": [49, 47, 15, 36, 90, 9, 30]}, {"input": [52, 19, 70, 77, 38, 41, 17], "output": [52, 38, 70, 77, 19, 41, 17]}, {"input": [33, 60, 38, 10, 23, 68, 87, 18], "output": [33, 60, 10, 38, 23, 68, 87, 18]}, {"input": [65, 83, 47, 62, 80], "output": [65, 80, 47, 62, 83]}], "ood": [], "noise": [{"input": [79, 71, 51, 34, 98], "output": [79, 71, 34, 51, 46]}, {"input": [20, 67, 43, 78, 79, 67, 20, 48], "output": [43, 31, 43, 78, 67, 67, 20, 73]}, {"input": [4, 57, 82, 8, 60, 28, 12], "output": [52, 57, 8, 82, 65, 28, 19]}, {"input": [25, 66, 49, 45, 89, 37, 84], "output": [25, 66, 45, 63, 89, 37, 84]}, {"input": [95, 52, 15, 54, 5, 74], "output": [95, 9, 15, 35, 52, 74]}]}, "test": [{"input": [83, 67, 22, 56, 20, 50, 85, 79], "output": [83, 20, 22, 56, 67, 50, 85, 79]}, {"input": [78, 85, 54, 93, 93], "output": [78, 93, 54, 93, 85]}, {"input": [0, 85, 4, 25, 14], "output": [0, 14, 4, 25, 85]}, {"input": [43, 43, 58, 91, 9], "output": [43, 9, 58, 91, 43]}, {"input": [64, 90, 37, 69, 77], "output": [64, 77, 37, 69, 90]}, {"input": [20, 85, 63, 59, 27], "output": [20, 85, 59, 63, 27]}, {"input": [83, 28, 42, 75, 68], "output": [83, 68, 42, 75, 28]}, {"input": [14, 26, 53, 14, 89, 59], "output": [14, 26, 14, 53, 89, 59]}, {"input": [5, 29, 52, 8, 61, 24], "output": [5, 29, 8, 52, 61, 24]}, {"input": [77, 40, 65, 62, 97, 73, 87], "output": [77, 40, 62, 65, 97, 73, 87]}]}
{"id": "c124", "function": "def c124(x):\n    # element M, M = element N, N = element 0\n    return [x[x[0]]]\n\n", "train": {"normal": [{"input": [5, 8, 7, 7, 5, 6, 9, 3, 1, 5], "output": [6]}, {"input": [3, 2, 8, 9, 5, 3, 6, 1, 7, 8], "output": [9]}, {"input": [2, 6, 5, 8, 4, 3, 8, 8, 5, 3], "output": [5]}, {"input": [5, 4, 2, 0, 2, 4, 4, 1, 3], "output": [4]}, {"input": [5, 3, 1, 2, 5, 1, 6, 8, 2, 5], "output": [1]}, {"input": [3, 9, 8, 3, 7, 7, 5, 3, 4, 4], "output": [3]}, {"input": [4, 4, 3, 4, 5, 9, 0, 0, 0, 1], "output": [5]}, {"input": [7, 5, 5, 3, 9, 0, 3, 7, 1, 9], "output": [7]}, {"input": [6, 0, 6, 6, 6, 0, 2, 6, 4], "output": [2]}, {"input": [8, 8, 6, 4, 2, 6, 3, 8, 7, 1], "output": [7]}], "ood": [], "noise": [{"input": [9, 3, 5, 7, 4, 0, 9, 2, 2, 2], "output": [3]}, {"input": [1, 5, 5, 6, 9, 6, 8, 5, 7, 6], "output": [6]}, {"input": [5, 0, 6, 5, 4, 5, 7, 5, 3, 0], "output": [6]}, {"input": [6, 2, 9, 5, 5, 8, 0, 4, 5], "output": [1]}, {"input": [2, 1, 8, 6, 5, 2, 0, 3, 6, 4], "output": [9]}]}, "test": [{"input": [1, 0, 0, 5, 7, 0, 4, 3, 2, 3], "output": [0]}, {"input": [1, 7, 1, 6, 6, 0, 8, 4, 2, 2], "output": [7]}, {"input": [6, 6, 1, 2, 9, 9, 2, 5, 5, 7], "output": [2]}, {"input": [0, 8, 7, 3, 5, 6, 4, 6, 3], "output": [0]}, {"input": [8, 3, 0, 9, 2, 4, 7, 0, 2, 4], "output": [2]}, {"input": [5, 9, 0, 5, 4, 2, 5, 2, 4, 9], "output": [2]}, {"input": [2, 4, 2, 5, 3, 6, 5, 0, 7], "output": [2]}, {"input": [9, 0, 6, 8, 5, 5, 5, 9, 4, 9], "output": [9]}, {"input": [6, 4, 7, 1, 7, 2, 3, 4, 0], "output": [3]}, {"input": [3, 8, 4, 1, 5, 4, 9, 9, 1], "output": [1]}]}
{"id": "c216", "function": "def c216(x):\n    # elements in ascending order by tens digit\n    res = []\n    for i in x:\n        if len(str(i)) > 1:\n            res.append([i, int(str(i)[-2])])\n        else:\n            res.append([i, 0])\n    return [i[0] for i in sorted(res, key=lambda i: i[1])]\n\n", "train": {"normal": [{"input": [42, 95, 82, 99, 96], "output": [42, 82, 95, 99, 96]}, {"input": [1, 98, 43, 0, 91, 37, 14, 62], "output": [1, 0, 14, 37, 43, 62, 98, 91]}, {"input": [46, 13, 71, 30, 40], "output": [13, 30, 46, 40, 71]}, {"input": [61, 8, 27, 30, 57, 97], "output": [8, 27, 30, 57, 61, 97]}, {"input": [61, 19, 22, 58, 19, 26], "output": [19, 19, 22, 26, 58, 61]}, {"input": [16, 24, 22, 82, 58, 55], "output": [16, 24, 22, 58, 55, 82]}, {"input": [20, 48, 79, 43, 91, 43], "output": [20, 48, 43, 43, 79, 91]}, {"input": [77, 49, 20, 41, 39, 93, 46, 47], "output": [20, 39, 49, 41, 46, 47, 77, 93]}, {"input": [60, 10, 80, 25, 70, 92, 70, 22], "output": [10, 25, 22, 60, 70, 70, 80, 92]}, {"input": [93, 94, 41, 11, 39, 33, 75, 0], "output": [0, 11, 39, 33, 41, 75, 93, 94]}], "ood": [], "noise": [{"input": [62, 37, 22, 15, 60, 18], "output": [15, 43, 22, 37, 62, 60]}, {"input": [28, 13, 28, 22, 96, 86, 59, 47], "output": [13, 28, 28, 86, 47, 59, 86, 96]}, {"input": [6, 20, 22, 51, 82, 16], "output": [32, 16, 20, 22, 51, 82]}, {"input": [12, 60, 12, 91, 7, 97, 11, 95], "output": [88, 12, 29, 11, 60, 91, 97, 39]}, {"input": [42, 81, 29, 24, 86, 84, 86, 47], "output": [29, 36, 42, 47, 81, 86, 51, 86]}]}, "test": [{"input": [50, 50, 93, 20, 28, 92, 96, 5], "output": [5, 20, 28, 50, 50, 93, 92, 96]}, {"input": [91, 91, 89, 46, 8], "output": [8, 46, 89, 91, 91]}, {"input": [81, 21, 81, 32, 37], "output": [21, 32, 37, 81, 81]}, {"input": [77, 78, 47, 98, 17, 63, 95, 7], "output": [7, 17, 47, 63, 77, 78, 98, 95]}, {"input": [90, 75, 58, 11, 3, 0, 18, 6], "output": [3, 0, 6, 11, 18, 58, 75, 90]}, {"input": [48, 44, 88, 70, 60, 8, 92], "output": [8, 48, 44, 60, 70, 88, 92]}, {"input": [79, 48, 55, 2, 2, 17, 84, 74], "output": [2, 2, 17, 48, 55, 79, 74, 84]}, {"input": [9, 31, 9, 61, 12], "output": [9, 9, 12, 31, 61]}, {"input": [41, 72, 65, 76, 13, 78], "output": [13, 41, 65, 72, 76, 78]}, {"input": [57, 34, 42, 49, 48, 34], "output": [34, 34, 42, 49, 48, 57]}]}
{"id": "c143", "function": "def c143(x):\n    # replace every occurrence of the largest element with the smallest element\n    max_val = max(x)\n    min_val = min(x)\n    return [min_val if i == max_val else i for i in x]\n\n", "train": {"normal": [{"input": [2, 4, 10, 5, 0, 2, 7], "output": [2, 4, 0, 5, 0, 2, 7]}, {"input": [7, 9, 1, 0, 9, 6, 7], "output": [7, 0, 1, 0, 0, 6, 7]}, {"input": [6, 10, 7, 5, 8, 7], "output": [6, 5, 7, 5, 8, 7]}, {"input": [3, 2, 0, 9, 2], "output": [3, 2, 0, 0, 2]}, {"input": [6, 2, 3, 5, 6, 6, 2, 1], "output": [1, 2, 3, 5, 1, 1, 2, 1]}, {"input": [2, 4, 7, 4, 9, 1], "output": [2, 4, 7, 4, 1, 1]}, {"input": [8, 7, 6, 0, 8, 8], "output": [0, 7, 6, 0, 0, 0]}, {"input": [1, 7, 1, 6, 0, 4], "output": [1, 0, 1, 6, 0, 4]}, {"input": [2, 10, 6, 10, 5], "output": [2, 2, 6, 2, 5]}, {"input": [1, 5, 6, 3, 10, 4, 0, 7], "output": [1, 5, 6, 3, 0, 4, 0, 7]}], "ood": [], "noise": [{"input": [4, 2, 2, 4, 5], "output": [4, 2, 2, 3, 4]}, {"input": [3, 5, 2, 7, 0, 1, 3, 0], "output": [3, 1, 1, 0, 0, 1, 3, 0]}, {"input": [3, 2, 6, 2, 1], "output": [3, 2, 1, 2, 2]}, {"input": [1, 4, 5, 10, 10, 5, 1], "output": [1, 4, 5, 1, 4, 5, 1]}, {"input": [1, 6, 9, 9, 8, 9, 7, 9], "output": [1, 6, 1, 1, 8, 7, 8, 1]}]}, "test": [{"input": [8, 7, 8, 9, 1, 10, 4], "output": [8, 7, 8, 9, 1, 1, 4]}, {"input": [2, 2, 0, 10, 1, 7, 3, 8], "output": [2, 2, 0, 0, 1, 7, 3, 8]}, {"input": [4, 1, 0, 4, 10, 4], "output": [4, 1, 0, 4, 0, 4]}, {"input": [5, 2, 0, 10, 4, 1], "output": [5, 2, 0, 0, 4, 1]}, {"input": [7, 3, 2, 8, 8, 9], "output": [7, 3, 2, 8, 8, 2]}, {"input": [3, 8, 8, 3, 5], "output": [3, 3, 3, 3, 5]}, {"input": [5, 3, 9, 3, 5], "output": [5, 3, 3, 3, 5]}, {"input": [0, 6, 7, 7, 3, 3, 3], "output": [0, 6, 0, 0, 3, 3, 3]}, {"input": [4, 5, 6, 3, 7, 6, 5, 0], "output": [4, 5, 6, 3, 0, 6, 5, 0]}, {"input": [1, 5, 3, 7, 3, 3], "output": [1, 5, 3, 1, 3, 3]}]}
{"id": "c215", "function": "def c215(x):\n    # elements in ascending order by hundreds digit\n    res = {}\n    for i in x:\n        if len(str(i)) > 2:\n            res[i] = int(str(i)[-3])\n        else:\n            res[i] = 0\n    return sorted(res, key=res.get)\n\n", "train": {"normal": [{"input": [908, 897, 950, 44, 117, 177, 340, 821], "output": [44, 117, 177, 340, 897, 821, 908, 950]}, {"input": [936, 371, 23, 381, 268, 651, 441], "output": [23, 268, 371, 381, 441, 651, 936]}, {"input": [883, 330, 98, 22, 793, 767], "output": [98, 22, 330, 793, 767, 883]}, {"input": [408, 51, 815, 332, 458], "output": [51, 332, 408, 458, 815]}, {"input": [843, 467, 16, 432, 944, 424, 439, 656], "output": [16, 467, 432, 424, 439, 656, 843, 944]}, {"input": [801, 510, 52, 886, 866, 721, 738], "output": [52, 510, 721, 738, 801, 886, 866]}, {"input": [417, 724, 173, 205, 404, 838], "output": [173, 205, 417, 404, 724, 838]}, {"input": [422, 556, 471, 180, 399, 825, 662, 263], "output": [180, 263, 399, 422, 471, 556, 662, 825]}, {"input": [173, 726, 14, 89, 789], "output": [14, 89, 173, 726, 789]}, {"input": [690, 937, 267, 250, 56, 807], "output": [56, 267, 250, 690, 807, 937]}], "ood": [], "noise": [{"input": [734, 77, 620, 901, 335], "output": [77, 335, 620, 734, 225]}, {"input": [53, 879, 285, 35, 301], "output": [53, 35, 285, 174, 879]}, {"input": [209, 669, 572, 444, 47, 102, 699], "output": [400, 102, 196, 639, 572, 669, 699]}, {"input": [532, 327, 176, 34, 746, 59, 488], "output": [34, 59, 176, 399, 488, 532, 746]}, {"input": [932, 77, 567, 766, 509], "output": [77, 567, 509, 694, 932]}]}, "test": [{"input": [499, 158, 445, 303, 327, 553, 960, 140], "output": [158, 140, 303, 327, 499, 445, 553, 960]}, {"input": [333, 408, 966, 144, 111, 835, 233, 107], "output": [144, 111, 107, 233, 333, 408, 835, 966]}, {"input": [321, 676, 516, 924, 474, 726, 124, 42], "output": [42, 124, 321, 474, 516, 676, 726, 924]}, {"input": [299, 336, 156, 313, 17, 243], "output": [17, 156, 299, 243, 336, 313]}, {"input": [174, 24, 793, 350, 434, 666, 465, 174], "output": [24, 174, 350, 434, 465, 666, 793]}, {"input": [468, 89, 560, 946, 441, 412, 297], "output": [89, 297, 468, 441, 412, 560, 946]}, {"input": [507, 412, 8, 116, 184, 627], "output": [8, 116, 184, 412, 507, 627]}, {"input": [512, 742, 962, 767, 291, 887, 886, 243], "output": [291, 243, 512, 742, 767, 887, 886, 962]}, {"input": [785, 929, 378, 724, 476, 194, 146, 559], "output": [194, 146, 378, 476, 559, 785, 724, 929]}, {"input": [524, 748, 256, 538, 186], "output": [186, 256, 524, 538, 748]}]}
{"id": "c144", "function": "def c144(x):\n    # replace every occurrence of the largest or smallest element with their absolute difference\n    max_val = max(x)\n    min_val = min(x)\n    return [abs(min_val - max_val) if i == min_val or i == max_val else i for i in x]\n\n", "train": {"normal": [{"input": [67, 41, 79], "output": [67, 38, 38]}, {"input": [52, 9, 5, 81], "output": [52, 9, 76, 76]}, {"input": [4, 19, 95], "output": [91, 19, 91]}, {"input": [30, 85, 94, 58], "output": [64, 85, 64, 58]}, {"input": [21, 41, 69, 4], "output": [21, 41, 65, 65]}, {"input": [15, 91, 87, 2, 66], "output": [15, 89, 87, 89, 66]}, {"input": [73, 45], "output": [28, 28]}, {"input": [7, 71, 44], "output": [64, 64, 44]}, {"input": [2, 12, 75, 45, 63], "output": [73, 12, 73, 45, 63]}, {"input": [39], "output": [0]}], "ood": [], "noise": [{"input": [74, 67, 49, 69, 45], "output": [29, 67, 49, 69, 66]}, {"input": [93, 58, 84, 66], "output": [35, 35, 84, 58]}, {"input": [65], "output": [1]}, {"input": [76, 28, 44, 46, 7], "output": [69, 28, 44, 64, 69]}, {"input": [88, 13, 88, 8, 74, 20], "output": [80, 13, 80, 80, 74, 80]}]}, "test": [{"input": [66, 75, 93, 15, 92, 35], "output": [66, 75, 78, 78, 92, 35]}, {"input": [97], "output": [0]}, {"input": [19, 48, 34, 56], "output": [37, 48, 34, 37]}, {"input": [74, 91, 27, 99, 67, 90], "output": [74, 91, 72, 72, 67, 90]}, {"input": [69, 17], "output": [52, 52]}, {"input": [82, 69, 51, 64, 68, 24], "output": [58, 69, 51, 64, 68, 58]}, {"input": [55, 47], "output": [8, 8]}, {"input": [70, 13, 2, 37, 38], "output": [68, 13, 68, 37, 38]}, {"input": [70, 32], "output": [38, 38]}, {"input": [69, 73], "output": [4, 4]}]}
{"id": "c128", "function": "def c128(x):\n    # elements in ascending order after removing elements 0,1,and 4\n    x = x[2:4] + x[5:]\n    return sorted(x)\n\n", "train": {"normal": [{"input": [42, 79, 61, 48, 65], "output": [48, 61]}, {"input": [53, 65, 30, 30, 90, 26], "output": [26, 30, 30]}, {"input": [87, 71, 93, 57, 46], "output": [57, 93]}, {"input": [31, 15, 3, 7, 95, 19], "output": [3, 7, 19]}, {"input": [19, 65, 61, 12, 86, 98, 5, 43], "output": [5, 12, 43, 61, 98]}, {"input": [13, 62, 51, 7, 18, 35], "output": [7, 35, 51]}, {"input": [13, 58, 85, 12, 10, 9], "output": [9, 12, 85]}, {"input": [38, 82, 28, 87, 99], "output": [28, 87]}, {"input": [37, 24, 33, 34, 64, 39], "output": [33, 34, 39]}, {"input": [88, 62, 22, 94, 13], "output": [22, 94]}], "ood": [], "noise": [{"input": [13, 89, 62, 22, 60, 50, 44], "output": [22, 60, 60, 62]}, {"input": [47, 30, 48, 7, 29, 40, 36, 29], "output": [36, 29, 36, 40, 32]}, {"input": [43, 20, 65, 50, 62, 19], "output": [20, 50, 65]}, {"input": [13, 77, 53, 34, 20, 60, 35, 54], "output": [43, 35, 53, 54, 60]}, {"input": [28, 34, 82, 94, 12, 91], "output": [82, 84, 86]}]}, "test": [{"input": [7, 82, 36, 71, 24, 6], "output": [6, 36, 71]}, {"input": [20, 26, 39, 32, 38, 71, 71, 25], "output": [25, 32, 39, 71, 71]}, {"input": [30, 89, 47, 25, 70], "output": [25, 47]}, {"input": [81, 12, 39, 77, 0], "output": [39, 77]}, {"input": [45, 59, 9, 8, 34], "output": [8, 9]}, {"input": [42, 29, 25, 20, 73, 89, 92, 20], "output": [20, 20, 25, 89, 92]}, {"input": [44, 10, 1, 0, 36, 2], "output": [0, 1, 2]}, {"input": [48, 32, 6, 42, 20, 57, 3], "output": [3, 6, 42, 57]}, {"input": [74, 1, 11, 34, 13], "output": [11, 34]}, {"input": [95, 16, 68, 21, 19, 3, 35, 73], "output": [3, 21, 35, 68, 73]}]}
{"id": "c208", "function": "def c208(x):\n    # keep only last N elements, N is the last element\n    return x[-x[-1]:]\n\n", "train": {"normal": [{"input": [8, 7, 5, 10, 9, 4, 4], "output": [10, 9, 4, 4]}, {"input": [2, 9, 6, 8, 7, 1], "output": [1]}, {"input": [1, 9, 3, 9, 1, 7, 3], "output": [1, 7, 3]}, {"input": [4, 9, 6, 7, 0, 10, 2, 6], "output": [6, 7, 0, 10, 2, 6]}, {"input": [9, 7, 1, 6, 4, 3, 3, 5], "output": [6, 4, 3, 3, 5]}, {"input": [3, 6, 0, 9, 4, 5, 1], "output": [1]}, {"input": [6, 7, 7, 2, 2, 2, 6, 4], "output": [2, 2, 6, 4]}, {"input": [9, 8, 7, 3, 7, 3], "output": [3, 7, 3]}, {"input": [0, 9, 5, 9, 6, 2, 5, 0], "output": [0, 9, 5, 9, 6, 2, 5, 0]}, {"input": [0, 3, 9, 9, 9, 6, 6], "output": [3, 9, 9, 9, 6, 6]}], "ood": [], "noise": [{"input": [5, 2, 0, 3, 7, 3], "output": [4, 4, 3]}, {"input": [2, 4, 1, 7, 3, 8, 9, 0, 7], "output": [1, 7, 3, 4, 9, 0, 7]}, {"input": [0, 9, 1, 5, 7, 1], "output": [2]}, {"input": [2, 8, 7, 2, 9, 4, 4], "output": [2, 9, 4, 6]}, {"input": [1, 10, 7, 1, 4, 4, 9, 6], "output": [4, 1, 2, 4, 9, 6]}]}, "test": [{"input": [8, 5, 1, 4, 0, 1, 1], "output": [1]}, {"input": [7, 10, 9, 6, 2, 1, 8, 2, 2], "output": [2, 2]}, {"input": [8, 7, 3, 8, 9, 5, 0], "output": [8, 7, 3, 8, 9, 5, 0]}, {"input": [4, 3, 8, 6, 2, 3], "output": [6, 2, 3]}, {"input": [5, 5, 9, 6, 7, 10, 1, 6], "output": [9, 6, 7, 10, 1, 6]}, {"input": [3, 0, 7, 4, 0, 3, 2, 4], "output": [0, 3, 2, 4]}, {"input": [4, 1, 7, 3, 5, 3, 8, 7], "output": [1, 7, 3, 5, 3, 8, 7]}, {"input": [0, 6, 9, 6, 3, 10, 2, 7, 0], "output": [0, 6, 9, 6, 3, 10, 2, 7, 0]}, {"input": [10, 1, 6, 8, 3, 7, 8, 9, 7], "output": [6, 8, 3, 7, 8, 9, 7]}, {"input": [5, 1, 2, 7, 9, 10, 0], "output": [5, 1, 2, 7, 9, 10, 0]}]}
{"id": "c035", "function": "def c035(x):\n    # swap elements 0 and 3 if element 1 = element 2, else swap elements 1 and 2\n    if x[1] == x[2]:\n        x[0], x[3] = x[3], x[0]\n    else:\n        x[1], x[2] = x[2], x[1]\n    return x\n\n", "train": {"normal": [{"input": [8, 6, 1, 10, 10, 4, 9, 4], "output": [8, 1, 6, 10, 10, 4, 9, 4]}, {"input": [4, 6, 6, 4, 10, 5], "output": [4, 6, 6, 4, 10, 5]}, {"input": [4, 1, 3, 4, 3, 9], "output": [4, 3, 1, 4, 3, 9]}, {"input": [0, 3, 3, 6, 8, 7], "output": [6, 3, 3, 0, 8, 7]}, {"input": [5, 5, 5, 9, 7, 6, 7], "output": [9, 5, 5, 5, 7, 6, 7]}, {"input": [10, 1, 7, 7, 3, 2, 0, 10], "output": [10, 7, 1, 7, 3, 2, 0, 10]}, {"input": [8, 1, 9, 2, 9, 6, 3], "output": [8, 9, 1, 2, 9, 6, 3]}, {"input": [7, 2, 2, 7, 5], "output": [7, 2, 2, 7, 5]}, {"input": [0, 8, 8, 7, 7], "output": [7, 8, 8, 0, 7]}, {"input": [3, 10, 6, 8, 6, 6, 8, 2], "output": [3, 6, 10, 8, 6, 6, 8, 2]}], "ood": [], "noise": [{"input": [0, 8, 3, 1, 0, 4, 4], "output": [7, 3, 0, 1, 0, 4, 4]}, {"input": [0, 0, 8, 5, 3], "output": [1, 7, 0, 5, 3]}, {"input": [0, 6, 6, 8, 4, 8], "output": [8, 6, 6, 0, 4, 4]}, {"input": [6, 3, 3, 5, 10], "output": [5, 9, 3, 6, 10]}, {"input": [7, 0, 0, 2, 7], "output": [2, 0, 3, 7, 7]}]}, "test": [{"input": [7, 4, 10, 10, 4, 10, 4, 5], "output": [7, 10, 4, 10, 4, 10, 4, 5]}, {"input": [2, 4, 4, 7, 5, 0, 8, 9], "output": [7, 4, 4, 2, 5, 0, 8, 9]}, {"input": [5, 4, 7, 9, 6, 5, 7, 10], "output": [5, 7, 4, 9, 6, 5, 7, 10]}, {"input": [0, 4, 0, 1, 4], "output": [0, 0, 4, 1, 4]}, {"input": [2, 9, 9, 1, 0, 4, 4], "output": [1, 9, 9, 2, 0, 4, 4]}, {"input": [4, 9, 9, 2, 4, 6], "output": [2, 9, 9, 4, 4, 6]}, {"input": [0, 7, 7, 6, 4], "output": [6, 7, 7, 0, 4]}, {"input": [9, 6, 6, 3, 8, 4], "output": [3, 6, 6, 9, 8, 4]}, {"input": [1, 2, 5, 4, 9, 4, 1], "output": [1, 5, 2, 4, 9, 4, 1]}, {"input": [6, 0, 7, 6, 4, 8, 8, 8], "output": [6, 7, 0, 6, 4, 8, 8, 8]}]}
{"id": "c214", "function": "def c214(x):\n    # remove elements 0 and N + 1, N is the first element\n    x = x[1:x[0]+1] + x[x[0]+2:]\n    return x\n\n", "train": {"normal": [{"input": [4, 5, 74, 89, 27, 1], "output": [5, 74, 89, 27]}, {"input": [2, 68, 37, 22, 14, 24, 38], "output": [68, 37, 14, 24, 38]}, {"input": [1, 13, 45, 3, 1, 72, 85], "output": [13, 3, 1, 72, 85]}, {"input": [0, 78, 43, 14, 61, 28, 69, 63], "output": [43, 14, 61, 28, 69, 63]}, {"input": [0, 74, 52, 12, 0, 28, 74, 31], "output": [52, 12, 0, 28, 74, 31]}, {"input": [1, 51, 44, 58, 59, 34], "output": [51, 58, 59, 34]}, {"input": [1, 46, 66, 37, 29, 3, 24, 62], "output": [46, 37, 29, 3, 24, 62]}, {"input": [4, 95, 26, 71, 86, 3], "output": [95, 26, 71, 86]}, {"input": [0, 38, 27, 25, 46, 93], "output": [27, 25, 46, 93]}, {"input": [2, 25, 67, 96, 70, 37, 89], "output": [25, 67, 70, 37, 89]}], "ood": [], "noise": [{"input": [0, 29, 86, 70, 54, 42, 78, 40], "output": [86, 53, 54, 42, 78, 50]}, {"input": [2, 85, 42, 66, 94], "output": [85, 94, 85]}, {"input": [3, 50, 9, 38, 23, 38, 25], "output": [30, 9, 38, 12, 25]}, {"input": [3, 10, 21, 79, 19, 9, 20], "output": [10, 21, 79, 9, 51]}, {"input": [0, 49, 80, 12, 65], "output": [62, 21, 65]}]}, "test": [{"input": [3, 77, 56, 19, 75, 12], "output": [77, 56, 19, 12]}, {"input": [1, 60, 64, 44, 86, 4, 43, 92], "output": [60, 44, 86, 4, 43, 92]}, {"input": [2, 34, 12, 71, 77, 33], "output": [34, 12, 77, 33]}, {"input": [1, 60, 68, 38, 98, 40], "output": [60, 38, 98, 40]}, {"input": [5, 39, 83, 29, 89, 99, 61], "output": [39, 83, 29, 89, 99]}, {"input": [3, 78, 80, 65, 81], "output": [78, 80, 65]}, {"input": [2, 80, 46, 80, 83, 61, 82], "output": [80, 46, 83, 61, 82]}, {"input": [1, 70, 54, 0, 52, 25, 37], "output": [70, 0, 52, 25, 37]}, {"input": [2, 90, 94, 69, 23, 86], "output": [90, 94, 23, 86]}, {"input": [4, 5, 93, 4, 10, 90], "output": [5, 93, 4, 10]}]}
{"id": "c130", "function": "def c130(x):\n    # elements 1 through N + 1, N = element 0\n    return x[1:x[0]+1]\n\n", "train": {"normal": [{"input": [4, 15, 88, 28, 47, 7, 36, 17], "output": [15, 88, 28, 47]}, {"input": [0, 23, 53, 27, 40], "output": []}, {"input": [5, 31, 85, 44, 12, 6], "output": [31, 85, 44, 12, 6]}, {"input": [1, 89, 5, 11, 90, 70, 19, 69], "output": [89]}, {"input": [2, 14, 55, 95, 35, 54], "output": [14, 55]}, {"input": [6, 63, 12, 18, 71, 80, 9, 59], "output": [63, 12, 18, 71, 80, 9]}, {"input": [2, 33, 20, 98, 8], "output": [33, 20]}, {"input": [7, 9, 84, 7, 36, 16, 35, 15], "output": [9, 84, 7, 36, 16, 35, 15]}, {"input": [0, 22, 53, 13, 4, 59, 91, 31], "output": []}, {"input": [1, 55, 71, 91, 56], "output": [55]}], "ood": [], "noise": [{"input": [0, 28, 62, 71, 40, 93, 46], "output": [13]}, {"input": [4, 93, 23, 9, 26, 50], "output": [93, 23, 69, 70]}, {"input": [4, 49, 8, 48, 61], "output": [49, 29, 48, 61]}, {"input": [7, 6, 89, 86, 6, 41, 81, 2], "output": [6, 89, 10, 6, 41, 51, 87]}, {"input": [3, 90, 50, 20, 87], "output": [35, 50, 20]}]}, "test": [{"input": [3, 14, 99, 49, 91], "output": [14, 99, 49]}, {"input": [4, 91, 72, 38, 31, 20], "output": [91, 72, 38, 31]}, {"input": [3, 96, 20, 80, 18, 58], "output": [96, 20, 80]}, {"input": [5, 17, 72, 51, 54, 69], "output": [17, 72, 51, 54, 69]}, {"input": [4, 45, 14, 79, 53], "output": [45, 14, 79, 53]}, {"input": [2, 55, 21, 43, 87, 64, 40], "output": [55, 21]}, {"input": [6, 69, 3, 34, 90, 84, 77, 30], "output": [69, 3, 34, 90, 84, 77]}, {"input": [7, 44, 21, 24, 33, 93, 8, 62], "output": [44, 21, 24, 33, 93, 8, 62]}, {"input": [0, 12, 62, 31, 64, 74, 61], "output": []}, {"input": [4, 39, 49, 31, 76, 87, 69, 65], "output": [39, 49, 31, 76]}]}
{"id": "c159", "function": "def c159(x):\n    # element N counts the number of occurrences of N, up to the largest element\n    out = []\n    for i, j in enumerate(range(max(x)+1)):\n        out.append(x.count(j))\n    return out\n\n", "train": {"normal": [{"input": [2, 9, 4, 5, 7, 8, 9, 4, 9], "output": [0, 0, 1, 0, 2, 1, 0, 1, 1, 3]}, {"input": [6, 4, 7, 3, 2, 1], "output": [0, 1, 1, 1, 1, 0, 1, 1]}, {"input": [3, 7, 7, 1, 9, 2], "output": [0, 1, 1, 1, 0, 0, 0, 2, 0, 1]}, {"input": [7, 2, 5, 3, 3, 4, 6], "output": [0, 0, 1, 2, 1, 1, 1, 1]}, {"input": [7, 0, 5, 9, 0, 7, 2], "output": [2, 0, 1, 0, 0, 1, 0, 2, 0, 1]}, {"input": [7, 5, 6, 7, 8, 5, 3, 8], "output": [0, 0, 0, 1, 0, 2, 1, 2, 2]}, {"input": [9, 6, 8, 5, 9, 2, 1], "output": [0, 1, 1, 0, 0, 1, 1, 0, 1, 2]}, {"input": [3, 9, 0, 3, 8, 4, 7, 5], "output": [1, 0, 0, 2, 1, 1, 0, 1, 1, 1]}, {"input": [8, 0, 3, 7, 7, 3], "output": [1, 0, 0, 2, 0, 0, 0, 2, 1]}, {"input": [9, 1, 1, 9, 0, 5, 7, 8], "output": [1, 2, 0, 0, 0, 1, 0, 1, 1, 2]}], "ood": [], "noise": [{"input": [7, 9, 6, 9, 0, 0, 7, 5, 0], "output": [3, 0, 0, 0, 0, 1, 1, 3, 0, 2]}, {"input": [9, 9, 3, 6, 2, 5, 1, 3], "output": [0, 1, 1, 2, 2, 2, 1, 0, 0, 2]}, {"input": [1, 4, 3, 4, 4, 7, 7, 1, 6, 2], "output": [0, 0, 1, 1, 2, 1, 1, 2]}, {"input": [9, 7, 3, 8, 5, 9], "output": [0, 2, 0, 1, 0, 1, 0, 1, 1, 2]}, {"input": [1, 6, 8, 6, 1, 0, 7], "output": [1, 2, 0, 2, 2, 0, 1, 1, 1]}]}, "test": [{"input": [8, 0, 6, 3, 7, 1, 6, 2], "output": [1, 1, 1, 1, 0, 0, 2, 1, 1]}, {"input": [3, 3, 9, 3, 1, 6, 5, 9, 7], "output": [0, 1, 0, 3, 0, 1, 1, 1, 0, 2]}, {"input": [9, 2, 9, 9, 6, 2, 8, 9, 3, 8], "output": [0, 0, 2, 1, 0, 0, 1, 0, 2, 4]}, {"input": [3, 4, 1, 5, 4, 5, 5, 0, 9, 9], "output": [1, 1, 0, 1, 2, 3, 0, 0, 0, 2]}, {"input": [9, 2, 4, 0, 5, 2, 8], "output": [1, 0, 2, 0, 1, 1, 0, 0, 1, 1]}, {"input": [7, 8, 2, 7, 6, 2, 2], "output": [0, 0, 3, 0, 0, 0, 1, 2, 1]}, {"input": [6, 4, 0, 6, 8, 7], "output": [1, 0, 0, 0, 1, 0, 2, 1, 1]}, {"input": [1, 1, 1, 4, 6, 8, 7, 1], "output": [0, 4, 0, 0, 1, 0, 1, 1, 1]}, {"input": [6, 5, 3, 4, 5, 5, 0], "output": [1, 0, 0, 1, 1, 3, 1]}, {"input": [0, 6, 5, 3, 9, 4, 6, 6], "output": [1, 0, 0, 1, 1, 1, 3, 0, 0, 1]}]}
{"id": "c205", "function": "def c205(x):\n    # product of elements divisible by 4\n    res = 1\n    for i in x:\n        if i % 4 == 0:\n            res *= i\n    return [res]\n\n", "train": {"normal": [{"input": [12, 15, 6, 19, 4, 15], "output": [48]}, {"input": [5, 17, 13, 4, 10, 9, 13], "output": [4]}, {"input": [13, 4, 5, 4, 5, 7, 5, 4], "output": [64]}, {"input": [17, 13, 0, 19, 5, 14], "output": [0]}, {"input": [8, 0, 5, 20, 0, 11, 10, 1], "output": [0]}, {"input": [1, 12, 19, 15, 20, 15], "output": [240]}, {"input": [10, 12, 8, 15, 7, 1], "output": [96]}, {"input": [5, 8, 15, 17, 12, 9, 14], "output": [96]}, {"input": [6, 20, 9, 3, 13, 10, 5], "output": [20]}, {"input": [17, 10, 2, 18, 7, 7], "output": [1]}], "ood": [], "noise": [{"input": [20, 5, 6, 4, 19, 14, 0, 14], "output": [1]}, {"input": [3, 3, 0, 17, 4, 20, 8, 9], "output": [1]}, {"input": [15, 2, 6, 12, 15, 20, 9], "output": [241]}, {"input": [20, 20, 15, 0, 11, 20, 9], "output": [1]}, {"input": [8, 15, 1, 1, 9, 10], "output": [9]}]}, "test": [{"input": [4, 19, 18, 5, 13, 4, 19, 17], "output": [16]}, {"input": [4, 10, 15, 10, 5, 3], "output": [4]}, {"input": [6, 18, 18, 18, 0, 7], "output": [0]}, {"input": [12, 9, 8, 4, 16, 1, 10, 18], "output": [6144]}, {"input": [11, 3, 18, 12, 3, 0, 19, 15], "output": [0]}, {"input": [9, 14, 17, 14, 7, 3, 3], "output": [1]}, {"input": [17, 10, 1, 11, 1, 11, 11], "output": [1]}, {"input": [17, 18, 2, 7, 1, 15, 4, 3], "output": [4]}, {"input": [10, 19, 9, 18, 4, 0, 6, 2], "output": [0]}, {"input": [14, 6, 10, 20, 3, 20, 5, 1], "output": [400]}]}
{"id": "c076", "function": "def c076(x):\n    # the max, last, length, first, and min elements\n    return [max(x), x[-1], len(x), x[0], min(x)]\n\n", "train": {"normal": [{"input": [96, 52, 52, 17, 50, 86, 59, 89], "output": [96, 89, 8, 96, 17]}, {"input": [41, 64, 45, 95, 37, 55, 65], "output": [95, 65, 7, 41, 37]}, {"input": [63, 61, 89, 50, 74, 20, 87], "output": [89, 87, 7, 63, 20]}, {"input": [24, 63, 57, 67, 22, 46], "output": [67, 46, 6, 24, 22]}, {"input": [85, 59, 59, 30, 57, 13], "output": [85, 13, 6, 85, 13]}, {"input": [74, 28, 50, 89, 67, 11], "output": [89, 11, 6, 74, 11]}, {"input": [1, 6, 18, 77, 20, 7], "output": [77, 7, 6, 1, 1]}, {"input": [0, 12, 60, 16, 88, 5, 26, 61], "output": [88, 61, 8, 0, 0]}, {"input": [7, 29, 12, 39, 12, 88], "output": [88, 88, 6, 7, 7]}, {"input": [45, 82, 30, 74, 20, 77, 7, 75], "output": [82, 75, 8, 45, 7]}], "ood": [], "noise": [{"input": [53, 54, 50, 84, 49, 64, 30], "output": [84, 30, 81, 53, 30]}, {"input": [23, 92, 54, 21, 10, 45, 63], "output": [59, 63, 7, 23, 10]}, {"input": [2, 59, 12, 47, 50, 33, 73], "output": [73, 73, 7, 11, 2]}, {"input": [9, 37, 44, 54, 14, 64], "output": [64, 64, 6, 9, 36]}, {"input": [43, 88, 49, 43, 7, 13, 30, 31], "output": [88, 31, 8, 59, 7]}]}, "test": [{"input": [32, 58, 74, 96, 5, 50], "output": [96, 50, 6, 32, 5]}, {"input": [42, 60, 97, 2, 4, 15, 10, 95], "output": [97, 95, 8, 42, 2]}, {"input": [65, 78, 23, 4, 44, 48, 19], "output": [78, 19, 7, 65, 4]}, {"input": [59, 65, 39, 43, 4, 11, 20], "output": [65, 20, 7, 59, 4]}, {"input": [92, 96, 7, 8, 89, 88, 65], "output": [96, 65, 7, 92, 7]}, {"input": [40, 55, 95, 26, 59, 56], "output": [95, 56, 6, 40, 26]}, {"input": [87, 25, 1, 0, 61, 87, 34], "output": [87, 34, 7, 87, 0]}, {"input": [11, 41, 40, 13, 12, 80, 45], "output": [80, 45, 7, 11, 11]}, {"input": [15, 20, 28, 57, 94, 79, 62, 97], "output": [97, 97, 8, 15, 15]}, {"input": [53, 41, 6, 42, 55, 55, 78, 36], "output": [78, 36, 8, 53, 6]}]}
{"id": "c250", "function": "def c250(x):\n    # use 0s to delimit sublists, concatenate reversed sublists\n    res = []\n    sublist = []\n    for i in x:\n        if i == 0:\n            res += sublist[::-1]\n            sublist = []\n        else:\n            sublist.append(i)\n    if sublist:\n        res += sublist[::-1]\n    return res\n\n", "train": {"normal": [{"input": [26, 63, 0, 30, 0, 50, 75, 0, 70], "output": [63, 26, 30, 75, 50, 70]}, {"input": [91, 22, 75, 63, 0, 27, 29, 0, 0, 65, 77], "output": [63, 75, 22, 91, 29, 27, 77, 65]}, {"input": [64, 0, 0, 1, 56, 65, 75, 0, 17, 60, 31], "output": [64, 75, 65, 56, 1, 31, 60, 17]}, {"input": [73, 86, 0, 34, 73, 0, 72, 3, 0, 54, 46], "output": [86, 73, 73, 34, 3, 72, 46, 54]}, {"input": [31, 17, 32, 62, 0, 44, 80, 93], "output": [62, 32, 17, 31, 93, 80, 44]}, {"input": [0, 29, 61, 41, 0, 59, 38, 0, 64], "output": [41, 61, 29, 38, 59, 64]}, {"input": [2, 51, 68, 2, 0, 16, 0, 81], "output": [2, 68, 51, 2, 16, 81]}, {"input": [0, 73, 22, 34, 19, 24, 95], "output": [95, 24, 19, 34, 22, 73]}, {"input": [0, 75, 0, 22, 13, 0, 75, 25, 36], "output": [75, 13, 22, 36, 25, 75]}, {"input": [72, 42, 26, 14, 57, 16, 0, 35, 8], "output": [16, 57, 14, 26, 42, 72, 8, 35]}], "ood": [], "noise": [{"input": [28, 0, 74, 75, 0, 18, 0, 97, 74], "output": [28, 62, 74, 87, 74, 97]}, {"input": [63, 82, 89, 32, 34, 32, 31, 0, 0, 90, 0], "output": [31, 78, 34, 32, 89, 82, 63, 51]}, {"input": [99, 98, 62, 26, 0, 0, 3, 91, 85, 1], "output": [40, 62, 98, 99, 1, 85, 91, 3]}, {"input": [32, 14, 17, 22, 0, 44, 65, 0, 41, 0], "output": [22, 17, 14, 32, 65, 44, 53]}, {"input": [49, 86, 54, 78, 70, 0, 56], "output": [70, 78, 54, 66, 67, 56]}]}, "test": [{"input": [79, 0, 83, 45, 0, 29, 54, 65, 29], "output": [79, 45, 83, 29, 65, 54, 29]}, {"input": [1, 0, 76, 12, 75, 31, 68, 0, 51, 95], "output": [1, 68, 31, 75, 12, 76, 95, 51]}, {"input": [22, 0, 67, 72, 66, 15, 2, 69, 0], "output": [22, 69, 2, 15, 66, 72, 67]}, {"input": [44, 0, 24, 14, 0, 0, 0, 95, 33, 65], "output": [44, 14, 24, 65, 33, 95]}, {"input": [27, 36, 27, 0, 0, 0, 93, 12, 54], "output": [27, 36, 27, 54, 12, 93]}, {"input": [34, 67, 55, 67, 68, 33, 0], "output": [33, 68, 67, 55, 67, 34]}, {"input": [70, 90, 62, 25, 43, 0, 70, 0, 95, 58], "output": [43, 25, 62, 90, 70, 70, 58, 95]}, {"input": [92, 0, 73, 60, 20, 72, 67, 96, 78, 0], "output": [92, 78, 96, 67, 72, 20, 60, 73]}, {"input": [1, 65, 0, 71, 0, 0, 43, 9, 5], "output": [65, 1, 71, 5, 9, 43]}, {"input": [66, 98, 2, 84, 0, 88, 0, 31, 63, 66], "output": [84, 2, 98, 66, 88, 66, 63, 31]}]}
{"id": "c186", "function": "def c186(x):\n    # keep only elements greater than element 0\n    return [i for i in x if i > x[0]]\n\n", "train": {"normal": [{"input": [25, 43, 10, 40, 90, 34, 16, 85], "output": [43, 40, 90, 34, 85]}, {"input": [5, 96, 37, 39, 32, 66, 34], "output": [96, 37, 39, 32, 66, 34]}, {"input": [57, 5, 69, 31, 69, 81, 52, 26], "output": [69, 69, 81]}, {"input": [68, 36, 1, 91, 32, 11], "output": [91]}, {"input": [30, 35, 30, 4, 66, 67], "output": [35, 66, 67]}, {"input": [36, 31, 29, 78, 87, 62, 12], "output": [78, 87, 62]}, {"input": [76, 48, 63, 61, 29, 19, 97], "output": [97]}, {"input": [57, 13, 65, 68, 40, 24, 14], "output": [65, 68]}, {"input": [76, 90, 30, 89, 52, 60, 97], "output": [90, 89, 97]}, {"input": [32, 8, 93, 15, 46, 49], "output": [93, 46, 49]}], "ood": [], "noise": [{"input": [87, 86, 10, 64, 23, 55], "output": [12]}, {"input": [61, 87, 99, 94, 33, 42], "output": [87, 99, 93]}, {"input": [3, 47, 88, 37, 14, 63], "output": [47, 88, 59, 14, 63]}, {"input": [26, 32, 4, 84, 7, 17], "output": [37, 84]}, {"input": [19, 40, 94, 74, 94, 98], "output": [40, 94, 77, 86, 98]}]}, "test": [{"input": [16, 96, 52, 44, 36, 10, 58], "output": [96, 52, 44, 36, 58]}, {"input": [28, 79, 45, 55, 47, 1, 15], "output": [79, 45, 55, 47]}, {"input": [33, 48, 35, 87, 42, 70, 70, 39], "output": [48, 35, 87, 42, 70, 70, 39]}, {"input": [73, 82, 8, 50, 5, 87, 33], "output": [82, 87]}, {"input": [66, 24, 93, 1, 32, 3, 98], "output": [93, 98]}, {"input": [31, 10, 21, 49, 15, 20], "output": [49]}, {"input": [95, 12, 43, 26, 64, 29, 10], "output": []}, {"input": [39, 9, 92, 18, 84, 90], "output": [92, 84, 90]}, {"input": [12, 8, 53, 73, 84, 85, 80], "output": [53, 73, 84, 85, 80]}, {"input": [86, 83, 81, 17, 54, 87, 4], "output": [87]}]}
{"id": "c242", "function": "def c242(x):\n    # take the largest unique element, append the second largest unique element, prepend the third largest unique element, append the fourth largest unique element, and so on\n    unique = sorted(set(x), reverse=True)\n    res = [max(unique)]\n    unique.remove(max(unique))\n    for i in range(len(unique)):\n        if i % 2 == 0:\n            res.append(unique[i])\n        else:\n            res.insert(0, unique[i])\n    return res\n\n", "train": {"normal": [{"input": [5, 8, 4, 1, 4, 8, 2], "output": [1, 4, 8, 5, 2]}, {"input": [6, 7, 5, 8, 9, 4, 7], "output": [5, 7, 9, 8, 6, 4]}, {"input": [1, 7, 6, 6, 4, 8], "output": [1, 6, 8, 7, 4]}, {"input": [5, 5, 5, 1, 4, 1, 3, 7], "output": [1, 4, 7, 5, 3]}, {"input": [7, 6, 3, 7, 0, 7, 7, 2], "output": [0, 3, 7, 6, 2]}, {"input": [6, 7, 6, 3, 9, 6, 0], "output": [0, 6, 9, 7, 3]}, {"input": [6, 2, 9, 2, 3, 2, 6, 7], "output": [2, 6, 9, 7, 3]}, {"input": [6, 7, 6, 9, 4, 2], "output": [2, 6, 9, 7, 4]}, {"input": [5, 1, 6, 7, 0, 8, 9], "output": [0, 5, 7, 9, 8, 6, 1]}, {"input": [1, 4, 5, 9, 1, 6, 1, 5], "output": [1, 5, 9, 6, 4]}], "ood": [], "noise": [{"input": [6, 2, 4, 7, 5, 3, 3, 1], "output": [7, 3, 6, 7, 6, 2, 2]}, {"input": [6, 6, 6, 4, 7, 2, 4], "output": [3, 5, 6, 2]}, {"input": [8, 2, 9, 4, 0, 8, 5, 3], "output": [3, 3, 5, 9, 8, 4, 2]}, {"input": [9, 3, 4, 9, 7, 5], "output": [3, 8, 9, 7, 4]}, {"input": [9, 0, 4, 0, 5, 8, 8, 6], "output": [4, 6, 7, 2, 5, 4]}]}, "test": [{"input": [6, 9, 6, 5, 9, 8, 9, 6], "output": [6, 9, 8, 5]}, {"input": [3, 9, 2, 0, 6, 1, 2, 5], "output": [0, 2, 5, 9, 6, 3, 1]}, {"input": [8, 4, 0, 8, 6, 9], "output": [0, 6, 9, 8, 4]}, {"input": [7, 8, 3, 8, 0, 5], "output": [0, 5, 8, 7, 3]}, {"input": [0, 8, 6, 1, 0, 3, 0], "output": [0, 3, 8, 6, 1]}, {"input": [2, 9, 0, 2, 8, 0, 7, 2], "output": [0, 7, 9, 8, 2]}, {"input": [0, 1, 0, 3, 7, 4], "output": [0, 3, 7, 4, 1]}, {"input": [6, 7, 5, 4, 0, 7], "output": [0, 5, 7, 6, 4]}, {"input": [1, 2, 1, 2, 3, 5, 3], "output": [2, 5, 3, 1]}, {"input": [5, 6, 1, 9, 9, 1, 7, 5], "output": [1, 6, 9, 7, 5]}]}
{"id": "c160", "function": "def c160(x):\n    # replace each element with 99 - element\n    return [99-i for i in x]\n\n", "train": {"normal": [{"input": [97, 47, 97, 40, 7, 6, 86], "output": [2, 52, 2, 59, 92, 93, 13]}, {"input": [53, 86, 1, 60, 53, 26], "output": [46, 13, 98, 39, 46, 73]}, {"input": [12, 53, 42, 6, 3, 13, 45], "output": [87, 46, 57, 93, 96, 86, 54]}, {"input": [97, 94, 36, 36, 50, 59, 16, 36], "output": [2, 5, 63, 63, 49, 40, 83, 63]}, {"input": [49, 16, 91, 4, 38, 23, 87, 75], "output": [50, 83, 8, 95, 61, 76, 12, 24]}, {"input": [66, 16, 30, 15, 42, 72], "output": [33, 83, 69, 84, 57, 27]}, {"input": [74, 79, 49, 59, 40, 52, 17], "output": [25, 20, 50, 40, 59, 47, 82]}, {"input": [8, 63, 43, 71, 34, 77], "output": [91, 36, 56, 28, 65, 22]}, {"input": [0, 65, 84, 86, 45, 10, 96], "output": [99, 34, 15, 13, 54, 89, 3]}, {"input": [92, 83, 57, 44, 79, 15, 61, 3], "output": [7, 16, 42, 55, 20, 84, 38, 96]}], "ood": [], "noise": [{"input": [13, 29, 4, 66, 23, 41], "output": [75, 70, 95, 33, 36, 58]}, {"input": [60, 78, 5, 19, 21, 24, 84], "output": [76, 53, 94, 80, 78, 75, 15]}, {"input": [88, 98, 92, 98, 52, 49], "output": [11, 1, 7, 1, 36, 50]}, {"input": [47, 42, 11, 77, 7, 4], "output": [52, 46, 62, 22, 92, 30]}, {"input": [78, 58, 29, 53, 30, 61], "output": [21, 41, 45, 46, 61, 37]}]}, "test": [{"input": [1, 23, 56, 45, 3, 74], "output": [98, 76, 43, 54, 96, 25]}, {"input": [39, 41, 35, 53, 4, 36], "output": [60, 58, 64, 46, 95, 63]}, {"input": [25, 33, 59, 33, 53, 34, 82], "output": [74, 66, 40, 66, 46, 65, 17]}, {"input": [71, 10, 82, 18, 86, 69], "output": [28, 89, 17, 81, 13, 30]}, {"input": [32, 48, 50, 38, 6, 51, 4], "output": [67, 51, 49, 61, 93, 48, 95]}, {"input": [86, 68, 29, 56, 17, 40, 81], "output": [13, 31, 70, 43, 82, 59, 18]}, {"input": [99, 43, 72, 69, 56, 91, 55, 12], "output": [0, 56, 27, 30, 43, 8, 44, 87]}, {"input": [65, 62, 90, 9, 71, 31, 67, 38], "output": [34, 37, 9, 90, 28, 68, 32, 61]}, {"input": [22, 78, 83, 67, 60, 0, 55, 74], "output": [77, 21, 16, 32, 39, 99, 44, 25]}, {"input": [11, 72, 59, 66, 60, 89, 8, 87], "output": [88, 27, 40, 33, 39, 10, 91, 12]}]}
{"id": "c167", "function": "def c167(x):\n    # keep only elements divisible by 3\n    return [i for i in x if i % 3 == 0]\n\n", "train": {"normal": [{"input": [81, 48, 56, 20, 80, 82, 48], "output": [81, 48, 48]}, {"input": [8, 66, 5, 79, 52, 35, 46], "output": [66]}, {"input": [54, 52, 4, 8, 39, 61, 41, 0], "output": [54, 39, 0]}, {"input": [5, 74, 60, 81, 52, 26], "output": [60, 81]}, {"input": [11, 85, 41, 5, 15, 12, 0, 23], "output": [15, 12, 0]}, {"input": [30, 56, 14, 78, 21, 90, 29], "output": [30, 78, 21, 90]}, {"input": [25, 35, 54, 37, 75, 7], "output": [54, 75]}, {"input": [35, 84, 38, 26, 87, 55, 39], "output": [84, 87, 39]}, {"input": [82, 3, 4, 68, 56, 5, 94, 54], "output": [3, 54]}, {"input": [40, 29, 59, 86, 29, 18, 47, 5], "output": [18]}], "ood": [], "noise": [{"input": [49, 51, 6, 65, 48, 19, 54], "output": [45, 6, 48, 54]}, {"input": [52, 54, 20, 72, 33, 0, 39, 41], "output": [54, 61, 33, 49, 39]}, {"input": [43, 92, 33, 79, 75, 62, 40, 14], "output": [50, 75]}, {"input": [25, 47, 66, 13, 59, 36, 26], "output": [66, 64]}, {"input": [16, 42, 99, 58, 87, 74], "output": [69, 99, 60]}]}, "test": [{"input": [77, 76, 15, 76, 24, 33, 12, 38], "output": [15, 24, 33, 12]}, {"input": [54, 2, 57, 73, 6, 40], "output": [54, 57, 6]}, {"input": [5, 8, 48, 62, 35, 61, 68, 82], "output": [48]}, {"input": [2, 64, 18, 15, 26, 51, 33, 35], "output": [18, 15, 51, 33]}, {"input": [88, 90, 7, 89, 53, 76], "output": [90]}, {"input": [99, 62, 5, 9, 43, 84, 73, 2], "output": [99, 9, 84]}, {"input": [55, 24, 94, 37, 37, 47], "output": [24]}, {"input": [96, 12, 13, 62, 28, 60, 92, 15], "output": [96, 12, 60, 15]}, {"input": [2, 47, 41, 26, 23, 68, 76, 23], "output": []}, {"input": [45, 30, 67, 89, 59, 60, 12], "output": [45, 30, 60, 12]}]}
{"id": "c202", "function": "def c202(x):\n    # the indices of every even number\n    return [i for i, j in enumerate(x) if j % 2 == 0]\n\n\n", "train": {"normal": [{"input": [28, 57, 64, 9, 80, 20], "output": [0, 2, 4, 5]}, {"input": [1, 14, 76, 24, 41, 44, 70], "output": [1, 2, 3, 5, 6]}, {"input": [75, 72, 36, 97, 9, 82], "output": [1, 2, 5]}, {"input": [55, 12, 72, 2, 21, 66, 82, 60], "output": [1, 2, 3, 5, 6, 7]}, {"input": [16, 72, 43, 60, 59, 48, 31, 27], "output": [0, 1, 3, 5]}, {"input": [44, 15, 21, 4, 36, 33], "output": [0, 3, 4]}, {"input": [94, 97, 5, 94, 1, 86, 34, 80], "output": [0, 3, 5, 6, 7]}, {"input": [74, 41, 70, 53, 19, 57, 78, 86], "output": [0, 2, 6, 7]}, {"input": [14, 88, 19, 15, 28, 6, 27], "output": [0, 1, 4, 5]}, {"input": [13, 84, 12, 82, 80, 46, 4], "output": [1, 2, 3, 4, 5, 6]}], "ood": [], "noise": [{"input": [83, 21, 17, 19, 82, 91, 57], "output": [5]}, {"input": [51, 1, 23, 78, 3, 77, 5], "output": [4]}, {"input": [58, 66, 85, 10, 47, 6, 27, 79], "output": [0, 1, 3, 2]}, {"input": [53, 37, 51, 23, 64, 12], "output": [5, 5]}, {"input": [50, 67, 69, 48, 23, 42, 57], "output": [5, 0, 5]}]}, "test": [{"input": [9, 22, 10, 56, 76, 57], "output": [1, 2, 3, 4]}, {"input": [38, 40, 47, 81, 51, 0], "output": [0, 1, 5]}, {"input": [77, 12, 25, 93, 82, 12], "output": [1, 4, 5]}, {"input": [4, 72, 15, 69, 82, 50, 55, 34], "output": [0, 1, 4, 5, 7]}, {"input": [86, 78, 67, 73, 88, 50, 90, 49], "output": [0, 1, 4, 5, 6]}, {"input": [40, 37, 30, 71, 86, 34, 63], "output": [0, 2, 4, 5]}, {"input": [71, 0, 42, 94, 40, 11, 95], "output": [1, 2, 3, 4]}, {"input": [99, 98, 72, 42, 90, 56], "output": [1, 2, 3, 4, 5]}, {"input": [74, 54, 95, 52, 47, 4], "output": [0, 1, 3, 5]}, {"input": [57, 0, 54, 50, 4, 13], "output": [1, 2, 3, 4]}]}
{"id": "c129", "function": "def c129(x):\n    # elements M+2 through N+2, M is the first element, N is the second element\n    return x[x[0]+2:x[1]+2]\n\n", "train": {"normal": [{"input": [4, 4, 67, 98, 84, 76, 7, 97, 23, 71], "output": []}, {"input": [4, 5, 77, 75, 83, 4, 14, 71, 72, 23], "output": [14]}, {"input": [2, 5, 34, 68, 33, 29, 54], "output": [33, 29, 54]}, {"input": [1, 1, 0, 52, 55, 54, 47, 69, 95], "output": []}, {"input": [2, 4, 4, 26, 67, 66, 74, 51], "output": [67, 66]}, {"input": [2, 1, 2, 33, 38, 45, 26], "output": []}, {"input": [2, 3, 95, 22, 86, 20, 68, 55, 12], "output": [86]}, {"input": [4, 8, 87, 61, 16, 25, 59, 30, 85, 16], "output": [59, 30, 85, 16]}, {"input": [0, 6, 63, 36, 37, 66, 51, 34], "output": [63, 36, 37, 66, 51, 34]}, {"input": [6, 7, 66, 74, 24, 90, 25, 12, 39], "output": [39]}], "ood": [], "noise": [{"input": [2, 7, 62, 87, 19, 39, 87, 92, 35], "output": [19, 39, 89, 53, 35]}, {"input": [2, 4, 48, 82, 65, 66], "output": [66, 66]}, {"input": [3, 0, 22, 17, 84, 74], "output": [13]}, {"input": [3, 5, 91, 25, 95, 13, 13, 18, 60, 22], "output": [14, 13]}, {"input": [3, 7, 84, 9, 73, 29, 91, 16, 6, 70], "output": [29, 91, 47, 6]}]}, "test": [{"input": [5, 1, 60, 27, 52, 95, 97, 75, 76, 81], "output": []}, {"input": [4, 7, 46, 46, 51, 16, 44, 62, 18, 71], "output": [44, 62, 18]}, {"input": [3, 0, 53, 37, 63, 73, 33, 63], "output": []}, {"input": [2, 5, 10, 98, 68, 14, 85, 33], "output": [68, 14, 85]}, {"input": [5, 1, 25, 70, 11, 20, 6, 93], "output": []}, {"input": [3, 4, 94, 28, 57, 26], "output": [26]}, {"input": [0, 6, 68, 49, 56, 8, 8, 16, 8], "output": [68, 49, 56, 8, 8, 16]}, {"input": [3, 8, 50, 94, 20, 44, 32, 32, 48, 68], "output": [44, 32, 32, 48, 68]}, {"input": [3, 4, 98, 54, 23, 44, 82, 22, 13], "output": [44]}, {"input": [2, 6, 34, 72, 1, 15, 49, 38], "output": [1, 15, 49, 38]}]}
{"id": "c221", "function": "def c221(x):\n    # sum of even elements\n    return [sum(i for i in x if i % 2 == 0)]\n\n", "train": {"normal": [{"input": [3, 43, 10, 5, 35, 9, 25], "output": [10]}, {"input": [5, 42, 4, 46, 33, 41], "output": [92]}, {"input": [27, 26, 5, 49, 21, 43, 39], "output": [26]}, {"input": [21, 36, 11, 30, 0, 43, 27, 4], "output": [70]}, {"input": [31, 37, 5, 5, 38, 42, 49], "output": [80]}, {"input": [34, 36, 3, 18, 15, 42], "output": [130]}, {"input": [32, 25, 1, 24, 9, 42, 3], "output": [98]}, {"input": [49, 6, 33, 3, 21, 38, 21, 23], "output": [44]}, {"input": [39, 2, 48, 9, 5, 31, 45], "output": [50]}, {"input": [6, 14, 43, 6, 24, 31, 5], "output": [50]}], "ood": [], "noise": [{"input": [14, 26, 6, 15, 18, 34, 49, 35], "output": [99]}, {"input": [13, 44, 36, 35, 1, 19, 10], "output": [91]}, {"input": [44, 33, 37, 13, 6, 33, 28, 24], "output": [103]}, {"input": [2, 5, 26, 15, 22, 28, 36], "output": [115]}, {"input": [29, 49, 5, 32, 17, 10], "output": [43]}]}, "test": [{"input": [45, 23, 2, 25, 24, 6, 4, 14], "output": [50]}, {"input": [38, 9, 9, 40, 5, 8, 44, 19], "output": [130]}, {"input": [40, 24, 3, 36, 37, 24], "output": [124]}, {"input": [4, 39, 16, 16, 17, 25, 12, 41], "output": [48]}, {"input": [17, 18, 27, 31, 10, 26, 31, 42], "output": [96]}, {"input": [45, 32, 38, 4, 17, 11, 49], "output": [74]}, {"input": [18, 48, 26, 21, 36, 15, 3], "output": [128]}, {"input": [9, 1, 38, 24, 20, 44, 15], "output": [126]}, {"input": [13, 17, 30, 42, 16, 23, 29], "output": [88]}, {"input": [38, 49, 17, 21, 32, 40, 16, 6], "output": [132]}]}
{"id": "c131", "function": "def c131(x):\n    # keep only elements whose tens digit is even\n    res = []\n    for i in x:\n        if len(str(i)) < 2:\n            res.append(i)\n        elif int(str(i)[-2]) % 2 == 0:\n            res.append(i)\n    return res\n\n", "train": {"normal": [{"input": [83, 79, 29, 64, 43, 2, 82, 39], "output": [83, 29, 64, 43, 2, 82]}, {"input": [28, 69, 54, 46, 48, 82, 55], "output": [28, 69, 46, 48, 82]}, {"input": [15, 41, 98, 55, 31, 84, 27], "output": [41, 84, 27]}, {"input": [11, 3, 31, 46, 20, 67], "output": [3, 46, 20, 67]}, {"input": [63, 10, 68, 90, 36, 65, 85, 87], "output": [63, 68, 65, 85, 87]}, {"input": [29, 7, 3, 75, 40, 38, 27, 29], "output": [29, 7, 3, 40, 27, 29]}, {"input": [51, 81, 97, 35, 98, 89, 70], "output": [81, 89]}, {"input": [10, 57, 2, 79, 59, 36, 49, 70], "output": [2, 49]}, {"input": [33, 85, 33, 99, 24, 17, 81, 8], "output": [85, 24, 81, 8]}, {"input": [66, 3, 40, 52, 45, 83], "output": [66, 3, 40, 45, 83]}], "ood": [], "noise": [{"input": [44, 20, 18, 10, 38, 94], "output": [26, 20]}, {"input": [20, 71, 51, 26, 43, 12, 51, 53], "output": [20, 26, 38]}, {"input": [50, 87, 46, 70, 35, 46, 69, 86], "output": [87, 65, 46, 69, 86]}, {"input": [43, 44, 79, 96, 39, 77], "output": [43, 43]}, {"input": [58, 47, 6, 47, 27, 19], "output": [47, 6, 47, 22]}]}, "test": [{"input": [24, 13, 16, 91, 2, 47, 95], "output": [24, 2, 47]}, {"input": [75, 97, 13, 12, 17, 49, 92], "output": [49]}, {"input": [14, 94, 87, 91, 89, 7], "output": [87, 89, 7]}, {"input": [37, 20, 13, 40, 48, 97], "output": [20, 40, 48]}, {"input": [46, 97, 23, 88, 63, 15, 47, 45], "output": [46, 23, 88, 63, 47, 45]}, {"input": [26, 15, 92, 70, 32, 18, 3], "output": [26, 3]}, {"input": [45, 28, 94, 91, 0, 93], "output": [45, 28, 0]}, {"input": [42, 47, 63, 69, 81, 2, 34, 6], "output": [42, 47, 63, 69, 81, 2, 6]}, {"input": [57, 22, 83, 53, 3, 35, 20], "output": [22, 83, 3, 20]}, {"input": [19, 31, 66, 28, 93, 93, 30], "output": [66, 28]}]}
{"id": "c180", "function": "def c180(x):\n    # take the smallest element, append the second smallest element, prepend the third smallest element, append the fourth smallest element, and so on\n    sorted_x = sorted(x)\n    res = [sorted_x[0]]\n    for i in range(1, len(sorted_x)):\n        if i % 2 == 1:\n            res.append(sorted_x[i])\n        else:\n            res.insert(0, sorted_x[i])\n    return res\n\n", "train": {"normal": [{"input": [81, 77, 48, 88, 96, 80, 92, 82], "output": [92, 82, 80, 48, 77, 81, 88, 96]}, {"input": [46, 60, 9, 64, 33, 99, 44, 48], "output": [64, 48, 44, 9, 33, 46, 60, 99]}, {"input": [28, 2, 8, 12, 73, 71, 94, 97], "output": [94, 71, 12, 2, 8, 28, 73, 97]}, {"input": [74, 80, 97, 7, 46, 56, 63, 11], "output": [80, 63, 46, 7, 11, 56, 74, 97]}, {"input": [29, 21, 70, 48, 90, 5], "output": [70, 29, 5, 21, 48, 90]}, {"input": [35, 63, 85, 81, 33, 91], "output": [85, 63, 33, 35, 81, 91]}, {"input": [8, 52, 42, 15, 94, 95, 41], "output": [95, 52, 41, 8, 15, 42, 94]}, {"input": [81, 83, 6, 3, 52, 61, 11], "output": [83, 61, 11, 3, 6, 52, 81]}, {"input": [73, 75, 32, 82, 77, 76, 70], "output": [82, 76, 73, 32, 70, 75, 77]}, {"input": [4, 13, 7, 64, 11, 9], "output": [13, 9, 4, 7, 11, 64]}], "ood": [], "noise": [{"input": [86, 6, 24, 25, 92, 9, 98, 32], "output": [92, 32, 24, 6, 9, 53, 81, 61]}, {"input": [52, 97, 91, 1, 91, 1], "output": [91, 46, 1, 1, 48, 97]}, {"input": [78, 18, 20, 68, 2, 92, 4, 88], "output": [88, 68, 18, 2, 4, 75, 78, 92]}, {"input": [40, 45, 8, 6, 73, 62, 77], "output": [25, 15, 40, 6, 23, 45, 73]}, {"input": [74, 39, 27, 60, 14, 58, 27], "output": [74, 72, 27, 34, 34, 39, 60]}]}, "test": [{"input": [38, 80, 93, 70, 45, 32, 33, 93], "output": [93, 70, 38, 32, 33, 45, 80, 93]}, {"input": [83, 53, 68, 5, 74, 95, 29], "output": [95, 74, 53, 5, 29, 68, 83]}, {"input": [86, 63, 83, 9, 49, 7, 33], "output": [86, 63, 33, 7, 9, 49, 83]}, {"input": [26, 6, 22, 20, 33, 42], "output": [33, 22, 6, 20, 26, 42]}, {"input": [76, 14, 91, 39, 51, 39, 21], "output": [91, 51, 39, 14, 21, 39, 76]}, {"input": [46, 2, 0, 95, 2, 43, 43], "output": [95, 43, 2, 0, 2, 43, 46]}, {"input": [84, 92, 21, 65, 73, 32, 71, 90], "output": [90, 73, 65, 21, 32, 71, 84, 92]}, {"input": [82, 51, 21, 10, 50, 56, 5, 96], "output": [82, 51, 21, 5, 10, 50, 56, 96]}, {"input": [80, 48, 88, 29, 2, 23], "output": [80, 29, 2, 23, 48, 88]}, {"input": [95, 46, 67, 56, 53, 98, 10, 27], "output": [95, 56, 46, 10, 27, 53, 67, 98]}]}
{"id": "c015", "function": "def c015(x):\n    # elements M+2 through N+2, M is the first element, N is the second element\n    return x[x[0]+2:x[1]+2]\n\n", "train": {"normal": [{"input": [1, 5, 7, 8, 8, 2], "output": [8, 8, 2]}, {"input": [0, 3, 3, 1, 8, 10], "output": [3, 1, 8]}, {"input": [3, 4, 3, 2, 12, 15], "output": [15]}, {"input": [3, 5, 13, 3, 9, 8, 15, 6], "output": [8, 15]}, {"input": [1, 6, 1, 0, 12, 6], "output": [0, 12, 6]}, {"input": [1, 1, 0, 11, 10, 4], "output": []}, {"input": [4, 4, 5, 15, 11, 13, 8, 11], "output": []}, {"input": [1, 5, 6, 4, 15, 6, 10, 3, 2], "output": [4, 15, 6, 10]}, {"input": [4, 5, 9, 15, 2, 0, 12, 5, 10, 11], "output": [12]}, {"input": [0, 4, 15, 13, 7, 5, 2, 14, 13], "output": [15, 13, 7, 5]}], "ood": [], "noise": [{"input": [3, 9, 3, 4, 1, 11, 11, 11, 5, 10], "output": [11, 11, 6, 5, 10]}, {"input": [2, 7, 0, 12, 6, 11, 10, 9], "output": [6, 11, 9, 9]}, {"input": [3, 8, 2, 1, 6, 2, 9, 3, 2], "output": [2, 6, 3, 2]}, {"input": [4, 7, 4, 6, 10, 1, 4, 6, 6], "output": [4, 5, 5]}, {"input": [0, 7, 8, 7, 5, 3, 13, 3], "output": [8, 7, 4, 3, 13, 3]}]}, "test": [{"input": [0, 4, 8, 1, 3, 9, 7, 12], "output": [8, 1, 3, 9]}, {"input": [1, 4, 14, 10, 10, 4], "output": [10, 10, 4]}, {"input": [0, 3, 0, 15, 5, 11, 14], "output": [0, 15, 5]}, {"input": [3, 8, 15, 3, 2, 10, 9, 4, 5], "output": [10, 9, 4, 5]}, {"input": [2, 3, 11, 13, 14, 15, 5], "output": [14]}, {"input": [4, 8, 6, 3, 10, 7, 0, 2], "output": [0, 2]}, {"input": [1, 5, 7, 1, 8, 1, 0, 14], "output": [1, 8, 1, 0]}, {"input": [3, 8, 6, 14, 12, 0, 0, 3, 1, 8], "output": [0, 0, 3, 1, 8]}, {"input": [3, 4, 13, 1, 11, 0], "output": [0]}, {"input": [1, 1, 4, 13, 6, 9, 6, 13], "output": []}]}
{"id": "c179", "function": "def c179(x):\n    # take the largest element, append the second largest element, prepend the third largest element, append the fourth largest element, and so on\n    sorted_x = sorted(x, reverse=True)\n    res = [sorted_x[0]]\n    for i in range(1, len(sorted_x)):\n        if i % 2 == 1:\n            res.append(sorted_x[i])\n        else:\n            res.insert(0, sorted_x[i])\n    return res\n\n", "train": {"normal": [{"input": [92, 48, 75, 14, 3, 44, 36, 56], "output": [14, 44, 56, 92, 75, 48, 36, 3]}, {"input": [60, 67, 85, 36, 52, 15], "output": [36, 60, 85, 67, 52, 15]}, {"input": [84, 91, 44, 83, 1, 72, 55], "output": [1, 55, 83, 91, 84, 72, 44]}, {"input": [10, 59, 88, 59, 56, 18], "output": [18, 59, 88, 59, 56, 10]}, {"input": [35, 73, 38, 59, 86, 75, 91], "output": [35, 59, 75, 91, 86, 73, 38]}, {"input": [74, 28, 70, 45, 37, 95, 22], "output": [22, 37, 70, 95, 74, 45, 28]}, {"input": [56, 98, 93, 62, 99, 76, 71], "output": [56, 71, 93, 99, 98, 76, 62]}, {"input": [31, 48, 44, 53, 5, 70, 59], "output": [5, 44, 53, 70, 59, 48, 31]}, {"input": [9, 86, 49, 10, 22, 17, 66, 19], "output": [10, 19, 49, 86, 66, 22, 17, 9]}, {"input": [95, 57, 59, 33, 36, 3], "output": [33, 57, 95, 59, 36, 3]}], "ood": [], "noise": [{"input": [73, 19, 38, 60, 68, 52, 1], "output": [1, 38, 60, 24, 68, 52, 10]}, {"input": [32, 60, 40, 82, 87, 33], "output": [33, 60, 84, 82, 40, 32]}, {"input": [99, 25, 42, 90, 55, 16, 64], "output": [16, 42, 98, 99, 80, 55, 54]}, {"input": [34, 38, 34, 83, 16, 11], "output": [16, 34, 83, 45, 77, 22]}, {"input": [58, 36, 53, 59, 70, 47], "output": [47, 58, 70, 59, 68, 36]}]}, "test": [{"input": [43, 14, 85, 21, 64, 43, 37, 66], "output": [21, 43, 64, 85, 66, 43, 37, 14]}, {"input": [7, 45, 51, 35, 63, 37, 72], "output": [7, 37, 51, 72, 63, 45, 35]}, {"input": [31, 86, 4, 91, 4, 31, 45], "output": [4, 31, 45, 91, 86, 31, 4]}, {"input": [97, 87, 46, 92, 21, 89, 12, 47], "output": [21, 47, 89, 97, 92, 87, 46, 12]}, {"input": [18, 43, 69, 82, 0, 43, 61, 15], "output": [15, 43, 61, 82, 69, 43, 18, 0]}, {"input": [68, 84, 68, 10, 27, 38, 24], "output": [10, 27, 68, 84, 68, 38, 24]}, {"input": [16, 22, 93, 26, 75, 92, 38], "output": [16, 26, 75, 93, 92, 38, 22]}, {"input": [38, 9, 59, 12, 10, 46, 15], "output": [9, 12, 38, 59, 46, 15, 10]}, {"input": [73, 81, 76, 47, 93, 73], "output": [73, 76, 93, 81, 73, 47]}, {"input": [75, 0, 95, 92, 43, 50, 63], "output": [0, 50, 75, 95, 92, 63, 43]}]}
{"id": "c226", "function": "def c226(x):\n    # remove first M and last N elements, M is the first element, N is the last element\n    if x[-1] == 0:\n        return x[x[0]:]\n    return x[x[0]:-x[-1]]\n\n", "train": {"normal": [{"input": [5, 15, 0, 0, 11, 2, 0], "output": [2, 0]}, {"input": [0, 11, 4, 11, 14, 14, 8, 4], "output": [0, 11, 4, 11]}, {"input": [2, 6, 5, 12, 9, 3], "output": [5]}, {"input": [4, 9, 13, 11, 0, 7, 10, 11, 8, 1], "output": [0, 7, 10, 11, 8]}, {"input": [6, 5, 7, 11, 15, 8, 5, 3, 9, 6], "output": []}, {"input": [5, 12, 7, 0, 15, 9, 15, 1, 10, 1], "output": [9, 15, 1, 10]}, {"input": [0, 2, 8, 13, 0, 14, 14, 9, 2], "output": [0, 2, 8, 13, 0, 14, 14]}, {"input": [1, 11, 14, 10, 15, 4, 9, 8, 3], "output": [11, 14, 10, 15, 4]}, {"input": [0, 10, 5, 13, 13, 3, 4, 6, 10, 2], "output": [0, 10, 5, 13, 13, 3, 4, 6]}, {"input": [2, 6, 9, 9, 4, 11, 14, 5, 0], "output": [9, 9, 4, 11, 14, 5, 0]}], "ood": [], "noise": [{"input": [3, 7, 12, 13, 6, 2, 10, 3], "output": [10, 6]}, {"input": [3, 9, 15, 14, 0, 0, 10, 8, 7, 5], "output": [14, 12]}, {"input": [4, 9, 8, 4, 15, 9, 5], "output": [14]}, {"input": [5, 7, 7, 1, 5, 5, 4], "output": [11]}, {"input": [0, 15, 15, 14, 2, 4, 9, 6], "output": [9, 15]}]}, "test": [{"input": [1, 14, 11, 5, 0, 9, 14, 4], "output": [14, 11, 5]}, {"input": [4, 7, 13, 4, 2, 9, 12, 0, 4], "output": [2]}, {"input": [2, 2, 12, 11, 8, 12, 4, 12, 12, 4], "output": [12, 11, 8, 12]}, {"input": [0, 2, 10, 12, 14, 10, 8, 4], "output": [0, 2, 10, 12]}, {"input": [4, 4, 6, 0, 10, 14, 0, 9, 1], "output": [10, 14, 0, 9]}, {"input": [4, 7, 14, 12, 2, 12, 3, 13, 15, 2], "output": [2, 12, 3, 13]}, {"input": [7, 8, 7, 1, 13, 4, 0, 2, 13, 0], "output": [2, 13, 0]}, {"input": [6, 5, 4, 13, 6, 6, 2, 2], "output": []}, {"input": [5, 15, 2, 8, 12, 1, 8, 5], "output": []}, {"input": [3, 4, 2, 5, 8, 0], "output": [5, 8, 0]}]}
{"id": "c134", "function": "def c134(x):\n    # remove elements M through N, M is the first element, N is the second element\n    return x[:x[0]] + x[x[1]+1:]\n\n", "train": {"normal": [{"input": [1, 6, 9, 12, 8, 14, 8, 11, 14, 6], "output": [1, 11, 14, 6]}, {"input": [3, 3, 0, 0, 15, 11], "output": [3, 3, 0, 15, 11]}, {"input": [0, 6, 15, 2, 14, 6, 15, 12], "output": [12]}, {"input": [3, 7, 6, 11, 7, 15, 4, 1], "output": [3, 7, 6]}, {"input": [3, 9, 11, 11, 9, 6, 4, 3, 9, 1], "output": [3, 9, 11]}, {"input": [3, 3, 7, 11, 3, 3], "output": [3, 3, 7, 3, 3]}, {"input": [0, 1, 13, 3, 0, 6, 2, 13], "output": [13, 3, 0, 6, 2, 13]}, {"input": [3, 7, 6, 0, 13, 9, 3, 12], "output": [3, 7, 6]}, {"input": [3, 4, 12, 4, 4, 1, 4, 3, 7, 7], "output": [3, 4, 12, 1, 4, 3, 7, 7]}, {"input": [2, 6, 15, 10, 10, 3, 10, 12, 11, 14], "output": [2, 6, 12, 11, 14]}], "ood": [], "noise": [{"input": [1, 1, 15, 2, 1, 13, 6, 13, 14], "output": [1, 3, 2, 12, 13, 6, 13, 14]}, {"input": [3, 4, 4, 9, 14, 4, 7, 7, 3, 2], "output": [6, 4, 4, 4, 7, 7, 3, 2]}, {"input": [3, 6, 14, 13, 13, 1, 14, 11, 4, 10], "output": [3, 6, 14, 13, 4, 10]}, {"input": [0, 3, 5, 3, 13, 1, 9], "output": [8, 1, 6]}, {"input": [2, 5, 3, 10, 3, 11, 11, 11, 7], "output": [2, 5, 11, 11, 11]}]}, "test": [{"input": [0, 6, 0, 11, 13, 7, 3], "output": []}, {"input": [4, 5, 9, 14, 3, 7, 10, 1], "output": [4, 5, 9, 14, 10, 1]}, {"input": [4, 6, 6, 1, 10, 8, 1, 2], "output": [4, 6, 6, 1, 2]}, {"input": [1, 4, 0, 9, 4, 13, 11, 13, 2], "output": [1, 13, 11, 13, 2]}, {"input": [3, 4, 1, 9, 0, 6], "output": [3, 4, 1, 6]}, {"input": [0, 2, 13, 8, 12, 10, 14, 4, 2, 14], "output": [8, 12, 10, 14, 4, 2, 14]}, {"input": [1, 3, 3, 11, 14, 4, 1], "output": [1, 14, 4, 1]}, {"input": [3, 3, 9, 8, 10, 7, 11, 3, 4], "output": [3, 3, 9, 10, 7, 11, 3, 4]}, {"input": [0, 3, 1, 4, 11, 9, 9, 14, 1, 8], "output": [11, 9, 9, 14, 1, 8]}, {"input": [0, 0, 8, 14, 1, 6, 0], "output": [0, 8, 14, 1, 6, 0]}]}
{"id": "c164", "function": "def c164(x):\n    # replace each element M with M // 4 + 5\n    return [i//4+5 for i in x]\n\n", "train": {"normal": [{"input": [75, 27, 67, 33, 57, 45, 20, 55], "output": [23, 11, 21, 13, 19, 16, 10, 18]}, {"input": [62, 84, 85, 97, 75, 23], "output": [20, 26, 26, 29, 23, 10]}, {"input": [62, 8, 66, 56, 1, 30], "output": [20, 7, 21, 19, 5, 12]}, {"input": [70, 76, 11, 88, 25, 93], "output": [22, 24, 7, 27, 11, 28]}, {"input": [3, 14, 79, 13, 29, 71], "output": [5, 8, 24, 8, 12, 22]}, {"input": [57, 10, 57, 73, 81, 25], "output": [19, 7, 19, 23, 25, 11]}, {"input": [79, 53, 92, 16, 4, 34], "output": [24, 18, 28, 9, 6, 13]}, {"input": [88, 26, 14, 69, 12, 85], "output": [27, 11, 8, 22, 8, 26]}, {"input": [51, 27, 33, 11, 59, 21, 0, 22], "output": [17, 11, 13, 7, 19, 10, 5, 10]}, {"input": [2, 34, 51, 32, 87, 30], "output": [5, 13, 17, 13, 26, 12]}], "ood": [], "noise": [{"input": [51, 55, 87, 85, 10, 72], "output": [17, 21, 26, 26, 23, 23]}, {"input": [12, 50, 92, 82, 65, 50, 72], "output": [8, 26, 28, 25, 16, 17, 23]}, {"input": [39, 91, 3, 85, 20, 59, 17, 56], "output": [14, 27, 5, 24, 10, 8, 25, 19]}, {"input": [9, 19, 28, 74, 75, 98, 22], "output": [7, 9, 12, 13, 23, 28, 10]}, {"input": [40, 99, 35, 64, 96, 94, 41, 0], "output": [15, 29, 13, 21, 18, 7, 15, 5]}]}, "test": [{"input": [16, 55, 81, 37, 97, 78], "output": [9, 18, 25, 14, 29, 24]}, {"input": [30, 10, 52, 45, 11, 66], "output": [12, 7, 18, 16, 7, 21]}, {"input": [94, 38, 17, 87, 97, 20], "output": [28, 14, 9, 26, 29, 10]}, {"input": [8, 99, 98, 12, 69, 89], "output": [7, 29, 29, 8, 22, 27]}, {"input": [30, 30, 14, 64, 19, 19], "output": [12, 12, 8, 21, 9, 9]}, {"input": [11, 57, 32, 17, 54, 47], "output": [7, 19, 13, 9, 18, 16]}, {"input": [8, 70, 81, 63, 94, 50, 65, 86], "output": [7, 22, 25, 20, 28, 17, 21, 26]}, {"input": [31, 37, 30, 68, 82, 63, 20, 26], "output": [12, 14, 12, 22, 25, 20, 10, 11]}, {"input": [13, 19, 18, 54, 22, 52, 52, 9], "output": [8, 9, 9, 18, 10, 18, 18, 7]}, {"input": [33, 80, 98, 69, 82, 22, 53], "output": [13, 25, 29, 22, 25, 10, 18]}]}
{"id": "c178", "function": "def c178(x):\n    # keep only elements followed by an even number\n    res = []\n    for i in range(len(x)-1):\n        if x[i+1] % 2 == 0:\n            res.append(x[i])\n    return res \n\n", "train": {"normal": [{"input": [86, 19, 64, 67, 94, 77, 93, 23], "output": [19, 67]}, {"input": [69, 18, 31, 38, 51, 49], "output": [69, 31]}, {"input": [80, 68, 66, 24, 4, 97], "output": [80, 68, 66, 24]}, {"input": [27, 37, 58, 13, 33, 71], "output": [37]}, {"input": [59, 99, 76, 99, 7, 94, 41, 67], "output": [99, 7]}, {"input": [57, 86, 17, 52, 93, 86, 32, 78], "output": [57, 17, 93, 86, 32]}, {"input": [71, 26, 33, 51, 24, 60, 59, 92], "output": [71, 51, 24, 59]}, {"input": [91, 25, 18, 23, 48, 61, 26], "output": [25, 23, 61]}, {"input": [63, 43, 41, 64, 28, 87, 92], "output": [41, 64, 87]}, {"input": [86, 48, 54, 69, 5, 79], "output": [86, 48]}], "ood": [], "noise": [{"input": [41, 7, 75, 47, 56, 11, 16], "output": [40, 11]}, {"input": [87, 23, 57, 44, 3, 50], "output": [57, 55]}, {"input": [86, 45, 33, 49, 9, 27, 91], "output": [20]}, {"input": [19, 89, 60, 56, 75, 42, 56, 29], "output": [89, 60, 83, 42]}, {"input": [99, 55, 26, 49, 34, 45, 3], "output": [55, 53]}]}, "test": [{"input": [35, 33, 28, 2, 95, 13, 69], "output": [33, 28]}, {"input": [95, 28, 69, 35, 75, 32, 67], "output": [95, 75]}, {"input": [50, 89, 6, 40, 28, 59, 24], "output": [89, 6, 40, 59]}, {"input": [84, 74, 76, 38, 27, 72], "output": [84, 74, 76, 27]}, {"input": [15, 67, 1, 2, 23, 16, 70], "output": [1, 23, 16]}, {"input": [98, 16, 87, 85, 82, 66, 89], "output": [98, 85, 82]}, {"input": [46, 30, 94, 50, 24, 29], "output": [46, 30, 94, 50]}, {"input": [63, 99, 29, 60, 76, 36, 62], "output": [29, 60, 76, 36]}, {"input": [89, 44, 77, 17, 46, 49, 34], "output": [89, 17, 49]}, {"input": [1, 40, 91, 73, 45, 99, 3, 10], "output": [1, 3]}]}
{"id": "c113", "function": "def c113(x):\n    # keep only elements whose ones digit is greater than the first element\n    res = []\n    for i in x:\n        if i % 10 > x[0]:\n            res.append(i)\n    return res\n\n", "train": {"normal": [{"input": [5, 49, 19, 15, 11, 35, 3, 39, 16, 4], "output": [49, 19, 39, 16]}, {"input": [0, 4, 31, 28, 10, 39, 18, 34], "output": [4, 31, 28, 39, 18, 34]}, {"input": [7, 9, 27, 42, 30, 25, 15, 25, 36, 28], "output": [9, 28]}, {"input": [7, 45, 20, 38, 21, 5, 7, 41], "output": [38]}, {"input": [8, 27, 39, 9, 10, 39, 13, 18], "output": [39, 9, 39]}, {"input": [1, 2, 44, 30, 14, 45, 36, 2], "output": [2, 44, 14, 45, 36, 2]}, {"input": [1, 13, 7, 45, 49, 28, 24, 22, 11, 34], "output": [13, 7, 45, 49, 28, 24, 22, 34]}, {"input": [0, 38, 42, 43, 13, 27, 25], "output": [38, 42, 43, 13, 27, 25]}, {"input": [9, 44, 25, 15, 24, 3, 8, 35, 27, 23], "output": []}, {"input": [7, 32, 6, 19, 44, 45, 31, 12, 26, 33], "output": [19]}], "ood": [], "noise": [{"input": [7, 19, 43, 39, 36, 22, 40, 2], "output": [32, 39]}, {"input": [2, 31, 41, 49, 47, 11, 9], "output": [49, 10, 28]}, {"input": [6, 30, 12, 8, 28, 19, 36], "output": [8, 28, 15]}, {"input": [7, 27, 23, 41, 19, 1, 30, 9, 22, 19], "output": [19, 9, 11]}, {"input": [4, 35, 7, 10, 30, 15], "output": [23, 18, 15]}]}, "test": [{"input": [4, 2, 37, 45, 9, 37, 17, 14], "output": [37, 45, 9, 37, 17]}, {"input": [2, 46, 24, 11, 9, 40, 47], "output": [46, 24, 9, 47]}, {"input": [8, 11, 4, 47, 45, 21, 11, 21], "output": []}, {"input": [1, 44, 10, 10, 30, 40], "output": [44]}, {"input": [4, 29, 6, 34, 45, 11], "output": [29, 6, 45]}, {"input": [2, 38, 28, 18, 8, 27, 23, 33, 11], "output": [38, 28, 18, 8, 27, 23, 33]}, {"input": [3, 19, 6, 19, 11, 48, 0], "output": [19, 6, 19, 48]}, {"input": [4, 20, 20, 21, 6, 17, 21], "output": [6, 17]}, {"input": [7, 3, 33, 15, 4, 14], "output": []}, {"input": [4, 41, 49, 1, 32, 23, 8, 20, 16, 26], "output": [49, 8, 16, 26]}]}
{"id": "c206", "function": "def c206(x):\n    # keep only elements whose value is between the first and second element\n    return [i for i in x if x[0] < i < x[1]]\n\n", "train": {"normal": [{"input": [2, 57, 2, 41, 46, 9, 32], "output": [41, 46, 9, 32]}, {"input": [5, 24, 3, 39, 42, 18, 13, 16, 12, 2], "output": [18, 13, 16, 12]}, {"input": [5, 52, 49, 19, 5, 22, 16, 25, 0], "output": [49, 19, 22, 16, 25]}, {"input": [6, 12, 20, 46, 46, 7, 1], "output": [7]}, {"input": [3, 35, 26, 18, 32, 37, 3, 42], "output": [26, 18, 32]}, {"input": [14, 49, 35, 16, 41, 25, 34, 12], "output": [35, 16, 41, 25, 34]}, {"input": [13, 28, 38, 22, 21, 44, 37], "output": [22, 21]}, {"input": [7, 17, 45, 30, 2, 18, 8], "output": [8]}, {"input": [0, 26, 26, 40, 11, 2, 1, 31], "output": [11, 2, 1]}, {"input": [1, 31, 5, 22, 9, 23], "output": [5, 22, 9, 23]}], "ood": [], "noise": [{"input": [1, 23, 41, 41, 14, 44, 31, 0], "output": [15]}, {"input": [0, 16, 33, 12, 44, 19, 32, 45, 45, 30], "output": [13]}, {"input": [0, 5, 34, 42, 23, 35, 22, 41, 39, 27], "output": [12]}, {"input": [8, 41, 3, 40, 39, 38], "output": [40, 39, 39]}, {"input": [7, 12, 15, 38, 31, 37, 21, 15, 12, 24], "output": [11]}]}, "test": [{"input": [2, 36, 32, 1, 17, 43, 47, 27, 47], "output": [32, 17, 27]}, {"input": [0, 36, 47, 8, 33, 14, 30, 48, 40], "output": [8, 33, 14, 30]}, {"input": [1, 18, 12, 20, 1, 40], "output": [12]}, {"input": [17, 29, 44, 36, 23, 13], "output": [23]}, {"input": [3, 54, 31, 40, 47, 28, 47, 23, 1, 13], "output": [31, 40, 47, 28, 47, 23, 13]}, {"input": [7, 40, 9, 6, 45, 21, 20, 8, 14, 15], "output": [9, 21, 20, 8, 14, 15]}, {"input": [5, 54, 7, 21, 1, 29, 43, 26], "output": [7, 21, 29, 43, 26]}, {"input": [7, 35, 40, 17, 33, 35], "output": [17, 33]}, {"input": [2, 30, 45, 33, 0, 7, 30], "output": [7]}, {"input": [2, 58, 45, 27, 9, 7, 31, 21, 48, 43], "output": [45, 27, 9, 7, 31, 21, 48, 43]}]}
{"id": "c210", "function": "def c210(x):\n    # unique elements with last element inserted at index M, where M is the first element\n    unique = []\n    for i in x:\n        if i not in unique:\n            unique.append(i)\n    unique.insert(x[0], x[-1])\n    return unique\n\n", "train": {"normal": [{"input": [1, 2, 2, 7, 1, 4, 0, 2], "output": [1, 2, 2, 7, 4, 0]}, {"input": [2, 5, 1, 4, 7, 7], "output": [2, 5, 7, 1, 4, 7]}, {"input": [0, 7, 5, 3, 4, 7, 0, 2], "output": [2, 0, 7, 5, 3, 4, 2]}, {"input": [0, 2, 7, 4, 2, 1, 0], "output": [0, 0, 2, 7, 4, 1]}, {"input": [0, 8, 7, 4, 5, 5, 5], "output": [5, 0, 8, 7, 4, 5]}, {"input": [4, 3, 8, 3, 9, 8, 6], "output": [4, 3, 8, 9, 6, 6]}, {"input": [1, 7, 9, 6, 4, 2, 3], "output": [1, 3, 7, 9, 6, 4, 2, 3]}, {"input": [3, 3, 8, 7, 9], "output": [3, 8, 7, 9, 9]}, {"input": [0, 2, 3, 0, 2], "output": [2, 0, 2, 3]}, {"input": [1, 0, 7, 0, 1, 3, 0], "output": [1, 0, 0, 7, 3]}], "ood": [], "noise": [{"input": [1, 8, 6, 6, 3, 3, 0], "output": [1, 0, 8, 0, 3, 0]}, {"input": [1, 7, 0, 3, 2, 4, 6], "output": [1, 2, 7, 0, 3, 1, 4, 6]}, {"input": [0, 3, 4, 6, 9, 2], "output": [2, 5, 3, 7, 6, 9, 8]}, {"input": [4, 4, 8, 5, 4, 3, 8, 6], "output": [4, 8, 5, 4, 6, 6]}, {"input": [3, 0, 4, 8, 2, 6, 8, 8], "output": [2, 0, 4, 2, 8, 2, 6]}]}, "test": [{"input": [4, 2, 8, 2, 2, 0, 5], "output": [4, 2, 8, 0, 5, 5]}, {"input": [1, 1, 2, 2, 4, 5], "output": [1, 5, 2, 4, 5]}, {"input": [2, 3, 1, 0, 9, 7], "output": [2, 3, 7, 1, 0, 9, 7]}, {"input": [3, 0, 0, 5, 1], "output": [3, 0, 5, 1, 1]}, {"input": [3, 2, 8, 7, 1, 6, 6], "output": [3, 2, 8, 6, 7, 1, 6]}, {"input": [2, 3, 5, 8, 6, 0, 6, 7], "output": [2, 3, 7, 5, 8, 6, 0, 7]}, {"input": [6, 5, 4, 0, 2, 1, 8, 6], "output": [6, 5, 4, 0, 2, 1, 6, 8]}, {"input": [1, 3, 9, 9, 4, 5, 7], "output": [1, 7, 3, 9, 4, 5, 7]}, {"input": [0, 4, 7, 7, 0], "output": [0, 0, 4, 7]}, {"input": [1, 8, 7, 5, 7, 5], "output": [1, 5, 8, 7, 5]}]}
{"id": "c158", "function": "def c158(x):\n    # replace each element with 1 if element N equals N, else 0\n    res = []\n    for i, j in enumerate(x):\n        if i == j:\n            res.append(1)\n        else:\n            res.append(0)\n    return res\n\n", "train": {"normal": [{"input": [8, 1, 1, 3, 4, 2, 6, 7], "output": [0, 1, 0, 1, 1, 0, 1, 1]}, {"input": [0, 1, 6, 3, 6, 5, 6, 7, 8, 9], "output": [1, 1, 0, 1, 0, 1, 1, 1, 1, 1]}, {"input": [0, 7, 2, 3, 4, 5, 8, 7, 8], "output": [1, 0, 1, 1, 1, 1, 0, 1, 1]}, {"input": [5, 5, 7, 3, 4, 3], "output": [0, 0, 0, 1, 1, 0]}, {"input": [6, 7, 8, 3, 4, 3, 6, 4, 8, 9], "output": [0, 0, 0, 1, 1, 0, 1, 0, 1, 1]}, {"input": [6, 1, 2, 3, 4, 5, 6, 0, 8, 7], "output": [0, 1, 1, 1, 1, 1, 1, 0, 1, 0]}, {"input": [0, 0, 1, 4, 4, 8], "output": [1, 0, 0, 0, 1, 0]}, {"input": [0, 1, 1, 5, 1, 5, 0, 4, 7], "output": [1, 1, 0, 0, 0, 1, 0, 0, 0]}, {"input": [8, 1, 2, 3, 8, 2, 6], "output": [0, 1, 1, 1, 0, 0, 1]}, {"input": [0, 0, 2, 3, 8, 5], "output": [1, 0, 1, 1, 0, 1]}], "ood": [], "noise": [{"input": [5, 9, 2, 8, 5, 7, 6], "output": [0, 0, 1, 0, 1, 0, 1]}, {"input": [0, 1, 6, 3, 7, 7, 7, 1, 8], "output": [0, 1, 0, 1, 1, 0, 0, 0, 1]}, {"input": [6, 5, 6, 3, 4, 5, 7, 5, 8], "output": [0, 0, 1, 1, 1, 1, 0, 0, 0]}, {"input": [0, 1, 2, 3, 3, 1], "output": [1, 1, 1, 1, 1, 0]}, {"input": [1, 1, 0, 3, 4, 4, 8, 3, 8, 3], "output": [0, 1, 1, 0, 1, 0, 0, 0, 1, 0]}]}, "test": [{"input": [5, 1, 9, 3, 4, 4, 6, 4], "output": [0, 1, 0, 1, 1, 0, 1, 0]}, {"input": [2, 6, 3, 3, 8, 2], "output": [0, 0, 0, 1, 0, 0]}, {"input": [0, 1, 7, 3, 4, 5, 6], "output": [1, 1, 0, 1, 1, 1, 1]}, {"input": [0, 7, 7, 3, 4, 5], "output": [1, 0, 0, 1, 1, 1]}, {"input": [7, 1, 2, 2, 4, 5], "output": [0, 1, 1, 0, 1, 1]}, {"input": [0, 8, 2, 3, 3, 7, 6, 7, 8], "output": [1, 0, 1, 1, 0, 0, 1, 1, 1]}, {"input": [5, 3, 8, 4, 6, 5], "output": [0, 0, 0, 0, 0, 1]}, {"input": [0, 1, 2, 0, 5, 2, 4, 7], "output": [1, 1, 1, 0, 0, 0, 0, 1]}, {"input": [0, 1, 2, 3, 4, 6, 6, 7, 2], "output": [1, 1, 1, 1, 1, 0, 1, 1, 0]}, {"input": [0, 5, 2, 3, 4, 5], "output": [1, 0, 1, 1, 1, 1]}]}
{"id": "c183", "function": "def c183(x):\n    # list the index of second elements and following equal to first element\n    res = []\n    for i in range(1, len(x)):\n        if x[i] == x[0]:\n            res.append(i)\n    return res", "train": {"normal": [{"input": [10, 10, 1, 10, 10, 5, 10, 10], "output": [1, 3, 4, 6, 7]}, {"input": [3, 7, 2, 4, 15, 4, 1], "output": []}, {"input": [0, 0, 7, 13, 5, 2, 9, 3, 10, 0], "output": [1, 9]}, {"input": [7, 3, 3, 7, 7, 5, 6, 6, 6, 14], "output": [3, 4]}, {"input": [6, 5, 8, 6, 12, 6, 6], "output": [3, 5, 6]}, {"input": [13, 3, 10, 13, 15, 3, 11, 13, 0], "output": [3, 7]}, {"input": [12, 9, 12, 9, 2, 12, 12, 12, 13, 14], "output": [2, 5, 6, 7]}, {"input": [8, 8, 13, 10, 2, 15], "output": [1]}, {"input": [13, 12, 5, 13, 11, 3, 13], "output": [3, 6]}, {"input": [0, 9, 0, 7, 14, 1, 0, 0, 0], "output": [2, 6, 7, 8]}], "ood": [], "noise": [{"input": [7, 14, 2, 13, 7, 5, 7, 7, 10, 7], "output": [5, 6, 7, 9]}, {"input": [0, 0, 3, 12, 0, 0, 4, 0, 0, 5], "output": [1, 3, 1, 7, 8]}, {"input": [14, 14, 14, 14, 14, 0, 0, 14, 12, 5], "output": [1, 1, 3, 4, 5]}, {"input": [8, 10, 15, 6, 14, 8, 8], "output": [6, 6]}, {"input": [4, 0, 13, 14, 11, 0], "output": [7]}]}, "test": [{"input": [10, 8, 10, 10, 10, 9, 14], "output": [2, 3, 4]}, {"input": [3, 9, 3, 14, 3, 3, 3, 6], "output": [2, 4, 5, 6]}, {"input": [14, 15, 5, 9, 14, 12], "output": [4]}, {"input": [14, 14, 14, 13, 5, 14, 14, 4], "output": [1, 2, 5, 6]}, {"input": [6, 6, 2, 7, 6, 15, 6], "output": [1, 4, 6]}, {"input": [14, 2, 14, 14, 14, 14, 14, 9], "output": [2, 3, 4, 5, 6]}, {"input": [7, 5, 7, 14, 12, 8, 7, 7, 7, 7], "output": [2, 6, 7, 8, 9]}, {"input": [13, 8, 4, 2, 13, 10, 13, 13, 6, 13], "output": [4, 6, 7, 9]}, {"input": [5, 5, 0, 1, 11, 11, 10, 0, 11, 10], "output": [1]}, {"input": [3, 13, 2, 7, 3, 6, 3, 3], "output": [4, 6, 7]}]}
{"id": "c014", "function": "def c014(x):\n    # remove all but elements 2 through 5\n    return x[2:5]\n\n", "train": {"normal": [{"input": [42, 76, 32, 90, 96, 7], "output": [32, 90, 96]}, {"input": [71, 36, 3, 28, 62, 91, 23, 99], "output": [3, 28, 62]}, {"input": [59, 55, 87, 33, 99, 41, 74], "output": [87, 33, 99]}, {"input": [58, 41, 71, 10, 16, 93, 97], "output": [71, 10, 16]}, {"input": [82, 10, 65, 94, 90, 78], "output": [65, 94, 90]}, {"input": [27, 38, 37, 92, 77, 95, 16], "output": [37, 92, 77]}, {"input": [88, 25, 5, 86, 74, 93, 20, 10], "output": [5, 86, 74]}, {"input": [88, 11, 12, 78, 84, 91, 67], "output": [12, 78, 84]}, {"input": [60, 60, 94, 10, 35, 14], "output": [94, 10, 35]}, {"input": [29, 35, 46, 5, 63, 5], "output": [46, 5, 63]}], "ood": [], "noise": [{"input": [74, 7, 58, 15, 83, 5, 39, 65], "output": [53, 17, 83]}, {"input": [46, 20, 44, 8, 35, 7, 95, 82], "output": [44, 8, 44]}, {"input": [55, 71, 8, 77, 58, 44], "output": [63, 77, 60]}, {"input": [52, 84, 94, 86, 67, 49, 0, 7], "output": [78, 86, 68]}, {"input": [12, 80, 10, 81, 11, 95, 9, 40], "output": [10, 57, 26]}]}, "test": [{"input": [38, 57, 88, 67, 61, 85, 89, 37], "output": [88, 67, 61]}, {"input": [96, 33, 34, 46, 56, 47, 56], "output": [34, 46, 56]}, {"input": [82, 74, 69, 19, 36, 82], "output": [69, 19, 36]}, {"input": [80, 72, 80, 72, 87, 42, 22], "output": [80, 72, 87]}, {"input": [49, 20, 65, 68, 51, 6, 49, 38], "output": [65, 68, 51]}, {"input": [67, 56, 42, 80, 18, 31, 53, 73], "output": [42, 80, 18]}, {"input": [43, 78, 0, 98, 23, 93], "output": [0, 98, 23]}, {"input": [56, 37, 39, 91, 3, 67, 30, 31], "output": [39, 91, 3]}, {"input": [42, 50, 96, 38, 77, 3, 99], "output": [96, 38, 77]}, {"input": [17, 39, 55, 9, 48, 4], "output": [55, 9, 48]}]}
{"id": "c098", "function": "def c098(x):\n    # add the index to each element\n    return [i+j for j, i in enumerate(x)]\n\n", "train": {"normal": [{"input": [6, 8, 0, 0, 9, 2, 8, 9], "output": [6, 9, 2, 3, 13, 7, 14, 16]}, {"input": [4, 3, 0, 5, 2, 2, 4], "output": [4, 4, 2, 8, 6, 7, 10]}, {"input": [7, 4, 4, 8, 1, 6, 4, 5], "output": [7, 5, 6, 11, 5, 11, 10, 12]}, {"input": [4, 4, 4, 6, 1, 1, 5], "output": [4, 5, 6, 9, 5, 6, 11]}, {"input": [7, 5, 8, 2, 3, 1, 0], "output": [7, 6, 10, 5, 7, 6, 6]}, {"input": [7, 3, 5, 0, 6, 9], "output": [7, 4, 7, 3, 10, 14]}, {"input": [1, 1, 9, 1, 8, 7], "output": [1, 2, 11, 4, 12, 12]}, {"input": [0, 9, 3, 4, 6, 8, 5], "output": [0, 10, 5, 7, 10, 13, 11]}, {"input": [3, 6, 0, 9, 6, 7, 8, 9], "output": [3, 7, 2, 12, 10, 12, 14, 16]}, {"input": [7, 5, 6, 1, 0, 1, 6, 8], "output": [7, 6, 8, 4, 4, 6, 12, 15]}], "ood": [], "noise": [{"input": [1, 2, 9, 1, 9, 2], "output": [1, 1, 4, 4, 13, 7]}, {"input": [6, 0, 2, 4, 2, 2, 3], "output": [6, 1, 4, 3, 6, 1, 2]}, {"input": [1, 7, 1, 5, 5, 3, 7, 9], "output": [1, 8, 3, 5, 9, 8, 7, 16]}, {"input": [5, 8, 3, 9, 5, 8, 9], "output": [10, 5, 5, 12, 9, 13, 15]}, {"input": [9, 7, 7, 6, 2, 9], "output": [9, 8, 11, 14, 14, 14]}]}, "test": [{"input": [0, 7, 3, 9, 5, 9, 2], "output": [0, 8, 5, 12, 9, 14, 8]}, {"input": [6, 7, 5, 3, 8, 9], "output": [6, 8, 7, 6, 12, 14]}, {"input": [9, 3, 5, 3, 3, 2, 2], "output": [9, 4, 7, 6, 7, 7, 8]}, {"input": [7, 2, 8, 8, 4, 9, 0], "output": [7, 3, 10, 11, 8, 14, 6]}, {"input": [4, 3, 5, 7, 1, 2, 9, 0], "output": [4, 4, 7, 10, 5, 7, 15, 7]}, {"input": [0, 1, 4, 5, 5, 9, 0, 0], "output": [0, 2, 6, 8, 9, 14, 6, 7]}, {"input": [8, 7, 8, 6, 1, 1, 8, 1], "output": [8, 8, 10, 9, 5, 6, 14, 8]}, {"input": [1, 9, 5, 3, 6, 3], "output": [1, 10, 7, 6, 10, 8]}, {"input": [3, 8, 6, 1, 8, 3, 5, 9], "output": [3, 9, 8, 4, 12, 8, 11, 16]}, {"input": [5, 4, 8, 3, 7, 4, 3, 3], "output": [5, 5, 10, 6, 11, 9, 9, 10]}]}
{"id": "c209", "function": "def c209(x):\n    # elements in ascending order, insert sum of smallest and largest element at index 3\n    x = sorted(x)\n    x.insert(3, x[0] + x[-1])\n    return x\n\n", "train": {"normal": [{"input": [22, 7, 17, 16, 14], "output": [7, 14, 16, 29, 17, 22]}, {"input": [11, 11, 12, 21, 14, 19, 25], "output": [11, 11, 12, 36, 14, 19, 21, 25]}, {"input": [11, 19, 15, 29, 6, 20, 1, 29], "output": [1, 6, 11, 30, 15, 19, 20, 29, 29]}, {"input": [6, 15, 21, 9, 28, 7], "output": [6, 7, 9, 34, 15, 21, 28]}, {"input": [6, 4, 18, 17, 7, 30, 6, 28], "output": [4, 6, 6, 34, 7, 17, 18, 28, 30]}, {"input": [13, 3, 16, 14, 20, 25], "output": [3, 13, 14, 28, 16, 20, 25]}, {"input": [1, 11, 13, 13, 19, 3, 19, 16], "output": [1, 3, 11, 20, 13, 13, 16, 19, 19]}, {"input": [15, 22, 14, 24, 24, 30, 8], "output": [8, 14, 15, 38, 22, 24, 24, 30]}, {"input": [28, 0, 22, 11, 19], "output": [0, 11, 19, 28, 22, 28]}, {"input": [26, 8, 5, 22, 28, 25], "output": [5, 8, 22, 33, 25, 26, 28]}], "ood": [], "noise": [{"input": [7, 3, 5, 29, 10, 8], "output": [3, 5, 7, 4, 8, 14, 14]}, {"input": [30, 3, 13, 7, 21, 0, 12], "output": [14, 3, 20, 30, 21, 13, 21, 30]}, {"input": [13, 24, 15, 5, 3], "output": [26, 27, 13, 27, 23, 24]}, {"input": [5, 25, 25, 20, 25, 27], "output": [5, 6, 25, 32, 25, 31, 27]}, {"input": [23, 23, 2, 26, 15, 8, 20, 13], "output": [2, 2, 13, 28, 15, 20, 23, 23, 26]}]}, "test": [{"input": [25, 27, 9, 26, 28, 19, 2], "output": [2, 9, 19, 30, 25, 26, 27, 28]}, {"input": [25, 5, 5, 26, 7, 13, 12, 14], "output": [5, 5, 7, 31, 12, 13, 14, 25, 26]}, {"input": [22, 13, 21, 22, 13, 18], "output": [13, 13, 18, 35, 21, 22, 22]}, {"input": [30, 30, 8, 27, 13], "output": [8, 13, 27, 38, 30, 30]}, {"input": [25, 22, 14, 20, 10, 21], "output": [10, 14, 20, 35, 21, 22, 25]}, {"input": [11, 12, 9, 6, 13], "output": [6, 9, 11, 19, 12, 13]}, {"input": [8, 2, 1, 15, 22, 4, 25], "output": [1, 2, 4, 26, 8, 15, 22, 25]}, {"input": [29, 5, 18, 12, 12], "output": [5, 12, 12, 34, 18, 29]}, {"input": [16, 0, 26, 16, 6], "output": [0, 6, 16, 26, 16, 26]}, {"input": [17, 4, 27, 15, 15], "output": [4, 15, 15, 31, 17, 27]}]}
{"id": "c211", "function": "def c211(x):\n    # reverse input, insert fouth element and fifth element so they are fourth and third from the end respectively\n    x = x[::-1]\n    x.insert(-3, x[3])\n    x.insert(-4, x[4])\n    return x\n\n", "train": {"normal": [{"input": [42, 94, 71, 44, 50, 49, 35, 13], "output": [13, 35, 49, 50, 44, 44, 50, 71, 94, 42]}, {"input": [21, 33, 86, 9, 48, 89, 72], "output": [72, 89, 48, 9, 9, 9, 86, 33, 21]}, {"input": [84, 4, 34, 33, 29, 20], "output": [20, 29, 33, 34, 34, 34, 4, 84]}, {"input": [7, 37, 92, 49, 91, 80], "output": [80, 91, 49, 92, 92, 92, 37, 7]}, {"input": [3, 10, 63, 61, 18, 63, 85, 77], "output": [77, 85, 63, 18, 61, 61, 18, 63, 10, 3]}, {"input": [39, 5, 5, 60, 85, 70, 86], "output": [86, 70, 85, 60, 60, 60, 5, 5, 39]}, {"input": [66, 19, 84, 13, 55, 44, 67], "output": [67, 44, 55, 13, 13, 13, 84, 19, 66]}, {"input": [9, 64, 95, 86, 40, 36], "output": [36, 40, 86, 95, 95, 95, 64, 9]}, {"input": [81, 43, 23, 99, 24, 10], "output": [10, 24, 99, 23, 23, 23, 43, 81]}, {"input": [4, 18, 60, 48, 48, 39, 83, 6], "output": [6, 83, 39, 48, 48, 48, 48, 60, 18, 4]}], "ood": [], "noise": [{"input": [13, 10, 24, 34, 96, 35], "output": [26, 38, 34, 24, 24, 56, 10, 13]}, {"input": [35, 87, 9, 84, 64, 60], "output": [60, 64, 84, 23, 62, 9, 87, 35]}, {"input": [4, 90, 60, 62, 28, 15], "output": [15, 28, 19, 48, 60, 60, 90, 4]}, {"input": [5, 66, 98, 55, 93, 0], "output": [0, 93, 55, 12, 98, 98, 66, 5]}, {"input": [22, 38, 92, 19, 11, 68], "output": [45, 11, 19, 92, 92, 92, 38, 22]}]}, "test": [{"input": [62, 1, 84, 69, 94, 18], "output": [18, 94, 69, 84, 84, 84, 1, 62]}, {"input": [93, 51, 29, 58, 13, 26], "output": [26, 13, 58, 29, 29, 29, 51, 93]}, {"input": [45, 80, 12, 35, 97, 14], "output": [14, 97, 35, 12, 12, 12, 80, 45]}, {"input": [30, 44, 39, 2, 98, 36], "output": [36, 98, 2, 39, 39, 39, 44, 30]}, {"input": [98, 50, 81, 99, 39, 18, 17, 79], "output": [79, 17, 18, 39, 99, 99, 39, 81, 50, 98]}, {"input": [41, 34, 71, 50, 36, 97, 48, 9], "output": [9, 48, 97, 36, 50, 50, 36, 71, 34, 41]}, {"input": [90, 97, 20, 33, 86, 80, 4, 90], "output": [90, 4, 80, 86, 33, 33, 86, 20, 97, 90]}, {"input": [62, 88, 98, 44, 63, 89, 50, 26], "output": [26, 50, 89, 63, 44, 44, 63, 98, 88, 62]}, {"input": [66, 70, 40, 72, 99, 10], "output": [10, 99, 72, 40, 40, 40, 70, 66]}, {"input": [97, 39, 19, 19, 85, 32], "output": [32, 85, 19, 19, 19, 19, 39, 97]}]}
